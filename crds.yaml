---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  labels:
    app.kubernetes.io/component: source-controller
    app.kubernetes.io/instance: fluxcd
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: v0.37.0
  name: buckets.source.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: source.toolkit.fluxcd.io
  names:
    kind: Bucket
    listKind: BucketList
    plural: buckets
    singular: bucket
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.endpoint
          name: Endpoint
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Bucket is the Schema for the buckets API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BucketSpec defines the desired state of an S3 compatible bucket
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors to which this ACL applies. Items in this list are evaluated using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which this ACL applies. An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                bucketName:
                  description: The bucket name.
                  type: string
                endpoint:
                  description: The bucket endpoint address.
                  type: string
                ignore:
                  description: Ignore overrides the set of excluded patterns in the .sourceignore format (which is the same as .gitignore). If not provided, a default will be used, consult the documentation for your version to find out what those are.
                  type: string
                insecure:
                  description: Insecure allows connecting to a non-TLS S3 HTTP endpoint.
                  type: boolean
                interval:
                  description: The interval at which to check for bucket updates.
                  type: string
                provider:
                  default: generic
                  description: The S3 compatible storage provider name, default ('generic').
                  enum:
                    - generic
                    - aws
                    - gcp
                  type: string
                region:
                  description: The bucket region.
                  type: string
                secretRef:
                  description: The name of the secret containing authentication credentials for the Bucket.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation of this source.
                  type: boolean
                timeout:
                  default: 60s
                  description: The timeout for download operations, defaults to 60s.
                  type: string
              required:
                - bucketName
                - endpoint
                - interval
              type: object
            status:
              default:
                observedGeneration: -1
              description: BucketStatus defines the observed state of a bucket
              properties:
                artifact:
                  description: Artifact represents the output of the last successful Bucket sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to the last update of this artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: Revision is a human readable identifier traceable in the origin source system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                    - path
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the Bucket.
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most recent reconcile request value, so a change of the annotation value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: URL is the download link for the artifact output of the last Bucket sync.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.endpoint
          name: Endpoint
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: Bucket is the Schema for the buckets API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BucketSpec specifies the required configuration to produce an Artifact for an object storage bucket.
              properties:
                accessFrom:
                  description: 'AccessFrom specifies an Access Control List for allowing cross-namespace references to this object. NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092'
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors to which this ACL applies. Items in this list are evaluated using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which this ACL applies. An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                bucketName:
                  description: BucketName is the name of the object storage bucket.
                  type: string
                endpoint:
                  description: Endpoint is the object storage address the BucketName is located at.
                  type: string
                ignore:
                  description: Ignore overrides the set of excluded patterns in the .sourceignore format (which is the same as .gitignore). If not provided, a default will be used, consult the documentation for your version to find out what those are.
                  type: string
                insecure:
                  description: Insecure allows connecting to a non-TLS HTTP Endpoint.
                  type: boolean
                interval:
                  description: Interval at which to check the Endpoint for updates.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                provider:
                  default: generic
                  description: Provider of the object storage bucket. Defaults to 'generic', which expects an S3 (API) compatible object storage.
                  enum:
                    - generic
                    - aws
                    - gcp
                    - azure
                  type: string
                region:
                  description: Region of the Endpoint where the BucketName is located in.
                  type: string
                secretRef:
                  description: SecretRef specifies the Secret containing authentication credentials for the Bucket.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: Suspend tells the controller to suspend the reconciliation of this Bucket.
                  type: boolean
                timeout:
                  default: 60s
                  description: Timeout for fetch operations, defaults to 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
              required:
                - bucketName
                - endpoint
                - interval
              type: object
            status:
              default:
                observedGeneration: -1
              description: BucketStatus records the observed state of a Bucket.
              properties:
                artifact:
                  description: Artifact represents the last successful Bucket reconciliation.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the Artifact file.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to the last update of the Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: Path is the relative file path of the Artifact. It can be used to locate the file in the root of the Artifact storage on the local file system of the controller managing the Source.
                      type: string
                    revision:
                      description: Revision is a human-readable identifier traceable in the origin source system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: URL is the HTTP address of the Artifact as exposed by the controller managing the Source. It can be used to retrieve the Artifact for consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - path
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the Bucket.
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most recent reconcile request value, so a change of the annotation value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation of the Bucket object.
                  format: int64
                  type: integer
                observedIgnore:
                  description: ObservedIgnore is the observed exclusion patterns used for constructing the source artifact.
                  type: string
                url:
                  description: URL is the dynamic fetch link for the latest Artifact. It is provided on a "best effort" basis, and using the precise BucketStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  labels:
    app.kubernetes.io/component: source-controller
    app.kubernetes.io/instance: fluxcd
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: v0.37.0
  name: gitrepositories.source.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: source.toolkit.fluxcd.io
  names:
    kind: GitRepository
    listKind: GitRepositoryList
    plural: gitrepositories
    shortNames:
      - gitrepo
    singular: gitrepository
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: GitRepository is the Schema for the gitrepositories API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: GitRepositorySpec defines the desired state of a Git repository.
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors to which this ACL applies. Items in this list are evaluated using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which this ACL applies. An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                gitImplementation:
                  default: go-git
                  description: Determines which git client library to use. Defaults to go-git, valid values are ('go-git', 'libgit2').
                  enum:
                    - go-git
                    - libgit2
                  type: string
                ignore:
                  description: Ignore overrides the set of excluded patterns in the .sourceignore format (which is the same as .gitignore). If not provided, a default will be used, consult the documentation for your version to find out what those are.
                  type: string
                include:
                  description: Extra git repositories to map into the repository
                  items:
                    description: GitRepositoryInclude defines a source with a from and to path.
                    properties:
                      fromPath:
                        description: The path to copy contents from, defaults to the root directory.
                        type: string
                      repository:
                        description: Reference to a GitRepository to include.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                          - name
                        type: object
                      toPath:
                        description: The path to copy contents to, defaults to the name of the source ref.
                        type: string
                    required:
                      - repository
                    type: object
                  type: array
                interval:
                  description: The interval at which to check for repository updates.
                  type: string
                recurseSubmodules:
                  description: When enabled, after the clone is created, initializes all submodules within, using their default settings. This option is available only when using the 'go-git' GitImplementation.
                  type: boolean
                ref:
                  description: The Git reference to checkout and monitor for changes, defaults to master branch.
                  properties:
                    branch:
                      description: The Git branch to checkout, defaults to master.
                      type: string
                    commit:
                      description: The Git commit SHA to checkout, if specified Tag filters will be ignored.
                      type: string
                    semver:
                      description: The Git tag semver expression, takes precedence over Tag.
                      type: string
                    tag:
                      description: The Git tag to checkout, takes precedence over Branch.
                      type: string
                  type: object
                secretRef:
                  description: The secret name containing the Git credentials. For HTTPS repositories the secret must contain username and password fields. For SSH repositories the secret must contain identity and known_hosts fields.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation of this source.
                  type: boolean
                timeout:
                  default: 60s
                  description: The timeout for remote Git operations like cloning, defaults to 60s.
                  type: string
                url:
                  description: The repository URL, can be a HTTP/S or SSH address.
                  pattern: ^(http|https|ssh)://.*$
                  type: string
                verify:
                  description: Verify OpenPGP signature for the Git commit HEAD points to.
                  properties:
                    mode:
                      description: Mode describes what git object should be verified, currently ('head').
                      enum:
                        - head
                      type: string
                    secretRef:
                      description: The secret name containing the public keys of all trusted Git authors.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - mode
                  type: object
              required:
                - interval
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: GitRepositoryStatus defines the observed state of a Git repository.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful repository sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to the last update of this artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: Revision is a human readable identifier traceable in the origin source system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                    - path
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the GitRepository.
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                includedArtifacts:
                  description: IncludedArtifacts represents the included artifacts from the last successful repository sync.
                  items:
                    description: Artifact represents the output of a source synchronisation.
                    properties:
                      checksum:
                        description: Checksum is the SHA256 checksum of the artifact.
                        type: string
                      lastUpdateTime:
                        description: LastUpdateTime is the timestamp corresponding to the last update of this artifact.
                        format: date-time
                        type: string
                      path:
                        description: Path is the relative file path of this artifact.
                        type: string
                      revision:
                        description: Revision is a human readable identifier traceable in the origin source system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm chart version, etc.
                        type: string
                      url:
                        description: URL is the HTTP address of this artifact.
                        type: string
                    required:
                      - path
                      - url
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most recent reconcile request value, so a change of the annotation value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: URL is the download link for the artifact output of the last repository sync.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: GitRepository is the Schema for the gitrepositories API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: GitRepositorySpec specifies the required configuration to produce an Artifact for a Git repository.
              properties:
                accessFrom:
                  description: 'AccessFrom specifies an Access Control List for allowing cross-namespace references to this object. NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092'
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors to which this ACL applies. Items in this list are evaluated using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which this ACL applies. An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                gitImplementation:
                  default: go-git
                  description: GitImplementation specifies which Git client library implementation to use. Defaults to 'go-git', valid values are ('go-git', 'libgit2').
                  enum:
                    - go-git
                    - libgit2
                  type: string
                ignore:
                  description: Ignore overrides the set of excluded patterns in the .sourceignore format (which is the same as .gitignore). If not provided, a default will be used, consult the documentation for your version to find out what those are.
                  type: string
                include:
                  description: Include specifies a list of GitRepository resources which Artifacts should be included in the Artifact produced for this GitRepository.
                  items:
                    description: GitRepositoryInclude specifies a local reference to a GitRepository which Artifact (sub-)contents must be included, and where they should be placed.
                    properties:
                      fromPath:
                        description: FromPath specifies the path to copy contents from, defaults to the root of the Artifact.
                        type: string
                      repository:
                        description: GitRepositoryRef specifies the GitRepository which Artifact contents must be included.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                          - name
                        type: object
                      toPath:
                        description: ToPath specifies the path to copy contents to, defaults to the name of the GitRepositoryRef.
                        type: string
                    required:
                      - repository
                    type: object
                  type: array
                interval:
                  description: Interval at which to check the GitRepository for updates.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                recurseSubmodules:
                  description: RecurseSubmodules enables the initialization of all submodules within the GitRepository as cloned from the URL, using their default settings. This option is available only when using the 'go-git' GitImplementation.
                  type: boolean
                ref:
                  description: Reference specifies the Git reference to resolve and monitor for changes, defaults to the 'master' branch.
                  properties:
                    branch:
                      description: "Branch to check out, defaults to 'master' if no other field is defined. \n When GitRepositorySpec.GitImplementation is set to 'go-git', a shallow clone of the specified branch is performed."
                      type: string
                    commit:
                      description: "Commit SHA to check out, takes precedence over all reference fields. \n When GitRepositorySpec.GitImplementation is set to 'go-git', this can be combined with Branch to shallow clone the branch, in which the commit is expected to exist."
                      type: string
                    semver:
                      description: SemVer tag expression to check out, takes precedence over Tag.
                      type: string
                    tag:
                      description: Tag to check out, takes precedence over Branch.
                      type: string
                  type: object
                secretRef:
                  description: SecretRef specifies the Secret containing authentication credentials for the GitRepository. For HTTPS repositories the Secret must contain 'username' and 'password' fields. For SSH repositories the Secret must contain 'identity' and 'known_hosts' fields.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: Suspend tells the controller to suspend the reconciliation of this GitRepository.
                  type: boolean
                timeout:
                  default: 60s
                  description: Timeout for Git operations like cloning, defaults to 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                url:
                  description: URL specifies the Git repository URL, it can be an HTTP/S or SSH address.
                  pattern: ^(http|https|ssh)://.*$
                  type: string
                verify:
                  description: Verification specifies the configuration to verify the Git commit signature(s).
                  properties:
                    mode:
                      description: Mode specifies what Git object should be verified, currently ('head').
                      enum:
                        - head
                      type: string
                    secretRef:
                      description: SecretRef specifies the Secret containing the public keys of trusted Git authors.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - mode
                  type: object
              required:
                - interval
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: GitRepositoryStatus records the observed state of a Git repository.
              properties:
                artifact:
                  description: Artifact represents the last successful GitRepository reconciliation.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the Artifact file.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to the last update of the Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: Path is the relative file path of the Artifact. It can be used to locate the file in the root of the Artifact storage on the local file system of the controller managing the Source.
                      type: string
                    revision:
                      description: Revision is a human-readable identifier traceable in the origin source system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: URL is the HTTP address of the Artifact as exposed by the controller managing the Source. It can be used to retrieve the Artifact for consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - path
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the GitRepository.
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                contentConfigChecksum:
                  description: "ContentConfigChecksum is a checksum of all the configurations related to the content of the source artifact: - .spec.ignore - .spec.recurseSubmodules - .spec.included and the checksum of the included artifacts observed in .status.observedGeneration version of the object. This can be used to determine if the content of the included repository has changed. It has the format of `<algo>:<checksum>`, for example: `sha256:<checksum>`. \n Deprecated: Replaced with explicit fields for observed artifact content config in the status."
                  type: string
                includedArtifacts:
                  description: IncludedArtifacts contains a list of the last successfully included Artifacts as instructed by GitRepositorySpec.Include.
                  items:
                    description: Artifact represents the output of a Source reconciliation.
                    properties:
                      checksum:
                        description: Checksum is the SHA256 checksum of the Artifact file.
                        type: string
                      lastUpdateTime:
                        description: LastUpdateTime is the timestamp corresponding to the last update of the Artifact.
                        format: date-time
                        type: string
                      metadata:
                        additionalProperties:
                          type: string
                        description: Metadata holds upstream information such as OCI annotations.
                        type: object
                      path:
                        description: Path is the relative file path of the Artifact. It can be used to locate the file in the root of the Artifact storage on the local file system of the controller managing the Source.
                        type: string
                      revision:
                        description: Revision is a human-readable identifier traceable in the origin source system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                        type: string
                      size:
                        description: Size is the number of bytes in the file.
                        format: int64
                        type: integer
                      url:
                        description: URL is the HTTP address of the Artifact as exposed by the controller managing the Source. It can be used to retrieve the Artifact for consumption, e.g. by another controller applying the Artifact contents.
                        type: string
                    required:
                      - path
                      - url
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most recent reconcile request value, so a change of the annotation value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation of the GitRepository object.
                  format: int64
                  type: integer
                observedIgnore:
                  description: ObservedIgnore is the observed exclusion patterns used for constructing the source artifact.
                  type: string
                observedInclude:
                  description: ObservedInclude is the observed list of GitRepository resources used to to produce the current Artifact.
                  items:
                    description: GitRepositoryInclude specifies a local reference to a GitRepository which Artifact (sub-)contents must be included, and where they should be placed.
                    properties:
                      fromPath:
                        description: FromPath specifies the path to copy contents from, defaults to the root of the Artifact.
                        type: string
                      repository:
                        description: GitRepositoryRef specifies the GitRepository which Artifact contents must be included.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                          - name
                        type: object
                      toPath:
                        description: ToPath specifies the path to copy contents to, defaults to the name of the GitRepositoryRef.
                        type: string
                    required:
                      - repository
                    type: object
                  type: array
                observedRecurseSubmodules:
                  description: ObservedRecurseSubmodules is the observed resource submodules configuration used to produce the current Artifact.
                  type: boolean
                url:
                  description: URL is the dynamic fetch link for the latest Artifact. It is provided on a "best effort" basis, and using the precise GitRepositoryStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  labels:
    app.kubernetes.io/component: source-controller
    app.kubernetes.io/instance: fluxcd
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: v0.37.0
  name: helmcharts.source.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: source.toolkit.fluxcd.io
  names:
    kind: HelmChart
    listKind: HelmChartList
    plural: helmcharts
    shortNames:
      - hc
    singular: helmchart
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.chart
          name: Chart
          type: string
        - jsonPath: .spec.version
          name: Version
          type: string
        - jsonPath: .spec.sourceRef.kind
          name: Source Kind
          type: string
        - jsonPath: .spec.sourceRef.name
          name: Source Name
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: HelmChart is the Schema for the helmcharts API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: HelmChartSpec defines the desired state of a Helm chart.
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors to which this ACL applies. Items in this list are evaluated using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which this ACL applies. An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                chart:
                  description: The name or path the Helm chart is available at in the SourceRef.
                  type: string
                interval:
                  description: The interval at which to check the Source for updates.
                  type: string
                reconcileStrategy:
                  default: ChartVersion
                  description: Determines what enables the creation of a new artifact. Valid values are ('ChartVersion', 'Revision'). See the documentation of the values for an explanation on their behavior. Defaults to ChartVersion when omitted.
                  enum:
                    - ChartVersion
                    - Revision
                  type: string
                sourceRef:
                  description: The reference to the Source the chart is available at.
                  properties:
                    apiVersion:
                      description: APIVersion of the referent.
                      type: string
                    kind:
                      description: Kind of the referent, valid values are ('HelmRepository', 'GitRepository', 'Bucket').
                      enum:
                        - HelmRepository
                        - GitRepository
                        - Bucket
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation of this source.
                  type: boolean
                valuesFile:
                  description: Alternative values file to use as the default chart values, expected to be a relative path in the SourceRef. Deprecated in favor of ValuesFiles, for backwards compatibility the file defined here is merged before the ValuesFiles items. Ignored when omitted.
                  type: string
                valuesFiles:
                  description: Alternative list of values files to use as the chart values (values.yaml is not included by default), expected to be a relative path in the SourceRef. Values files are merged in the order of this list with the last file overriding the first. Ignored when omitted.
                  items:
                    type: string
                  type: array
                version:
                  default: '*'
                  description: The chart version semver expression, ignored for charts from GitRepository and Bucket sources. Defaults to latest when omitted.
                  type: string
              required:
                - chart
                - interval
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmChartStatus defines the observed state of the HelmChart.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful chart sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to the last update of this artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: Revision is a human readable identifier traceable in the origin source system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                    - path
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmChart.
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most recent reconcile request value, so a change of the annotation value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: URL is the download link for the last chart pulled.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.chart
          name: Chart
          type: string
        - jsonPath: .spec.version
          name: Version
          type: string
        - jsonPath: .spec.sourceRef.kind
          name: Source Kind
          type: string
        - jsonPath: .spec.sourceRef.name
          name: Source Name
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: HelmChart is the Schema for the helmcharts API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: HelmChartSpec specifies the desired state of a Helm chart.
              properties:
                accessFrom:
                  description: 'AccessFrom specifies an Access Control List for allowing cross-namespace references to this object. NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092'
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors to which this ACL applies. Items in this list are evaluated using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which this ACL applies. An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                chart:
                  description: Chart is the name or path the Helm chart is available at in the SourceRef.
                  type: string
                interval:
                  description: Interval is the interval at which to check the Source for updates.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                reconcileStrategy:
                  default: ChartVersion
                  description: ReconcileStrategy determines what enables the creation of a new artifact. Valid values are ('ChartVersion', 'Revision'). See the documentation of the values for an explanation on their behavior. Defaults to ChartVersion when omitted.
                  enum:
                    - ChartVersion
                    - Revision
                  type: string
                sourceRef:
                  description: SourceRef is the reference to the Source the chart is available at.
                  properties:
                    apiVersion:
                      description: APIVersion of the referent.
                      type: string
                    kind:
                      description: Kind of the referent, valid values are ('HelmRepository', 'GitRepository', 'Bucket').
                      enum:
                        - HelmRepository
                        - GitRepository
                        - Bucket
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: Suspend tells the controller to suspend the reconciliation of this source.
                  type: boolean
                valuesFile:
                  description: ValuesFile is an alternative values file to use as the default chart values, expected to be a relative path in the SourceRef. Deprecated in favor of ValuesFiles, for backwards compatibility the file specified here is merged before the ValuesFiles items. Ignored when omitted.
                  type: string
                valuesFiles:
                  description: ValuesFiles is an alternative list of values files to use as the chart values (values.yaml is not included by default), expected to be a relative path in the SourceRef. Values files are merged in the order of this list with the last file overriding the first. Ignored when omitted.
                  items:
                    type: string
                  type: array
                verify:
                  description: Verify contains the secret name containing the trusted public keys used to verify the signature and specifies which provider to use to check whether OCI image is authentic. This field is only supported when using HelmRepository source with spec.type 'oci'. Chart dependencies, which are not bundled in the umbrella chart artifact, are not verified.
                  properties:
                    provider:
                      default: cosign
                      description: Provider specifies the technology used to sign the OCI Artifact.
                      enum:
                        - cosign
                      type: string
                    secretRef:
                      description: SecretRef specifies the Kubernetes Secret containing the trusted public keys.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - provider
                  type: object
                version:
                  default: '*'
                  description: Version is the chart version semver expression, ignored for charts from GitRepository and Bucket sources. Defaults to latest when omitted.
                  type: string
              required:
                - chart
                - interval
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmChartStatus records the observed state of the HelmChart.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful reconciliation.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the Artifact file.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to the last update of the Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: Path is the relative file path of the Artifact. It can be used to locate the file in the root of the Artifact storage on the local file system of the controller managing the Source.
                      type: string
                    revision:
                      description: Revision is a human-readable identifier traceable in the origin source system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: URL is the HTTP address of the Artifact as exposed by the controller managing the Source. It can be used to retrieve the Artifact for consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - path
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmChart.
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most recent reconcile request value, so a change of the annotation value can be detected.
                  type: string
                observedChartName:
                  description: ObservedChartName is the last observed chart name as specified by the resolved chart reference.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation of the HelmChart object.
                  format: int64
                  type: integer
                observedSourceArtifactRevision:
                  description: ObservedSourceArtifactRevision is the last observed Artifact.Revision of the HelmChartSpec.SourceRef.
                  type: string
                url:
                  description: URL is the dynamic fetch link for the latest Artifact. It is provided on a "best effort" basis, and using the precise BucketStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  labels:
    app.kubernetes.io/component: helm-controller
    app.kubernetes.io/instance: fluxcd
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: v0.37.0
  name: helmreleases.helm.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: helm.toolkit.fluxcd.io
  names:
    kind: HelmRelease
    listKind: HelmReleaseList
    plural: helmreleases
    shortNames:
      - hr
    singular: helmrelease
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v2beta1
      schema:
        openAPIV3Schema:
          description: HelmRelease is the Schema for the helmreleases API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: HelmReleaseSpec defines the desired state of a Helm release.
              properties:
                chart:
                  description: Chart defines the template of the v1beta2.HelmChart that should be created for this HelmRelease.
                  properties:
                    spec:
                      description: Spec holds the template for the v1beta2.HelmChartSpec for this HelmRelease.
                      properties:
                        chart:
                          description: The name or path the Helm chart is available at in the SourceRef.
                          type: string
                        interval:
                          description: Interval at which to check the v1beta2.Source for updates. Defaults to 'HelmReleaseSpec.Interval'.
                          pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                          type: string
                        reconcileStrategy:
                          default: ChartVersion
                          description: Determines what enables the creation of a new artifact. Valid values are ('ChartVersion', 'Revision'). See the documentation of the values for an explanation on their behavior. Defaults to ChartVersion when omitted.
                          enum:
                            - ChartVersion
                            - Revision
                          type: string
                        sourceRef:
                          description: The name and namespace of the v1beta2.Source the chart is available at.
                          properties:
                            apiVersion:
                              description: APIVersion of the referent.
                              type: string
                            kind:
                              description: Kind of the referent.
                              enum:
                                - HelmRepository
                                - GitRepository
                                - Bucket
                              type: string
                            name:
                              description: Name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: Namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              type: string
                          required:
                            - name
                          type: object
                        valuesFile:
                          description: Alternative values file to use as the default chart values, expected to be a relative path in the SourceRef. Deprecated in favor of ValuesFiles, for backwards compatibility the file defined here is merged before the ValuesFiles items. Ignored when omitted.
                          type: string
                        valuesFiles:
                          description: Alternative list of values files to use as the chart values (values.yaml is not included by default), expected to be a relative path in the SourceRef. Values files are merged in the order of this list with the last file overriding the first. Ignored when omitted.
                          items:
                            type: string
                          type: array
                        verify:
                          description: Verify contains the secret name containing the trusted public keys used to verify the signature and specifies which provider to use to check whether OCI image is authentic. This field is only supported for OCI sources. Chart dependencies, which are not bundled in the umbrella chart artifact, are not verified.
                          properties:
                            provider:
                              default: cosign
                              description: Provider specifies the technology used to sign the OCI Helm chart.
                              enum:
                                - cosign
                              type: string
                            secretRef:
                              description: SecretRef specifies the Kubernetes Secret containing the trusted public keys.
                              properties:
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - provider
                          type: object
                        version:
                          default: '*'
                          description: Version semver expression, ignored for charts from v1beta2.GitRepository and v1beta2.Bucket sources. Defaults to latest when omitted.
                          type: string
                      required:
                        - chart
                        - sourceRef
                      type: object
                  required:
                    - spec
                  type: object
                dependsOn:
                  description: DependsOn may contain a meta.NamespacedObjectReference slice with references to HelmRelease resources that must be ready before this HelmRelease can be reconciled.
                  items:
                    description: NamespacedObjectReference contains enough information to locate the referenced Kubernetes resource object in any namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                install:
                  description: Install holds the configuration for Helm install actions for this HelmRelease.
                  properties:
                    crds:
                      description: "CRDs upgrade CRDs from the Helm Chart's crds directory according to the CRD upgrade policy provided here. Valid values are `Skip`, `Create` or `CreateReplace`. Default is `Create` and if omitted CRDs are installed but not updated. \n Skip: do neither install nor replace (update) any CRDs. \n Create: new CRDs are created, existing CRDs are neither updated nor deleted. \n CreateReplace: new CRDs are created, existing CRDs are updated (replaced) but not deleted. \n By default, CRDs are applied (installed) during Helm install action. With this option users can opt-in to CRD replace existing CRDs on Helm install actions, which is not (yet) natively supported by Helm. https://helm.sh/docs/chart_best_practices/custom_resource_definitions."
                      enum:
                        - Skip
                        - Create
                        - CreateReplace
                      type: string
                    createNamespace:
                      description: CreateNamespace tells the Helm install action to create the HelmReleaseSpec.TargetNamespace if it does not exist yet. On uninstall, the namespace will not be garbage collected.
                      type: boolean
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm install action.
                      type: boolean
                    disableOpenAPIValidation:
                      description: DisableOpenAPIValidation prevents the Helm install action from validating rendered templates against the Kubernetes OpenAPI Schema.
                      type: boolean
                    disableWait:
                      description: DisableWait disables the waiting for resources to be ready after a Helm install has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: DisableWaitForJobs disables waiting for jobs to complete after a Helm install has been performed.
                      type: boolean
                    remediation:
                      description: Remediation holds the remediation configuration for when the Helm install action for the HelmRelease fails. The default is to not perform any action.
                      properties:
                        ignoreTestFailures:
                          description: IgnoreTestFailures tells the controller to skip remediation when the Helm tests are run after an install action but fail. Defaults to 'Test.IgnoreFailures'.
                          type: boolean
                        remediateLastFailure:
                          description: RemediateLastFailure tells the controller to remediate the last failure, when no retries remain. Defaults to 'false'.
                          type: boolean
                        retries:
                          description: Retries is the number of retries that should be attempted on failures before bailing. Remediation, using an uninstall, is performed between each attempt. Defaults to '0', a negative integer equals to unlimited retries.
                          type: integer
                      type: object
                    replace:
                      description: Replace tells the Helm install action to re-use the 'ReleaseName', but only if that name is a deleted release which remains in the history.
                      type: boolean
                    skipCRDs:
                      description: "SkipCRDs tells the Helm install action to not install any CRDs. By default, CRDs are installed if not already present. \n Deprecated use CRD policy (`crds`) attribute with value `Skip` instead."
                      type: boolean
                    timeout:
                      description: Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during the performance of a Helm install action. Defaults to 'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                interval:
                  description: Interval at which to reconcile the Helm release.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                kubeConfig:
                  description: KubeConfig for reconciling the HelmRelease on a remote cluster. When used in combination with HelmReleaseSpec.ServiceAccountName, forces the controller to act on behalf of that Service Account at the target cluster. If the --default-service-account flag is set, its value will be used as a controller level fallback for when HelmReleaseSpec.ServiceAccountName is empty.
                  properties:
                    secretRef:
                      description: SecretRef holds the name to a secret that contains a key with the kubeconfig file as the value. If no key is specified the key will default to 'value'. The secret must be in the same namespace as the HelmRelease. It is recommended that the kubeconfig is self-contained, and the secret is regularly updated if credentials such as a cloud-access-token expire. Cloud specific `cmd-path` auth helpers will not function without adding binaries and credentials to the Pod that is responsible for reconciling the HelmRelease.
                      properties:
                        key:
                          description: Key in the Secret, when not specified an implementation-specific default key is used.
                          type: string
                        name:
                          description: Name of the Secret.
                          type: string
                      required:
                        - name
                      type: object
                  type: object
                maxHistory:
                  description: MaxHistory is the number of revisions saved by Helm for this HelmRelease. Use '0' for an unlimited number of revisions; defaults to '10'.
                  type: integer
                postRenderers:
                  description: PostRenderers holds an array of Helm PostRenderers, which will be applied in order of their definition.
                  items:
                    description: PostRenderer contains a Helm PostRenderer specification.
                    properties:
                      kustomize:
                        description: Kustomization to apply as PostRenderer.
                        properties:
                          images:
                            description: Images is a list of (image name, new name, new tag or digest) for changing image names, tags or digests. This can also be achieved with a patch, but this operator is simpler to specify.
                            items:
                              description: Image contains an image name, a new name, a new tag or digest, which will replace the original name and tag.
                              properties:
                                digest:
                                  description: Digest is the value used to replace the original image tag. If digest is present NewTag value is ignored.
                                  type: string
                                name:
                                  description: Name is a tag-less image name.
                                  type: string
                                newName:
                                  description: NewName is the value used to replace the original name.
                                  type: string
                                newTag:
                                  description: NewTag is the value used to replace the original tag.
                                  type: string
                              required:
                                - name
                              type: object
                            type: array
                          patches:
                            description: Strategic merge and JSON patches, defined as inline YAML objects, capable of targeting objects based on kind, label and annotation selectors.
                            items:
                              description: Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should be applied to.
                              properties:
                                patch:
                                  description: Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with an array of operation objects.
                                  type: string
                                target:
                                  description: Target points to the resources that the patch document should be applied to.
                                  properties:
                                    annotationSelector:
                                      description: AnnotationSelector is a string that follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api It matches with the resource annotations.
                                      type: string
                                    group:
                                      description: Group is the API group to select resources from. Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    kind:
                                      description: Kind of the API Group to select resources from. Together with Group and Version it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    labelSelector:
                                      description: LabelSelector is a string that follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api It matches with the resource labels.
                                      type: string
                                    name:
                                      description: Name to match resources with.
                                      type: string
                                    namespace:
                                      description: Namespace to select resources from.
                                      type: string
                                    version:
                                      description: Version of the API Group to select resources from. Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                  type: object
                              type: object
                            type: array
                          patchesJson6902:
                            description: JSON 6902 patches, defined as inline YAML objects.
                            items:
                              description: JSON6902Patch contains a JSON6902 patch and the target the patch should be applied to.
                              properties:
                                patch:
                                  description: Patch contains the JSON6902 patch document with an array of operation objects.
                                  items:
                                    description: JSON6902 is a JSON6902 operation object. https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                    properties:
                                      from:
                                        description: From contains a JSON-pointer value that references a location within the target document where the operation is performed. The meaning of the value depends on the value of Op, and is NOT taken into account by all operations.
                                        type: string
                                      op:
                                        description: Op indicates the operation to perform. Its value MUST be one of "add", "remove", "replace", "move", "copy", or "test". https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                        enum:
                                          - test
                                          - remove
                                          - add
                                          - replace
                                          - move
                                          - copy
                                        type: string
                                      path:
                                        description: Path contains the JSON-pointer value that references a location within the target document where the operation is performed. The meaning of the value depends on the value of Op.
                                        type: string
                                      value:
                                        description: Value contains a valid JSON structure. The meaning of the value depends on the value of Op, and is NOT taken into account by all operations.
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                      - op
                                      - path
                                    type: object
                                  type: array
                                target:
                                  description: Target points to the resources that the patch document should be applied to.
                                  properties:
                                    annotationSelector:
                                      description: AnnotationSelector is a string that follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api It matches with the resource annotations.
                                      type: string
                                    group:
                                      description: Group is the API group to select resources from. Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    kind:
                                      description: Kind of the API Group to select resources from. Together with Group and Version it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    labelSelector:
                                      description: LabelSelector is a string that follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api It matches with the resource labels.
                                      type: string
                                    name:
                                      description: Name to match resources with.
                                      type: string
                                    namespace:
                                      description: Namespace to select resources from.
                                      type: string
                                    version:
                                      description: Version of the API Group to select resources from. Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                  type: object
                              required:
                                - patch
                                - target
                              type: object
                            type: array
                          patchesStrategicMerge:
                            description: Strategic merge patches, defined as inline YAML objects.
                            items:
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                        type: object
                    type: object
                  type: array
                releaseName:
                  description: ReleaseName used for the Helm release. Defaults to a composition of '[TargetNamespace-]Name'.
                  maxLength: 53
                  minLength: 1
                  type: string
                rollback:
                  description: Rollback holds the configuration for Helm rollback actions for this HelmRelease.
                  properties:
                    cleanupOnFail:
                      description: CleanupOnFail allows deletion of new resources created during the Helm rollback action when it fails.
                      type: boolean
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm rollback action.
                      type: boolean
                    disableWait:
                      description: DisableWait disables the waiting for resources to be ready after a Helm rollback has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: DisableWaitForJobs disables waiting for jobs to complete after a Helm rollback has been performed.
                      type: boolean
                    force:
                      description: Force forces resource updates through a replacement strategy.
                      type: boolean
                    recreate:
                      description: Recreate performs pod restarts for the resource if applicable.
                      type: boolean
                    timeout:
                      description: Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during the performance of a Helm rollback action. Defaults to 'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                serviceAccountName:
                  description: The name of the Kubernetes service account to impersonate when reconciling this HelmRelease.
                  type: string
                storageNamespace:
                  description: StorageNamespace used for the Helm storage. Defaults to the namespace of the HelmRelease.
                  maxLength: 63
                  minLength: 1
                  type: string
                suspend:
                  description: Suspend tells the controller to suspend reconciliation for this HelmRelease, it does not apply to already started reconciliations. Defaults to false.
                  type: boolean
                targetNamespace:
                  description: TargetNamespace to target when performing operations for the HelmRelease. Defaults to the namespace of the HelmRelease.
                  maxLength: 63
                  minLength: 1
                  type: string
                test:
                  description: Test holds the configuration for Helm test actions for this HelmRelease.
                  properties:
                    enable:
                      description: Enable enables Helm test actions for this HelmRelease after an Helm install or upgrade action has been performed.
                      type: boolean
                    ignoreFailures:
                      description: IgnoreFailures tells the controller to skip remediation when the Helm tests are run but fail. Can be overwritten for tests run after install or upgrade actions in 'Install.IgnoreTestFailures' and 'Upgrade.IgnoreTestFailures'.
                      type: boolean
                    timeout:
                      description: Timeout is the time to wait for any individual Kubernetes operation during the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                timeout:
                  description: Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during the performance of a Helm action. Defaults to '5m0s'.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                uninstall:
                  description: Uninstall holds the configuration for Helm uninstall actions for this HelmRelease.
                  properties:
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm rollback action.
                      type: boolean
                    disableWait:
                      description: DisableWait disables waiting for all the resources to be deleted after a Helm uninstall is performed.
                      type: boolean
                    keepHistory:
                      description: KeepHistory tells Helm to remove all associated resources and mark the release as deleted, but retain the release history.
                      type: boolean
                    timeout:
                      description: Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during the performance of a Helm uninstall action. Defaults to 'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                upgrade:
                  description: Upgrade holds the configuration for Helm upgrade actions for this HelmRelease.
                  properties:
                    cleanupOnFail:
                      description: CleanupOnFail allows deletion of new resources created during the Helm upgrade action when it fails.
                      type: boolean
                    crds:
                      description: "CRDs upgrade CRDs from the Helm Chart's crds directory according to the CRD upgrade policy provided here. Valid values are `Skip`, `Create` or `CreateReplace`. Default is `Skip` and if omitted CRDs are neither installed nor upgraded. \n Skip: do neither install nor replace (update) any CRDs. \n Create: new CRDs are created, existing CRDs are neither updated nor deleted. \n CreateReplace: new CRDs are created, existing CRDs are updated (replaced) but not deleted. \n By default, CRDs are not applied during Helm upgrade action. With this option users can opt-in to CRD upgrade, which is not (yet) natively supported by Helm. https://helm.sh/docs/chart_best_practices/custom_resource_definitions."
                      enum:
                        - Skip
                        - Create
                        - CreateReplace
                      type: string
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm upgrade action.
                      type: boolean
                    disableOpenAPIValidation:
                      description: DisableOpenAPIValidation prevents the Helm upgrade action from validating rendered templates against the Kubernetes OpenAPI Schema.
                      type: boolean
                    disableWait:
                      description: DisableWait disables the waiting for resources to be ready after a Helm upgrade has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: DisableWaitForJobs disables waiting for jobs to complete after a Helm upgrade has been performed.
                      type: boolean
                    force:
                      description: Force forces resource updates through a replacement strategy.
                      type: boolean
                    preserveValues:
                      description: PreserveValues will make Helm reuse the last release's values and merge in overrides from 'Values'. Setting this flag makes the HelmRelease non-declarative.
                      type: boolean
                    remediation:
                      description: Remediation holds the remediation configuration for when the Helm upgrade action for the HelmRelease fails. The default is to not perform any action.
                      properties:
                        ignoreTestFailures:
                          description: IgnoreTestFailures tells the controller to skip remediation when the Helm tests are run after an upgrade action but fail. Defaults to 'Test.IgnoreFailures'.
                          type: boolean
                        remediateLastFailure:
                          description: RemediateLastFailure tells the controller to remediate the last failure, when no retries remain. Defaults to 'false' unless 'Retries' is greater than 0.
                          type: boolean
                        retries:
                          description: Retries is the number of retries that should be attempted on failures before bailing. Remediation, using 'Strategy', is performed between each attempt. Defaults to '0', a negative integer equals to unlimited retries.
                          type: integer
                        strategy:
                          description: Strategy to use for failure remediation. Defaults to 'rollback'.
                          enum:
                            - rollback
                            - uninstall
                          type: string
                      type: object
                    timeout:
                      description: Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) during the performance of a Helm upgrade action. Defaults to 'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                values:
                  description: Values holds the values for this Helm release.
                  x-kubernetes-preserve-unknown-fields: true
                valuesFrom:
                  description: ValuesFrom holds references to resources containing Helm values for this HelmRelease, and information about how they should be merged.
                  items:
                    description: ValuesReference contains a reference to a resource containing Helm values, and optionally the key they can be found at.
                    properties:
                      kind:
                        description: Kind of the values referent, valid values are ('Secret', 'ConfigMap').
                        enum:
                          - Secret
                          - ConfigMap
                        type: string
                      name:
                        description: Name of the values referent. Should reside in the same namespace as the referring resource.
                        maxLength: 253
                        minLength: 1
                        type: string
                      optional:
                        description: Optional marks this ValuesReference as optional. When set, a not found error for the values reference is ignored, but any ValuesKey, TargetPath or transient error will still result in a reconciliation failure.
                        type: boolean
                      targetPath:
                        description: TargetPath is the YAML dot notation path the value should be merged at. When set, the ValuesKey is expected to be a single flat value. Defaults to 'None', which results in the values getting merged at the root.
                        maxLength: 250
                        pattern: ^([a-zA-Z0-9_\-.\\\/]|\[[0-9]{1,5}\])+$
                        type: string
                      valuesKey:
                        description: ValuesKey is the data key where the values.yaml or a specific value can be found at. Defaults to 'values.yaml'. When set, must be a valid Data Key, consisting of alphanumeric characters, '-', '_' or '.'.
                        maxLength: 253
                        pattern: ^[\-._a-zA-Z0-9]+$
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
              required:
                - chart
                - interval
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmReleaseStatus defines the observed state of a HelmRelease.
              properties:
                conditions:
                  description: Conditions holds the conditions for the HelmRelease.
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                failures:
                  description: Failures is the reconciliation failure count against the latest desired state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                helmChart:
                  description: HelmChart is the namespaced name of the HelmChart resource created by the controller for the HelmRelease.
                  type: string
                installFailures:
                  description: InstallFailures is the install failure count against the latest desired state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                lastAppliedRevision:
                  description: LastAppliedRevision is the revision of the last successfully applied source.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation attempt.
                  type: string
                lastAttemptedValuesChecksum:
                  description: LastAttemptedValuesChecksum is the SHA1 checksum of the values of the last reconciliation attempt.
                  type: string
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most recent reconcile request value, so a change of the annotation value can be detected.
                  type: string
                lastReleaseRevision:
                  description: LastReleaseRevision is the revision of the last successful Helm release.
                  type: integer
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                upgradeFailures:
                  description: UpgradeFailures is the upgrade failure count against the latest desired state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  labels:
    app.kubernetes.io/component: source-controller
    app.kubernetes.io/instance: fluxcd
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: v0.37.0
  name: helmrepositories.source.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: source.toolkit.fluxcd.io
  names:
    kind: HelmRepository
    listKind: HelmRepositoryList
    plural: helmrepositories
    shortNames:
      - helmrepo
    singular: helmrepository
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: HelmRepository is the Schema for the helmrepositories API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: HelmRepositorySpec defines the reference to a Helm repository.
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors to which this ACL applies. Items in this list are evaluated using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which this ACL applies. An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                interval:
                  description: The interval at which to check the upstream for updates.
                  type: string
                passCredentials:
                  description: PassCredentials allows the credentials from the SecretRef to be passed on to a host that does not match the host as defined in URL. This may be required if the host of the advertised chart URLs in the index differ from the defined URL. Enabling this should be done with caution, as it can potentially result in credentials getting stolen in a MITM-attack.
                  type: boolean
                secretRef:
                  description: The name of the secret containing authentication credentials for the Helm repository. For HTTP/S basic auth the secret must contain username and password fields. For TLS the secret must contain a certFile and keyFile, and/or caCert fields.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation of this source.
                  type: boolean
                timeout:
                  default: 60s
                  description: The timeout of index downloading, defaults to 60s.
                  type: string
                url:
                  description: The Helm repository URL, a valid URL contains at least a protocol and host.
                  type: string
              required:
                - interval
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmRepositoryStatus defines the observed state of the HelmRepository.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful repository sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to the last update of this artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: Revision is a human readable identifier traceable in the origin source system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                    - path
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmRepository.
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most recent reconcile request value, so a change of the annotation value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: URL is the download link for the last index fetched.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: HelmRepository is the Schema for the helmrepositories API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: HelmRepositorySpec specifies the required configuration to produce an Artifact for a Helm repository index YAML.
              properties:
                accessFrom:
                  description: 'AccessFrom specifies an Access Control List for allowing cross-namespace references to this object. NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092'
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors to which this ACL applies. Items in this list are evaluated using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which this ACL applies. An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                interval:
                  description: Interval at which to check the URL for updates.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                passCredentials:
                  description: PassCredentials allows the credentials from the SecretRef to be passed on to a host that does not match the host as defined in URL. This may be required if the host of the advertised chart URLs in the index differ from the defined URL. Enabling this should be done with caution, as it can potentially result in credentials getting stolen in a MITM-attack.
                  type: boolean
                provider:
                  default: generic
                  description: Provider used for authentication, can be 'aws', 'azure', 'gcp' or 'generic'. This field is optional, and only taken into account if the .spec.type field is set to 'oci'. When not specified, defaults to 'generic'.
                  enum:
                    - generic
                    - aws
                    - azure
                    - gcp
                  type: string
                secretRef:
                  description: SecretRef specifies the Secret containing authentication credentials for the HelmRepository. For HTTP/S basic auth the secret must contain 'username' and 'password' fields. For TLS the secret must contain a 'certFile' and 'keyFile', and/or 'caCert' fields.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: Suspend tells the controller to suspend the reconciliation of this HelmRepository.
                  type: boolean
                timeout:
                  default: 60s
                  description: Timeout is used for the index fetch operation for an HTTPS helm repository, and for remote OCI Repository operations like pulling for an OCI helm repository. Its default value is 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                type:
                  description: Type of the HelmRepository. When this field is set to  "oci", the URL field value must be prefixed with "oci://".
                  enum:
                    - default
                    - oci
                  type: string
                url:
                  description: URL of the Helm repository, a valid URL contains at least a protocol and host.
                  type: string
              required:
                - interval
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmRepositoryStatus records the observed state of the HelmRepository.
              properties:
                artifact:
                  description: Artifact represents the last successful HelmRepository reconciliation.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the Artifact file.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to the last update of the Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: Path is the relative file path of the Artifact. It can be used to locate the file in the root of the Artifact storage on the local file system of the controller managing the Source.
                      type: string
                    revision:
                      description: Revision is a human-readable identifier traceable in the origin source system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: URL is the HTTP address of the Artifact as exposed by the controller managing the Source. It can be used to retrieve the Artifact for consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - path
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmRepository.
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most recent reconcile request value, so a change of the annotation value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation of the HelmRepository object.
                  format: int64
                  type: integer
                url:
                  description: URL is the dynamic fetch link for the latest Artifact. It is provided on a "best effort" basis, and using the precise HelmRepositoryStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    component: kafkabridges.kafka.strimzi.io-crd
    strimzi.io/crd-install: "true"
  name: kafkabridges.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: KafkaBridge
    listKind: KafkaBridgeList
    plural: kafkabridges
    shortNames:
      - kb
    singular: kafkabridge
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The desired number of Kafka Bridge replicas
          jsonPath: .spec.replicas
          name: Desired replicas
          type: integer
        - description: The boostrap servers
          jsonPath: .spec.bootstrapServers
          name: Bootstrap Servers
          priority: 1
          type: string
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: The specification of the Kafka Bridge.
              properties:
                adminClient:
                  description: Kafka AdminClient related configuration.
                  properties:
                    config:
                      description: The Kafka AdminClient configuration used for AdminClient instances created by the bridge.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                authentication:
                  description: Authentication configuration for connecting to the cluster.
                  properties:
                    accessToken:
                      description: Link to Kubernetes Secret containing the access token which was obtained from the authorization server.
                      properties:
                        key:
                          description: The key under which the secret value is stored in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing the secret value.
                          type: string
                      required:
                        - key
                        - secretName
                      type: object
                    accessTokenIsJwt:
                      description: Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.
                      type: boolean
                    audience:
                      description: OAuth audience to use when authenticating against the authorization server. Some authorization servers require the audience to be explicitly set. The possible values depend on how the authorization server is configured. By default, `audience` is not specified when performing the token endpoint request.
                      type: string
                    certificateAndKey:
                      description: Reference to the `Secret` which holds the certificate and private key pair.
                      properties:
                        certificate:
                          description: The name of the file certificate in the Secret.
                          type: string
                        key:
                          description: The name of the private key in the Secret.
                          type: string
                        secretName:
                          description: The name of the Secret containing the certificate.
                          type: string
                      required:
                        - certificate
                        - key
                        - secretName
                      type: object
                    clientId:
                      description: OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                      type: string
                    clientSecret:
                      description: Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                      properties:
                        key:
                          description: The key under which the secret value is stored in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing the secret value.
                          type: string
                      required:
                        - key
                        - secretName
                      type: object
                    connectTimeoutSeconds:
                      description: The connect timeout in seconds when connecting to authorization server. If not set, the effective connect timeout is 60 seconds.
                      type: integer
                    disableTlsHostnameVerification:
                      description: Enable or disable TLS hostname verification. Default value is `false`.
                      type: boolean
                    enableMetrics:
                      description: Enable or disable OAuth metrics. Default value is `false`.
                      type: boolean
                    maxTokenExpirySeconds:
                      description: Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.
                      type: integer
                    passwordSecret:
                      description: Reference to the `Secret` which holds the password.
                      properties:
                        password:
                          description: The name of the key in the Secret under which the password is stored.
                          type: string
                        secretName:
                          description: The name of the Secret containing the password.
                          type: string
                      required:
                        - password
                        - secretName
                      type: object
                    readTimeoutSeconds:
                      description: The read timeout in seconds when connecting to authorization server. If not set, the effective read timeout is 60 seconds.
                      type: integer
                    refreshToken:
                      description: Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.
                      properties:
                        key:
                          description: The key under which the secret value is stored in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing the secret value.
                          type: string
                      required:
                        - key
                        - secretName
                      type: object
                    scope:
                      description: OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.
                      type: string
                    tlsTrustedCertificates:
                      description: Trusted certificates for TLS connection to the OAuth server.
                      items:
                        properties:
                          certificate:
                            description: The name of the file certificate in the Secret.
                            type: string
                          secretName:
                            description: The name of the Secret containing the certificate.
                            type: string
                        required:
                          - certificate
                          - secretName
                        type: object
                      type: array
                    tokenEndpointUri:
                      description: Authorization server token endpoint URI.
                      type: string
                    type:
                      description: Authentication type. Currently the supported types are `tls`, `scram-sha-256`, `scram-sha-512`, `plain`, and 'oauth'. `scram-sha-256` and `scram-sha-512` types use SASL SCRAM-SHA-256 and SASL SCRAM-SHA-512 Authentication, respectively. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.
                      enum:
                        - tls
                        - scram-sha-256
                        - scram-sha-512
                        - plain
                        - oauth
                      type: string
                    username:
                      description: Username used for the authentication.
                      type: string
                  required:
                    - type
                  type: object
                bootstrapServers:
                  description: A list of host:port pairs for establishing the initial connection to the Kafka cluster.
                  type: string
                clientRackInitImage:
                  description: The image of the init container used for initializing the `client.rack`.
                  type: string
                consumer:
                  description: Kafka consumer related configuration.
                  properties:
                    config:
                      description: 'The Kafka consumer configuration used for consumer instances created by the bridge. Properties with the following prefixes cannot be set: ssl., bootstrap.servers, group.id, sasl., security. (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).'
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                enableMetrics:
                  description: Enable the metrics for the Kafka Bridge. Default is false.
                  type: boolean
                http:
                  description: The HTTP related configuration.
                  properties:
                    cors:
                      description: CORS configuration for the HTTP Bridge.
                      properties:
                        allowedMethods:
                          description: List of allowed HTTP methods.
                          items:
                            type: string
                          type: array
                        allowedOrigins:
                          description: List of allowed origins. Java regular expressions can be used.
                          items:
                            type: string
                          type: array
                      required:
                        - allowedOrigins
                        - allowedMethods
                      type: object
                    port:
                      description: The port which is the server listening on.
                      minimum: 1023
                      type: integer
                  type: object
                image:
                  description: The docker image for the pods.
                  type: string
                jvmOptions:
                  description: '**Currently not supported** JVM Options for pods.'
                  properties:
                    -XX:
                      description: A map of -XX options to the JVM.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    -Xms:
                      description: -Xms option to to the JVM.
                      pattern: ^[0-9]+[mMgG]?$
                      type: string
                    -Xmx:
                      description: -Xmx option to to the JVM.
                      pattern: ^[0-9]+[mMgG]?$
                      type: string
                    gcLoggingEnabled:
                      description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                      type: boolean
                    javaSystemProperties:
                      description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                      items:
                        properties:
                          name:
                            description: The system property name.
                            type: string
                          value:
                            description: The system property value.
                            type: string
                        type: object
                      type: array
                  type: object
                livenessProbe:
                  description: Pod liveness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                      minimum: 1
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      minimum: 1
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                  type: object
                logging:
                  description: Logging configuration for Kafka Bridge.
                  properties:
                    loggers:
                      description: A Map from logger name to logger level.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type:
                      description: Logging type, must be either 'inline' or 'external'.
                      enum:
                        - inline
                        - external
                      type: string
                    valueFrom:
                      description: '`ConfigMap` entry where the logging configuration is stored. '
                      properties:
                        configMapKeyRef:
                          description: Reference to the key in the ConfigMap containing the configuration.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          type: object
                      type: object
                  required:
                    - type
                  type: object
                producer:
                  description: Kafka producer related configuration.
                  properties:
                    config:
                      description: 'The Kafka producer configuration used for producer instances created by the bridge. Properties with the following prefixes cannot be set: ssl., bootstrap.servers, sasl., security. (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).'
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                rack:
                  description: Configuration of the node label which will be used as the client.rack consumer configuration.
                  properties:
                    topologyKey:
                      description: A key that matches labels assigned to the Kubernetes cluster nodes. The value of the label is used to set a broker's `broker.rack` config, and the `client.rack` config for Kafka Connect or MirrorMaker 2.0.
                      example: topology.kubernetes.io/zone
                      type: string
                  required:
                    - topologyKey
                  type: object
                readinessProbe:
                  description: Pod readiness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                      minimum: 1
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      minimum: 1
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                  type: object
                replicas:
                  description: The number of pods in the `Deployment`.
                  minimum: 0
                  type: integer
                resources:
                  description: CPU and memory resources to reserve.
                  properties:
                    limits:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    requests:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                template:
                  description: Template for Kafka Bridge resources. The template allows users to specify how a `Deployment` and `Pod` is generated.
                  properties:
                    apiService:
                      description: Template for Kafka Bridge API `Service`.
                      properties:
                        ipFamilies:
                          description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting. Available on Kubernetes 1.20 and newer.
                          items:
                            enum:
                              - IPv4
                              - IPv6
                            type: string
                          type: array
                        ipFamilyPolicy:
                          description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type. Available on Kubernetes 1.20 and newer.
                          enum:
                            - SingleStack
                            - PreferDualStack
                            - RequireDualStack
                          type: string
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                    bridgeContainer:
                      description: Template for the Kafka Bridge container.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                      type: object
                    deployment:
                      description: Template for Kafka Bridge `Deployment`.
                      properties:
                        deploymentStrategy:
                          description: DeploymentStrategy which will be used for this Deployment. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.
                          enum:
                            - RollingUpdate
                            - Recreate
                          type: string
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                    initContainer:
                      description: Template for the Kafka Bridge init container.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                      type: object
                    pod:
                      description: Template for Kafka Bridge `Pods`.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        enableServiceLinks:
                          description: Indicates whether information about services should be injected into Pod's environment variables.
                          type: boolean
                        hostAliases:
                          description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                          items:
                            properties:
                              hostnames:
                                items:
                                  type: string
                                type: array
                              ip:
                                type: string
                            type: object
                          type: array
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        priorityClassName:
                          description: The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and common container settings.
                          properties:
                            fsGroup:
                              type: integer
                            fsGroupChangePolicy:
                              type: string
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tmpDirSizeLimit:
                          description: Defines the total amount (for example `1Gi`) of local storage required for temporary EmptyDir volume (`/tmp`). Default value is `5Mi`.
                          pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                          type: string
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                        topologySpreadConstraints:
                          description: The pod's topology spread constraints.
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              matchLabelKeys:
                                items:
                                  type: string
                                type: array
                              maxSkew:
                                type: integer
                              minDomains:
                                type: integer
                              nodeAffinityPolicy:
                                type: string
                              nodeTaintsPolicy:
                                type: string
                              topologyKey:
                                type: string
                              whenUnsatisfiable:
                                type: string
                            type: object
                          type: array
                      type: object
                    podDisruptionBudget:
                      description: Template for Kafka Bridge `PodDisruptionBudget`.
                      properties:
                        maxUnavailable:
                          description: Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
                          minimum: 0
                          type: integer
                        metadata:
                          description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                    serviceAccount:
                      description: Template for the Kafka Bridge service account.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                  type: object
                tls:
                  description: TLS configuration for connecting Kafka Bridge to the cluster.
                  properties:
                    trustedCertificates:
                      description: Trusted certificates for TLS connection.
                      items:
                        properties:
                          certificate:
                            description: The name of the file certificate in the Secret.
                            type: string
                          secretName:
                            description: The name of the Secret containing the certificate.
                            type: string
                        required:
                          - certificate
                          - secretName
                        type: object
                      type: array
                  type: object
                tracing:
                  description: The configuration of tracing in Kafka Bridge.
                  properties:
                    type:
                      description: Type of the tracing used. Currently the only supported types are `jaeger` for OpenTracing (Jaeger) tracing and `opentelemetry` for OpenTelemetry tracing. The OpenTracing (Jaeger) tracing is deprecated.
                      enum:
                        - jaeger
                        - opentelemetry
                      type: string
                  required:
                    - type
                  type: object
              required:
                - bootstrapServers
              type: object
            status:
              description: The status of the Kafka Bridge.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                labelSelector:
                  description: Label selector for pods providing this resource.
                  type: string
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                replicas:
                  description: The current number of pods being used to provide this resource.
                  type: integer
                url:
                  description: The URL at which external client applications can access the Kafka Bridge.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.labelSelector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    component: kafkaconnectors.kafka.strimzi.io-crd
    strimzi.io/crd-install: "true"
  name: kafkaconnectors.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: KafkaConnector
    listKind: KafkaConnectorList
    plural: kafkaconnectors
    shortNames:
      - kctr
    singular: kafkaconnector
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The name of the Kafka Connect cluster this connector belongs to
          jsonPath: .metadata.labels.strimzi\.io/cluster
          name: Cluster
          type: string
        - description: The class used by this connector
          jsonPath: .spec.class
          name: Connector class
          type: string
        - description: Maximum number of tasks
          jsonPath: .spec.tasksMax
          name: Max Tasks
          type: integer
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: The specification of the Kafka Connector.
              properties:
                class:
                  description: The Class for the Kafka Connector.
                  type: string
                config:
                  description: 'The Kafka Connector configuration. The following properties cannot be set: connector.class, tasks.max.'
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                pause:
                  description: Whether the connector should be paused. Defaults to false.
                  type: boolean
                tasksMax:
                  description: The maximum number of tasks for the Kafka Connector.
                  minimum: 1
                  type: integer
              type: object
            status:
              description: The status of the Kafka Connector.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                connectorStatus:
                  description: The connector status, as reported by the Kafka Connect REST API.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                tasksMax:
                  description: The maximum number of tasks for the Kafka Connector.
                  type: integer
                topics:
                  description: The list of topics used by the Kafka Connector.
                  items:
                    type: string
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          specReplicasPath: .spec.tasksMax
          statusReplicasPath: .status.tasksMax
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    component: kafkaconnects.kafka.strimzi.io-crd
    strimzi.io/crd-install: "true"
  name: kafkaconnects.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: KafkaConnect
    listKind: KafkaConnectList
    plural: kafkaconnects
    shortNames:
      - kc
    singular: kafkaconnect
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The desired number of Kafka Connect replicas
          jsonPath: .spec.replicas
          name: Desired replicas
          type: integer
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: The specification of the Kafka Connect cluster.
              properties:
                authentication:
                  description: Authentication configuration for Kafka Connect.
                  properties:
                    accessToken:
                      description: Link to Kubernetes Secret containing the access token which was obtained from the authorization server.
                      properties:
                        key:
                          description: The key under which the secret value is stored in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing the secret value.
                          type: string
                      required:
                        - key
                        - secretName
                      type: object
                    accessTokenIsJwt:
                      description: Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.
                      type: boolean
                    audience:
                      description: OAuth audience to use when authenticating against the authorization server. Some authorization servers require the audience to be explicitly set. The possible values depend on how the authorization server is configured. By default, `audience` is not specified when performing the token endpoint request.
                      type: string
                    certificateAndKey:
                      description: Reference to the `Secret` which holds the certificate and private key pair.
                      properties:
                        certificate:
                          description: The name of the file certificate in the Secret.
                          type: string
                        key:
                          description: The name of the private key in the Secret.
                          type: string
                        secretName:
                          description: The name of the Secret containing the certificate.
                          type: string
                      required:
                        - certificate
                        - key
                        - secretName
                      type: object
                    clientId:
                      description: OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                      type: string
                    clientSecret:
                      description: Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                      properties:
                        key:
                          description: The key under which the secret value is stored in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing the secret value.
                          type: string
                      required:
                        - key
                        - secretName
                      type: object
                    connectTimeoutSeconds:
                      description: The connect timeout in seconds when connecting to authorization server. If not set, the effective connect timeout is 60 seconds.
                      type: integer
                    disableTlsHostnameVerification:
                      description: Enable or disable TLS hostname verification. Default value is `false`.
                      type: boolean
                    enableMetrics:
                      description: Enable or disable OAuth metrics. Default value is `false`.
                      type: boolean
                    maxTokenExpirySeconds:
                      description: Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.
                      type: integer
                    passwordSecret:
                      description: Reference to the `Secret` which holds the password.
                      properties:
                        password:
                          description: The name of the key in the Secret under which the password is stored.
                          type: string
                        secretName:
                          description: The name of the Secret containing the password.
                          type: string
                      required:
                        - password
                        - secretName
                      type: object
                    readTimeoutSeconds:
                      description: The read timeout in seconds when connecting to authorization server. If not set, the effective read timeout is 60 seconds.
                      type: integer
                    refreshToken:
                      description: Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.
                      properties:
                        key:
                          description: The key under which the secret value is stored in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing the secret value.
                          type: string
                      required:
                        - key
                        - secretName
                      type: object
                    scope:
                      description: OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.
                      type: string
                    tlsTrustedCertificates:
                      description: Trusted certificates for TLS connection to the OAuth server.
                      items:
                        properties:
                          certificate:
                            description: The name of the file certificate in the Secret.
                            type: string
                          secretName:
                            description: The name of the Secret containing the certificate.
                            type: string
                        required:
                          - certificate
                          - secretName
                        type: object
                      type: array
                    tokenEndpointUri:
                      description: Authorization server token endpoint URI.
                      type: string
                    type:
                      description: Authentication type. Currently the supported types are `tls`, `scram-sha-256`, `scram-sha-512`, `plain`, and 'oauth'. `scram-sha-256` and `scram-sha-512` types use SASL SCRAM-SHA-256 and SASL SCRAM-SHA-512 Authentication, respectively. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.
                      enum:
                        - tls
                        - scram-sha-256
                        - scram-sha-512
                        - plain
                        - oauth
                      type: string
                    username:
                      description: Username used for the authentication.
                      type: string
                  required:
                    - type
                  type: object
                bootstrapServers:
                  description: Bootstrap servers to connect to. This should be given as a comma separated list of _<hostname>_:_<port>_ pairs.
                  type: string
                build:
                  description: Configures how the Connect container image should be built. Optional.
                  properties:
                    output:
                      description: Configures where should the newly built image be stored. Required.
                      properties:
                        additionalKanikoOptions:
                          description: 'Configures additional options which will be passed to the Kaniko executor when building the new Connect image. Allowed options are: --customPlatform, --insecure, --insecure-pull, --insecure-registry, --log-format, --log-timestamp, --registry-mirror, --reproducible, --single-snapshot, --skip-tls-verify, --skip-tls-verify-pull, --skip-tls-verify-registry, --verbosity, --snapshotMode, --use-new-run. These options will be used only on Kubernetes where the Kaniko executor is used. They will be ignored on OpenShift. The options are described in the link:https://github.com/GoogleContainerTools/kaniko[Kaniko GitHub repository^]. Changing this field does not trigger new build of the Kafka Connect image.'
                          items:
                            type: string
                          type: array
                        image:
                          description: The name of the image which will be built. Required.
                          type: string
                        pushSecret:
                          description: Container Registry Secret with the credentials for pushing the newly built image.
                          type: string
                        type:
                          description: Output type. Must be either `docker` for pushing the newly build image to Docker compatible registry or `imagestream` for pushing the image to OpenShift ImageStream. Required.
                          enum:
                            - docker
                            - imagestream
                          type: string
                      required:
                        - image
                        - type
                      type: object
                    plugins:
                      description: List of connector plugins which should be added to the Kafka Connect. Required.
                      items:
                        properties:
                          artifacts:
                            description: List of artifacts which belong to this connector plugin. Required.
                            items:
                              properties:
                                artifact:
                                  description: Maven artifact id. Applicable to the `maven` artifact type only.
                                  type: string
                                fileName:
                                  description: Name under which the artifact will be stored.
                                  type: string
                                group:
                                  description: Maven group id. Applicable to the `maven` artifact type only.
                                  type: string
                                insecure:
                                  description: By default, connections using TLS are verified to check they are secure. The server certificate used must be valid, trusted, and contain the server name. By setting this option to `true`, all TLS verification is disabled and the artifact will be downloaded, even when the server is considered insecure.
                                  type: boolean
                                repository:
                                  description: Maven repository to download the artifact from. Applicable to the `maven` artifact type only.
                                  type: string
                                sha512sum:
                                  description: 'SHA512 checksum of the artifact. Optional. If specified, the checksum will be verified while building the new container. If not specified, the downloaded artifact will not be verified. Not applicable to the `maven` artifact type. '
                                  type: string
                                type:
                                  description: Artifact type. Currently, the supported artifact types are `tgz`, `jar`, `zip`, `other` and `maven`.
                                  enum:
                                    - jar
                                    - tgz
                                    - zip
                                    - maven
                                    - other
                                  type: string
                                url:
                                  description: URL of the artifact which will be downloaded. Strimzi does not do any security scanning of the downloaded artifacts. For security reasons, you should first verify the artifacts manually and configure the checksum verification to make sure the same artifact is used in the automated build. Required for `jar`, `zip`, `tgz` and `other` artifacts. Not applicable to the `maven` artifact type.
                                  pattern: ^(https?|ftp)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]$
                                  type: string
                                version:
                                  description: Maven version number. Applicable to the `maven` artifact type only.
                                  type: string
                              required:
                                - type
                              type: object
                            type: array
                          name:
                            description: 'The unique name of the connector plugin. Will be used to generate the path where the connector artifacts will be stored. The name has to be unique within the KafkaConnect resource. The name has to follow the following pattern: `^[a-z][-_a-z0-9]*[a-z]$`. Required.'
                            pattern: ^[a-z0-9][-_a-z0-9]*[a-z0-9]$
                            type: string
                        required:
                          - name
                          - artifacts
                        type: object
                      type: array
                    resources:
                      description: CPU and memory resources to reserve for the build.
                      properties:
                        limits:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        requests:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                  required:
                    - output
                    - plugins
                  type: object
                clientRackInitImage:
                  description: The image of the init container used for initializing the `client.rack`.
                  type: string
                config:
                  description: 'The Kafka Connect configuration. Properties with the following prefixes cannot be set: ssl., sasl., security., listeners, plugin.path, rest., bootstrap.servers, consumer.interceptor.classes, producer.interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).'
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                externalConfiguration:
                  description: Pass data from Secrets or ConfigMaps to the Kafka Connect pods and use them to configure connectors.
                  properties:
                    env:
                      description: Makes data from a Secret or ConfigMap available in the Kafka Connect pods as environment variables.
                      items:
                        properties:
                          name:
                            description: Name of the environment variable which will be passed to the Kafka Connect pods. The name of the environment variable cannot start with `KAFKA_` or `STRIMZI_`.
                            type: string
                          valueFrom:
                            description: Value of the environment variable which will be passed to the Kafka Connect pods. It can be passed either as a reference to Secret or ConfigMap field. The field has to specify exactly one Secret or ConfigMap.
                            properties:
                              configMapKeyRef:
                                description: Reference to a key in a ConfigMap.
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                type: object
                              secretKeyRef:
                                description: Reference to a key in a Secret.
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                type: object
                            type: object
                        required:
                          - name
                          - valueFrom
                        type: object
                      type: array
                    volumes:
                      description: Makes data from a Secret or ConfigMap available in the Kafka Connect pods as volumes.
                      items:
                        properties:
                          configMap:
                            description: Reference to a key in a ConfigMap. Exactly one Secret or ConfigMap has to be specified.
                            properties:
                              defaultMode:
                                type: integer
                              items:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    mode:
                                      type: integer
                                    path:
                                      type: string
                                  type: object
                                type: array
                              name:
                                type: string
                              optional:
                                type: boolean
                            type: object
                          name:
                            description: Name of the volume which will be added to the Kafka Connect pods.
                            type: string
                          secret:
                            description: Reference to a key in a Secret. Exactly one Secret or ConfigMap has to be specified.
                            properties:
                              defaultMode:
                                type: integer
                              items:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    mode:
                                      type: integer
                                    path:
                                      type: string
                                  type: object
                                type: array
                              optional:
                                type: boolean
                              secretName:
                                type: string
                            type: object
                        required:
                          - name
                        type: object
                      type: array
                  type: object
                image:
                  description: The docker image for the pods.
                  type: string
                jmxOptions:
                  description: JMX Options.
                  properties:
                    authentication:
                      description: Authentication configuration for connecting to the JMX port.
                      properties:
                        type:
                          description: Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.
                          enum:
                            - password
                          type: string
                      required:
                        - type
                      type: object
                  type: object
                jvmOptions:
                  description: JVM Options for pods.
                  properties:
                    -XX:
                      description: A map of -XX options to the JVM.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    -Xms:
                      description: -Xms option to to the JVM.
                      pattern: ^[0-9]+[mMgG]?$
                      type: string
                    -Xmx:
                      description: -Xmx option to to the JVM.
                      pattern: ^[0-9]+[mMgG]?$
                      type: string
                    gcLoggingEnabled:
                      description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                      type: boolean
                    javaSystemProperties:
                      description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                      items:
                        properties:
                          name:
                            description: The system property name.
                            type: string
                          value:
                            description: The system property value.
                            type: string
                        type: object
                      type: array
                  type: object
                livenessProbe:
                  description: Pod liveness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                      minimum: 1
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      minimum: 1
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                  type: object
                logging:
                  description: Logging configuration for Kafka Connect.
                  properties:
                    loggers:
                      description: A Map from logger name to logger level.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type:
                      description: Logging type, must be either 'inline' or 'external'.
                      enum:
                        - inline
                        - external
                      type: string
                    valueFrom:
                      description: '`ConfigMap` entry where the logging configuration is stored. '
                      properties:
                        configMapKeyRef:
                          description: Reference to the key in the ConfigMap containing the configuration.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          type: object
                      type: object
                  required:
                    - type
                  type: object
                metricsConfig:
                  description: Metrics configuration.
                  properties:
                    type:
                      description: Metrics type. Only 'jmxPrometheusExporter' supported currently.
                      enum:
                        - jmxPrometheusExporter
                      type: string
                    valueFrom:
                      description: ConfigMap entry where the Prometheus JMX Exporter configuration is stored. For details of the structure of this configuration, see the {JMXExporter}.
                      properties:
                        configMapKeyRef:
                          description: Reference to the key in the ConfigMap containing the configuration.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          type: object
                      type: object
                  required:
                    - type
                    - valueFrom
                  type: object
                rack:
                  description: Configuration of the node label which will be used as the `client.rack` consumer configuration.
                  properties:
                    topologyKey:
                      description: A key that matches labels assigned to the Kubernetes cluster nodes. The value of the label is used to set a broker's `broker.rack` config, and the `client.rack` config for Kafka Connect or MirrorMaker 2.0.
                      example: topology.kubernetes.io/zone
                      type: string
                  required:
                    - topologyKey
                  type: object
                readinessProbe:
                  description: Pod readiness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                      minimum: 1
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      minimum: 1
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                  type: object
                replicas:
                  description: The number of pods in the Kafka Connect group.
                  type: integer
                resources:
                  description: The maximum limits for CPU and memory resources and the requested initial resources.
                  properties:
                    limits:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    requests:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                template:
                  description: Template for Kafka Connect and Kafka Mirror Maker 2 resources. The template allows users to specify how the `Deployment`, `Pods` and `Service` are generated.
                  properties:
                    apiService:
                      description: Template for Kafka Connect API `Service`.
                      properties:
                        ipFamilies:
                          description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting. Available on Kubernetes 1.20 and newer.
                          items:
                            enum:
                              - IPv4
                              - IPv6
                            type: string
                          type: array
                        ipFamilyPolicy:
                          description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type. Available on Kubernetes 1.20 and newer.
                          enum:
                            - SingleStack
                            - PreferDualStack
                            - RequireDualStack
                          type: string
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                    buildConfig:
                      description: Template for the Kafka Connect BuildConfig used to build new container images. The BuildConfig is used only on OpenShift.
                      properties:
                        metadata:
                          description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        pullSecret:
                          description: Container Registry Secret with the credentials for pulling the base image.
                          type: string
                      type: object
                    buildContainer:
                      description: Template for the Kafka Connect Build container. The build container is used only on Kubernetes.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                      type: object
                    buildPod:
                      description: Template for Kafka Connect Build `Pods`. The build pod is used only on Kubernetes.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        enableServiceLinks:
                          description: Indicates whether information about services should be injected into Pod's environment variables.
                          type: boolean
                        hostAliases:
                          description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                          items:
                            properties:
                              hostnames:
                                items:
                                  type: string
                                type: array
                              ip:
                                type: string
                            type: object
                          type: array
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        priorityClassName:
                          description: The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and common container settings.
                          properties:
                            fsGroup:
                              type: integer
                            fsGroupChangePolicy:
                              type: string
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tmpDirSizeLimit:
                          description: Defines the total amount (for example `1Gi`) of local storage required for temporary EmptyDir volume (`/tmp`). Default value is `5Mi`.
                          pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                          type: string
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                        topologySpreadConstraints:
                          description: The pod's topology spread constraints.
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              matchLabelKeys:
                                items:
                                  type: string
                                type: array
                              maxSkew:
                                type: integer
                              minDomains:
                                type: integer
                              nodeAffinityPolicy:
                                type: string
                              nodeTaintsPolicy:
                                type: string
                              topologyKey:
                                type: string
                              whenUnsatisfiable:
                                type: string
                            type: object
                          type: array
                      type: object
                    buildServiceAccount:
                      description: Template for the Kafka Connect Build service account.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                    clusterRoleBinding:
                      description: Template for the Kafka Connect ClusterRoleBinding.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                    connectContainer:
                      description: Template for the Kafka Connect container.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                      type: object
                    deployment:
                      description: Template for Kafka Connect `Deployment`.
                      properties:
                        deploymentStrategy:
                          description: DeploymentStrategy which will be used for this Deployment. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.
                          enum:
                            - RollingUpdate
                            - Recreate
                          type: string
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                    initContainer:
                      description: Template for the Kafka init container.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                      type: object
                    jmxSecret:
                      description: Template for Secret of the Kafka Connect Cluster JMX authentication.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                    pod:
                      description: Template for Kafka Connect `Pods`.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        enableServiceLinks:
                          description: Indicates whether information about services should be injected into Pod's environment variables.
                          type: boolean
                        hostAliases:
                          description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                          items:
                            properties:
                              hostnames:
                                items:
                                  type: string
                                type: array
                              ip:
                                type: string
                            type: object
                          type: array
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        priorityClassName:
                          description: The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and common container settings.
                          properties:
                            fsGroup:
                              type: integer
                            fsGroupChangePolicy:
                              type: string
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tmpDirSizeLimit:
                          description: Defines the total amount (for example `1Gi`) of local storage required for temporary EmptyDir volume (`/tmp`). Default value is `5Mi`.
                          pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                          type: string
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                        topologySpreadConstraints:
                          description: The pod's topology spread constraints.
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              matchLabelKeys:
                                items:
                                  type: string
                                type: array
                              maxSkew:
                                type: integer
                              minDomains:
                                type: integer
                              nodeAffinityPolicy:
                                type: string
                              nodeTaintsPolicy:
                                type: string
                              topologyKey:
                                type: string
                              whenUnsatisfiable:
                                type: string
                            type: object
                          type: array
                      type: object
                    podDisruptionBudget:
                      description: Template for Kafka Connect `PodDisruptionBudget`.
                      properties:
                        maxUnavailable:
                          description: Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
                          minimum: 0
                          type: integer
                        metadata:
                          description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                    serviceAccount:
                      description: Template for the Kafka Connect service account.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                  type: object
                tls:
                  description: TLS configuration.
                  properties:
                    trustedCertificates:
                      description: Trusted certificates for TLS connection.
                      items:
                        properties:
                          certificate:
                            description: The name of the file certificate in the Secret.
                            type: string
                          secretName:
                            description: The name of the Secret containing the certificate.
                            type: string
                        required:
                          - certificate
                          - secretName
                        type: object
                      type: array
                  type: object
                tracing:
                  description: The configuration of tracing in Kafka Connect.
                  properties:
                    type:
                      description: Type of the tracing used. Currently the only supported types are `jaeger` for OpenTracing (Jaeger) tracing and `opentelemetry` for OpenTelemetry tracing. The OpenTracing (Jaeger) tracing is deprecated.
                      enum:
                        - jaeger
                        - opentelemetry
                      type: string
                  required:
                    - type
                  type: object
                version:
                  description: The Kafka Connect version. Defaults to {DefaultKafkaVersion}. Consult the user documentation to understand the process required to upgrade or downgrade the version.
                  type: string
              required:
                - bootstrapServers
              type: object
            status:
              description: The status of the Kafka Connect cluster.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                connectorPlugins:
                  description: The list of connector plugins available in this Kafka Connect deployment.
                  items:
                    properties:
                      class:
                        description: The class of the connector plugin.
                        type: string
                      type:
                        description: The type of the connector plugin. The available types are `sink` and `source`.
                        type: string
                      version:
                        description: The version of the connector plugin.
                        type: string
                    type: object
                  type: array
                labelSelector:
                  description: Label selector for pods providing this resource.
                  type: string
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                replicas:
                  description: The current number of pods being used to provide this resource.
                  type: integer
                url:
                  description: The URL of the REST API endpoint for managing and monitoring Kafka Connect connectors.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.labelSelector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    component: kafkamirrormaker2.kafka.strimzi.io-crd
    strimzi.io/crd-install: "true"
  name: kafkamirrormaker2s.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: KafkaMirrorMaker2
    listKind: KafkaMirrorMaker2List
    plural: kafkamirrormaker2s
    shortNames:
      - kmm2
    singular: kafkamirrormaker2
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The desired number of Kafka MirrorMaker 2.0 replicas
          jsonPath: .spec.replicas
          name: Desired replicas
          type: integer
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: The specification of the Kafka MirrorMaker 2.0 cluster.
              properties:
                clientRackInitImage:
                  description: The image of the init container used for initializing the `client.rack`.
                  type: string
                clusters:
                  description: Kafka clusters for mirroring.
                  items:
                    properties:
                      alias:
                        description: Alias used to reference the Kafka cluster.
                        pattern: ^[a-zA-Z0-9\._\-]{1,100}$
                        type: string
                      authentication:
                        description: Authentication configuration for connecting to the cluster.
                        properties:
                          accessToken:
                            description: Link to Kubernetes Secret containing the access token which was obtained from the authorization server.
                            properties:
                              key:
                                description: The key under which the secret value is stored in the Kubernetes Secret.
                                type: string
                              secretName:
                                description: The name of the Kubernetes Secret containing the secret value.
                                type: string
                            required:
                              - key
                              - secretName
                            type: object
                          accessTokenIsJwt:
                            description: Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.
                            type: boolean
                          audience:
                            description: OAuth audience to use when authenticating against the authorization server. Some authorization servers require the audience to be explicitly set. The possible values depend on how the authorization server is configured. By default, `audience` is not specified when performing the token endpoint request.
                            type: string
                          certificateAndKey:
                            description: Reference to the `Secret` which holds the certificate and private key pair.
                            properties:
                              certificate:
                                description: The name of the file certificate in the Secret.
                                type: string
                              key:
                                description: The name of the private key in the Secret.
                                type: string
                              secretName:
                                description: The name of the Secret containing the certificate.
                                type: string
                            required:
                              - certificate
                              - key
                              - secretName
                            type: object
                          clientId:
                            description: OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                            type: string
                          clientSecret:
                            description: Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                            properties:
                              key:
                                description: The key under which the secret value is stored in the Kubernetes Secret.
                                type: string
                              secretName:
                                description: The name of the Kubernetes Secret containing the secret value.
                                type: string
                            required:
                              - key
                              - secretName
                            type: object
                          connectTimeoutSeconds:
                            description: The connect timeout in seconds when connecting to authorization server. If not set, the effective connect timeout is 60 seconds.
                            type: integer
                          disableTlsHostnameVerification:
                            description: Enable or disable TLS hostname verification. Default value is `false`.
                            type: boolean
                          enableMetrics:
                            description: Enable or disable OAuth metrics. Default value is `false`.
                            type: boolean
                          maxTokenExpirySeconds:
                            description: Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.
                            type: integer
                          passwordSecret:
                            description: Reference to the `Secret` which holds the password.
                            properties:
                              password:
                                description: The name of the key in the Secret under which the password is stored.
                                type: string
                              secretName:
                                description: The name of the Secret containing the password.
                                type: string
                            required:
                              - password
                              - secretName
                            type: object
                          readTimeoutSeconds:
                            description: The read timeout in seconds when connecting to authorization server. If not set, the effective read timeout is 60 seconds.
                            type: integer
                          refreshToken:
                            description: Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.
                            properties:
                              key:
                                description: The key under which the secret value is stored in the Kubernetes Secret.
                                type: string
                              secretName:
                                description: The name of the Kubernetes Secret containing the secret value.
                                type: string
                            required:
                              - key
                              - secretName
                            type: object
                          scope:
                            description: OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.
                            type: string
                          tlsTrustedCertificates:
                            description: Trusted certificates for TLS connection to the OAuth server.
                            items:
                              properties:
                                certificate:
                                  description: The name of the file certificate in the Secret.
                                  type: string
                                secretName:
                                  description: The name of the Secret containing the certificate.
                                  type: string
                              required:
                                - certificate
                                - secretName
                              type: object
                            type: array
                          tokenEndpointUri:
                            description: Authorization server token endpoint URI.
                            type: string
                          type:
                            description: Authentication type. Currently the supported types are `tls`, `scram-sha-256`, `scram-sha-512`, `plain`, and 'oauth'. `scram-sha-256` and `scram-sha-512` types use SASL SCRAM-SHA-256 and SASL SCRAM-SHA-512 Authentication, respectively. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.
                            enum:
                              - tls
                              - scram-sha-256
                              - scram-sha-512
                              - plain
                              - oauth
                            type: string
                          username:
                            description: Username used for the authentication.
                            type: string
                        required:
                          - type
                        type: object
                      bootstrapServers:
                        description: A comma-separated list of `host:port` pairs for establishing the connection to the Kafka cluster.
                        type: string
                      config:
                        description: 'The MirrorMaker 2.0 cluster config. Properties with the following prefixes cannot be set: ssl., sasl., security., listeners, plugin.path, rest., bootstrap.servers, consumer.interceptor.classes, producer.interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).'
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      tls:
                        description: TLS configuration for connecting MirrorMaker 2.0 connectors to a cluster.
                        properties:
                          trustedCertificates:
                            description: Trusted certificates for TLS connection.
                            items:
                              properties:
                                certificate:
                                  description: The name of the file certificate in the Secret.
                                  type: string
                                secretName:
                                  description: The name of the Secret containing the certificate.
                                  type: string
                              required:
                                - certificate
                                - secretName
                              type: object
                            type: array
                        type: object
                    required:
                      - alias
                      - bootstrapServers
                    type: object
                  type: array
                connectCluster:
                  description: The cluster alias used for Kafka Connect. The alias must match a cluster in the list at `spec.clusters`.
                  type: string
                externalConfiguration:
                  description: Pass data from Secrets or ConfigMaps to the Kafka Connect pods and use them to configure connectors.
                  properties:
                    env:
                      description: Makes data from a Secret or ConfigMap available in the Kafka Connect pods as environment variables.
                      items:
                        properties:
                          name:
                            description: Name of the environment variable which will be passed to the Kafka Connect pods. The name of the environment variable cannot start with `KAFKA_` or `STRIMZI_`.
                            type: string
                          valueFrom:
                            description: Value of the environment variable which will be passed to the Kafka Connect pods. It can be passed either as a reference to Secret or ConfigMap field. The field has to specify exactly one Secret or ConfigMap.
                            properties:
                              configMapKeyRef:
                                description: Reference to a key in a ConfigMap.
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                type: object
                              secretKeyRef:
                                description: Reference to a key in a Secret.
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  optional:
                                    type: boolean
                                type: object
                            type: object
                        required:
                          - name
                          - valueFrom
                        type: object
                      type: array
                    volumes:
                      description: Makes data from a Secret or ConfigMap available in the Kafka Connect pods as volumes.
                      items:
                        properties:
                          configMap:
                            description: Reference to a key in a ConfigMap. Exactly one Secret or ConfigMap has to be specified.
                            properties:
                              defaultMode:
                                type: integer
                              items:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    mode:
                                      type: integer
                                    path:
                                      type: string
                                  type: object
                                type: array
                              name:
                                type: string
                              optional:
                                type: boolean
                            type: object
                          name:
                            description: Name of the volume which will be added to the Kafka Connect pods.
                            type: string
                          secret:
                            description: Reference to a key in a Secret. Exactly one Secret or ConfigMap has to be specified.
                            properties:
                              defaultMode:
                                type: integer
                              items:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    mode:
                                      type: integer
                                    path:
                                      type: string
                                  type: object
                                type: array
                              optional:
                                type: boolean
                              secretName:
                                type: string
                            type: object
                        required:
                          - name
                        type: object
                      type: array
                  type: object
                image:
                  description: The docker image for the pods.
                  type: string
                jmxOptions:
                  description: JMX Options.
                  properties:
                    authentication:
                      description: Authentication configuration for connecting to the JMX port.
                      properties:
                        type:
                          description: Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.
                          enum:
                            - password
                          type: string
                      required:
                        - type
                      type: object
                  type: object
                jvmOptions:
                  description: JVM Options for pods.
                  properties:
                    -XX:
                      description: A map of -XX options to the JVM.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    -Xms:
                      description: -Xms option to to the JVM.
                      pattern: ^[0-9]+[mMgG]?$
                      type: string
                    -Xmx:
                      description: -Xmx option to to the JVM.
                      pattern: ^[0-9]+[mMgG]?$
                      type: string
                    gcLoggingEnabled:
                      description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                      type: boolean
                    javaSystemProperties:
                      description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                      items:
                        properties:
                          name:
                            description: The system property name.
                            type: string
                          value:
                            description: The system property value.
                            type: string
                        type: object
                      type: array
                  type: object
                livenessProbe:
                  description: Pod liveness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                      minimum: 1
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      minimum: 1
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                  type: object
                logging:
                  description: Logging configuration for Kafka Connect.
                  properties:
                    loggers:
                      description: A Map from logger name to logger level.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type:
                      description: Logging type, must be either 'inline' or 'external'.
                      enum:
                        - inline
                        - external
                      type: string
                    valueFrom:
                      description: '`ConfigMap` entry where the logging configuration is stored. '
                      properties:
                        configMapKeyRef:
                          description: Reference to the key in the ConfigMap containing the configuration.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          type: object
                      type: object
                  required:
                    - type
                  type: object
                metricsConfig:
                  description: Metrics configuration.
                  properties:
                    type:
                      description: Metrics type. Only 'jmxPrometheusExporter' supported currently.
                      enum:
                        - jmxPrometheusExporter
                      type: string
                    valueFrom:
                      description: ConfigMap entry where the Prometheus JMX Exporter configuration is stored. For details of the structure of this configuration, see the {JMXExporter}.
                      properties:
                        configMapKeyRef:
                          description: Reference to the key in the ConfigMap containing the configuration.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          type: object
                      type: object
                  required:
                    - type
                    - valueFrom
                  type: object
                mirrors:
                  description: Configuration of the MirrorMaker 2.0 connectors.
                  items:
                    properties:
                      checkpointConnector:
                        description: The specification of the Kafka MirrorMaker 2.0 checkpoint connector.
                        properties:
                          config:
                            description: 'The Kafka Connector configuration. The following properties cannot be set: connector.class, tasks.max.'
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          pause:
                            description: Whether the connector should be paused. Defaults to false.
                            type: boolean
                          tasksMax:
                            description: The maximum number of tasks for the Kafka Connector.
                            minimum: 1
                            type: integer
                        type: object
                      groupsBlacklistPattern:
                        description: A regular expression matching the consumer groups to exclude from mirroring. Comma-separated lists are also supported.
                        type: string
                      groupsExcludePattern:
                        description: A regular expression matching the consumer groups to exclude from mirroring. Comma-separated lists are also supported.
                        type: string
                      groupsPattern:
                        description: A regular expression matching the consumer groups to be mirrored. Comma-separated lists are also supported.
                        type: string
                      heartbeatConnector:
                        description: The specification of the Kafka MirrorMaker 2.0 heartbeat connector.
                        properties:
                          config:
                            description: 'The Kafka Connector configuration. The following properties cannot be set: connector.class, tasks.max.'
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          pause:
                            description: Whether the connector should be paused. Defaults to false.
                            type: boolean
                          tasksMax:
                            description: The maximum number of tasks for the Kafka Connector.
                            minimum: 1
                            type: integer
                        type: object
                      sourceCluster:
                        description: The alias of the source cluster used by the Kafka MirrorMaker 2.0 connectors. The alias must match a cluster in the list at `spec.clusters`.
                        type: string
                      sourceConnector:
                        description: The specification of the Kafka MirrorMaker 2.0 source connector.
                        properties:
                          config:
                            description: 'The Kafka Connector configuration. The following properties cannot be set: connector.class, tasks.max.'
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          pause:
                            description: Whether the connector should be paused. Defaults to false.
                            type: boolean
                          tasksMax:
                            description: The maximum number of tasks for the Kafka Connector.
                            minimum: 1
                            type: integer
                        type: object
                      targetCluster:
                        description: The alias of the target cluster used by the Kafka MirrorMaker 2.0 connectors. The alias must match a cluster in the list at `spec.clusters`.
                        type: string
                      topicsBlacklistPattern:
                        description: A regular expression matching the topics to exclude from mirroring. Comma-separated lists are also supported.
                        type: string
                      topicsExcludePattern:
                        description: A regular expression matching the topics to exclude from mirroring. Comma-separated lists are also supported.
                        type: string
                      topicsPattern:
                        description: A regular expression matching the topics to be mirrored, for example, "topic1\|topic2\|topic3". Comma-separated lists are also supported.
                        type: string
                    required:
                      - sourceCluster
                      - targetCluster
                    type: object
                  type: array
                rack:
                  description: Configuration of the node label which will be used as the `client.rack` consumer configuration.
                  properties:
                    topologyKey:
                      description: A key that matches labels assigned to the Kubernetes cluster nodes. The value of the label is used to set a broker's `broker.rack` config, and the `client.rack` config for Kafka Connect or MirrorMaker 2.0.
                      example: topology.kubernetes.io/zone
                      type: string
                  required:
                    - topologyKey
                  type: object
                readinessProbe:
                  description: Pod readiness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                      minimum: 1
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      minimum: 1
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                  type: object
                replicas:
                  description: The number of pods in the Kafka Connect group.
                  type: integer
                resources:
                  description: The maximum limits for CPU and memory resources and the requested initial resources.
                  properties:
                    limits:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    requests:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                template:
                  description: Template for Kafka Connect and Kafka Mirror Maker 2 resources. The template allows users to specify how the `Deployment`, `Pods` and `Service` are generated.
                  properties:
                    apiService:
                      description: Template for Kafka Connect API `Service`.
                      properties:
                        ipFamilies:
                          description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting. Available on Kubernetes 1.20 and newer.
                          items:
                            enum:
                              - IPv4
                              - IPv6
                            type: string
                          type: array
                        ipFamilyPolicy:
                          description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type. Available on Kubernetes 1.20 and newer.
                          enum:
                            - SingleStack
                            - PreferDualStack
                            - RequireDualStack
                          type: string
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                    buildConfig:
                      description: Template for the Kafka Connect BuildConfig used to build new container images. The BuildConfig is used only on OpenShift.
                      properties:
                        metadata:
                          description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        pullSecret:
                          description: Container Registry Secret with the credentials for pulling the base image.
                          type: string
                      type: object
                    buildContainer:
                      description: Template for the Kafka Connect Build container. The build container is used only on Kubernetes.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                      type: object
                    buildPod:
                      description: Template for Kafka Connect Build `Pods`. The build pod is used only on Kubernetes.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        enableServiceLinks:
                          description: Indicates whether information about services should be injected into Pod's environment variables.
                          type: boolean
                        hostAliases:
                          description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                          items:
                            properties:
                              hostnames:
                                items:
                                  type: string
                                type: array
                              ip:
                                type: string
                            type: object
                          type: array
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        priorityClassName:
                          description: The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and common container settings.
                          properties:
                            fsGroup:
                              type: integer
                            fsGroupChangePolicy:
                              type: string
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tmpDirSizeLimit:
                          description: Defines the total amount (for example `1Gi`) of local storage required for temporary EmptyDir volume (`/tmp`). Default value is `5Mi`.
                          pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                          type: string
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                        topologySpreadConstraints:
                          description: The pod's topology spread constraints.
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              matchLabelKeys:
                                items:
                                  type: string
                                type: array
                              maxSkew:
                                type: integer
                              minDomains:
                                type: integer
                              nodeAffinityPolicy:
                                type: string
                              nodeTaintsPolicy:
                                type: string
                              topologyKey:
                                type: string
                              whenUnsatisfiable:
                                type: string
                            type: object
                          type: array
                      type: object
                    buildServiceAccount:
                      description: Template for the Kafka Connect Build service account.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                    clusterRoleBinding:
                      description: Template for the Kafka Connect ClusterRoleBinding.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                    connectContainer:
                      description: Template for the Kafka Connect container.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                      type: object
                    deployment:
                      description: Template for Kafka Connect `Deployment`.
                      properties:
                        deploymentStrategy:
                          description: DeploymentStrategy which will be used for this Deployment. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.
                          enum:
                            - RollingUpdate
                            - Recreate
                          type: string
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                    initContainer:
                      description: Template for the Kafka init container.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                      type: object
                    jmxSecret:
                      description: Template for Secret of the Kafka Connect Cluster JMX authentication.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                    pod:
                      description: Template for Kafka Connect `Pods`.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        enableServiceLinks:
                          description: Indicates whether information about services should be injected into Pod's environment variables.
                          type: boolean
                        hostAliases:
                          description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                          items:
                            properties:
                              hostnames:
                                items:
                                  type: string
                                type: array
                              ip:
                                type: string
                            type: object
                          type: array
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        priorityClassName:
                          description: The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and common container settings.
                          properties:
                            fsGroup:
                              type: integer
                            fsGroupChangePolicy:
                              type: string
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tmpDirSizeLimit:
                          description: Defines the total amount (for example `1Gi`) of local storage required for temporary EmptyDir volume (`/tmp`). Default value is `5Mi`.
                          pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                          type: string
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                        topologySpreadConstraints:
                          description: The pod's topology spread constraints.
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              matchLabelKeys:
                                items:
                                  type: string
                                type: array
                              maxSkew:
                                type: integer
                              minDomains:
                                type: integer
                              nodeAffinityPolicy:
                                type: string
                              nodeTaintsPolicy:
                                type: string
                              topologyKey:
                                type: string
                              whenUnsatisfiable:
                                type: string
                            type: object
                          type: array
                      type: object
                    podDisruptionBudget:
                      description: Template for Kafka Connect `PodDisruptionBudget`.
                      properties:
                        maxUnavailable:
                          description: Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
                          minimum: 0
                          type: integer
                        metadata:
                          description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                    serviceAccount:
                      description: Template for the Kafka Connect service account.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                  type: object
                tracing:
                  description: The configuration of tracing in Kafka Connect.
                  properties:
                    type:
                      description: Type of the tracing used. Currently the only supported types are `jaeger` for OpenTracing (Jaeger) tracing and `opentelemetry` for OpenTelemetry tracing. The OpenTracing (Jaeger) tracing is deprecated.
                      enum:
                        - jaeger
                        - opentelemetry
                      type: string
                  required:
                    - type
                  type: object
                version:
                  description: The Kafka Connect version. Defaults to {DefaultKafkaVersion}. Consult the user documentation to understand the process required to upgrade or downgrade the version.
                  type: string
              required:
                - connectCluster
              type: object
            status:
              description: The status of the Kafka MirrorMaker 2.0 cluster.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                connectorPlugins:
                  description: The list of connector plugins available in this Kafka Connect deployment.
                  items:
                    properties:
                      class:
                        description: The class of the connector plugin.
                        type: string
                      type:
                        description: The type of the connector plugin. The available types are `sink` and `source`.
                        type: string
                      version:
                        description: The version of the connector plugin.
                        type: string
                    type: object
                  type: array
                connectors:
                  description: List of MirrorMaker 2.0 connector statuses, as reported by the Kafka Connect REST API.
                  items:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                labelSelector:
                  description: Label selector for pods providing this resource.
                  type: string
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                replicas:
                  description: The current number of pods being used to provide this resource.
                  type: integer
                url:
                  description: The URL of the REST API endpoint for managing and monitoring Kafka Connect connectors.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.labelSelector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    component: kafkamirrormakers.kafka.strimzi.io-crd
    strimzi.io/crd-install: "true"
  name: kafkamirrormakers.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: KafkaMirrorMaker
    listKind: KafkaMirrorMakerList
    plural: kafkamirrormakers
    shortNames:
      - kmm
    singular: kafkamirrormaker
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The desired number of Kafka MirrorMaker replicas
          jsonPath: .spec.replicas
          name: Desired replicas
          type: integer
        - description: The boostrap servers for the consumer
          jsonPath: .spec.consumer.bootstrapServers
          name: Consumer Bootstrap Servers
          priority: 1
          type: string
        - description: The boostrap servers for the producer
          jsonPath: .spec.producer.bootstrapServers
          name: Producer Bootstrap Servers
          priority: 1
          type: string
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: The specification of Kafka MirrorMaker.
              oneOf:
                - properties:
                    include: {}
                  required:
                    - include
                - properties:
                    whitelist: {}
                  required:
                    - whitelist
              properties:
                consumer:
                  description: Configuration of source cluster.
                  properties:
                    authentication:
                      description: Authentication configuration for connecting to the cluster.
                      properties:
                        accessToken:
                          description: Link to Kubernetes Secret containing the access token which was obtained from the authorization server.
                          properties:
                            key:
                              description: The key under which the secret value is stored in the Kubernetes Secret.
                              type: string
                            secretName:
                              description: The name of the Kubernetes Secret containing the secret value.
                              type: string
                          required:
                            - key
                            - secretName
                          type: object
                        accessTokenIsJwt:
                          description: Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.
                          type: boolean
                        audience:
                          description: OAuth audience to use when authenticating against the authorization server. Some authorization servers require the audience to be explicitly set. The possible values depend on how the authorization server is configured. By default, `audience` is not specified when performing the token endpoint request.
                          type: string
                        certificateAndKey:
                          description: Reference to the `Secret` which holds the certificate and private key pair.
                          properties:
                            certificate:
                              description: The name of the file certificate in the Secret.
                              type: string
                            key:
                              description: The name of the private key in the Secret.
                              type: string
                            secretName:
                              description: The name of the Secret containing the certificate.
                              type: string
                          required:
                            - certificate
                            - key
                            - secretName
                          type: object
                        clientId:
                          description: OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                          type: string
                        clientSecret:
                          description: Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                          properties:
                            key:
                              description: The key under which the secret value is stored in the Kubernetes Secret.
                              type: string
                            secretName:
                              description: The name of the Kubernetes Secret containing the secret value.
                              type: string
                          required:
                            - key
                            - secretName
                          type: object
                        connectTimeoutSeconds:
                          description: The connect timeout in seconds when connecting to authorization server. If not set, the effective connect timeout is 60 seconds.
                          type: integer
                        disableTlsHostnameVerification:
                          description: Enable or disable TLS hostname verification. Default value is `false`.
                          type: boolean
                        enableMetrics:
                          description: Enable or disable OAuth metrics. Default value is `false`.
                          type: boolean
                        maxTokenExpirySeconds:
                          description: Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.
                          type: integer
                        passwordSecret:
                          description: Reference to the `Secret` which holds the password.
                          properties:
                            password:
                              description: The name of the key in the Secret under which the password is stored.
                              type: string
                            secretName:
                              description: The name of the Secret containing the password.
                              type: string
                          required:
                            - password
                            - secretName
                          type: object
                        readTimeoutSeconds:
                          description: The read timeout in seconds when connecting to authorization server. If not set, the effective read timeout is 60 seconds.
                          type: integer
                        refreshToken:
                          description: Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.
                          properties:
                            key:
                              description: The key under which the secret value is stored in the Kubernetes Secret.
                              type: string
                            secretName:
                              description: The name of the Kubernetes Secret containing the secret value.
                              type: string
                          required:
                            - key
                            - secretName
                          type: object
                        scope:
                          description: OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.
                          type: string
                        tlsTrustedCertificates:
                          description: Trusted certificates for TLS connection to the OAuth server.
                          items:
                            properties:
                              certificate:
                                description: The name of the file certificate in the Secret.
                                type: string
                              secretName:
                                description: The name of the Secret containing the certificate.
                                type: string
                            required:
                              - certificate
                              - secretName
                            type: object
                          type: array
                        tokenEndpointUri:
                          description: Authorization server token endpoint URI.
                          type: string
                        type:
                          description: Authentication type. Currently the supported types are `tls`, `scram-sha-256`, `scram-sha-512`, `plain`, and 'oauth'. `scram-sha-256` and `scram-sha-512` types use SASL SCRAM-SHA-256 and SASL SCRAM-SHA-512 Authentication, respectively. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.
                          enum:
                            - tls
                            - scram-sha-256
                            - scram-sha-512
                            - plain
                            - oauth
                          type: string
                        username:
                          description: Username used for the authentication.
                          type: string
                      required:
                        - type
                      type: object
                    bootstrapServers:
                      description: A list of host:port pairs for establishing the initial connection to the Kafka cluster.
                      type: string
                    config:
                      description: 'The MirrorMaker consumer config. Properties with the following prefixes cannot be set: ssl., bootstrap.servers, group.id, sasl., security., interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).'
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    groupId:
                      description: A unique string that identifies the consumer group this consumer belongs to.
                      type: string
                    numStreams:
                      description: Specifies the number of consumer stream threads to create.
                      minimum: 1
                      type: integer
                    offsetCommitInterval:
                      description: Specifies the offset auto-commit interval in ms. Default value is 60000.
                      type: integer
                    tls:
                      description: TLS configuration for connecting MirrorMaker to the cluster.
                      properties:
                        trustedCertificates:
                          description: Trusted certificates for TLS connection.
                          items:
                            properties:
                              certificate:
                                description: The name of the file certificate in the Secret.
                                type: string
                              secretName:
                                description: The name of the Secret containing the certificate.
                                type: string
                            required:
                              - certificate
                              - secretName
                            type: object
                          type: array
                      type: object
                  required:
                    - bootstrapServers
                    - groupId
                  type: object
                image:
                  description: The docker image for the pods.
                  type: string
                include:
                  description: List of topics which are included for mirroring. This option allows any regular expression using Java-style regular expressions. Mirroring two topics named A and B is achieved by using the expression `A\|B`. Or, as a special case, you can mirror all topics using the regular expression `*`. You can also specify multiple regular expressions separated by commas.
                  type: string
                jvmOptions:
                  description: JVM Options for pods.
                  properties:
                    -XX:
                      description: A map of -XX options to the JVM.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    -Xms:
                      description: -Xms option to to the JVM.
                      pattern: ^[0-9]+[mMgG]?$
                      type: string
                    -Xmx:
                      description: -Xmx option to to the JVM.
                      pattern: ^[0-9]+[mMgG]?$
                      type: string
                    gcLoggingEnabled:
                      description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                      type: boolean
                    javaSystemProperties:
                      description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                      items:
                        properties:
                          name:
                            description: The system property name.
                            type: string
                          value:
                            description: The system property value.
                            type: string
                        type: object
                      type: array
                  type: object
                livenessProbe:
                  description: Pod liveness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                      minimum: 1
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      minimum: 1
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                  type: object
                logging:
                  description: Logging configuration for MirrorMaker.
                  properties:
                    loggers:
                      description: A Map from logger name to logger level.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type:
                      description: Logging type, must be either 'inline' or 'external'.
                      enum:
                        - inline
                        - external
                      type: string
                    valueFrom:
                      description: '`ConfigMap` entry where the logging configuration is stored. '
                      properties:
                        configMapKeyRef:
                          description: Reference to the key in the ConfigMap containing the configuration.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          type: object
                      type: object
                  required:
                    - type
                  type: object
                metricsConfig:
                  description: Metrics configuration.
                  properties:
                    type:
                      description: Metrics type. Only 'jmxPrometheusExporter' supported currently.
                      enum:
                        - jmxPrometheusExporter
                      type: string
                    valueFrom:
                      description: ConfigMap entry where the Prometheus JMX Exporter configuration is stored. For details of the structure of this configuration, see the {JMXExporter}.
                      properties:
                        configMapKeyRef:
                          description: Reference to the key in the ConfigMap containing the configuration.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          type: object
                      type: object
                  required:
                    - type
                    - valueFrom
                  type: object
                producer:
                  description: Configuration of target cluster.
                  properties:
                    abortOnSendFailure:
                      description: Flag to set the MirrorMaker to exit on a failed send. Default value is `true`.
                      type: boolean
                    authentication:
                      description: Authentication configuration for connecting to the cluster.
                      properties:
                        accessToken:
                          description: Link to Kubernetes Secret containing the access token which was obtained from the authorization server.
                          properties:
                            key:
                              description: The key under which the secret value is stored in the Kubernetes Secret.
                              type: string
                            secretName:
                              description: The name of the Kubernetes Secret containing the secret value.
                              type: string
                          required:
                            - key
                            - secretName
                          type: object
                        accessTokenIsJwt:
                          description: Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.
                          type: boolean
                        audience:
                          description: OAuth audience to use when authenticating against the authorization server. Some authorization servers require the audience to be explicitly set. The possible values depend on how the authorization server is configured. By default, `audience` is not specified when performing the token endpoint request.
                          type: string
                        certificateAndKey:
                          description: Reference to the `Secret` which holds the certificate and private key pair.
                          properties:
                            certificate:
                              description: The name of the file certificate in the Secret.
                              type: string
                            key:
                              description: The name of the private key in the Secret.
                              type: string
                            secretName:
                              description: The name of the Secret containing the certificate.
                              type: string
                          required:
                            - certificate
                            - key
                            - secretName
                          type: object
                        clientId:
                          description: OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                          type: string
                        clientSecret:
                          description: Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                          properties:
                            key:
                              description: The key under which the secret value is stored in the Kubernetes Secret.
                              type: string
                            secretName:
                              description: The name of the Kubernetes Secret containing the secret value.
                              type: string
                          required:
                            - key
                            - secretName
                          type: object
                        connectTimeoutSeconds:
                          description: The connect timeout in seconds when connecting to authorization server. If not set, the effective connect timeout is 60 seconds.
                          type: integer
                        disableTlsHostnameVerification:
                          description: Enable or disable TLS hostname verification. Default value is `false`.
                          type: boolean
                        enableMetrics:
                          description: Enable or disable OAuth metrics. Default value is `false`.
                          type: boolean
                        maxTokenExpirySeconds:
                          description: Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.
                          type: integer
                        passwordSecret:
                          description: Reference to the `Secret` which holds the password.
                          properties:
                            password:
                              description: The name of the key in the Secret under which the password is stored.
                              type: string
                            secretName:
                              description: The name of the Secret containing the password.
                              type: string
                          required:
                            - password
                            - secretName
                          type: object
                        readTimeoutSeconds:
                          description: The read timeout in seconds when connecting to authorization server. If not set, the effective read timeout is 60 seconds.
                          type: integer
                        refreshToken:
                          description: Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.
                          properties:
                            key:
                              description: The key under which the secret value is stored in the Kubernetes Secret.
                              type: string
                            secretName:
                              description: The name of the Kubernetes Secret containing the secret value.
                              type: string
                          required:
                            - key
                            - secretName
                          type: object
                        scope:
                          description: OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.
                          type: string
                        tlsTrustedCertificates:
                          description: Trusted certificates for TLS connection to the OAuth server.
                          items:
                            properties:
                              certificate:
                                description: The name of the file certificate in the Secret.
                                type: string
                              secretName:
                                description: The name of the Secret containing the certificate.
                                type: string
                            required:
                              - certificate
                              - secretName
                            type: object
                          type: array
                        tokenEndpointUri:
                          description: Authorization server token endpoint URI.
                          type: string
                        type:
                          description: Authentication type. Currently the supported types are `tls`, `scram-sha-256`, `scram-sha-512`, `plain`, and 'oauth'. `scram-sha-256` and `scram-sha-512` types use SASL SCRAM-SHA-256 and SASL SCRAM-SHA-512 Authentication, respectively. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.
                          enum:
                            - tls
                            - scram-sha-256
                            - scram-sha-512
                            - plain
                            - oauth
                          type: string
                        username:
                          description: Username used for the authentication.
                          type: string
                      required:
                        - type
                      type: object
                    bootstrapServers:
                      description: A list of host:port pairs for establishing the initial connection to the Kafka cluster.
                      type: string
                    config:
                      description: 'The MirrorMaker producer config. Properties with the following prefixes cannot be set: ssl., bootstrap.servers, sasl., security., interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).'
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    tls:
                      description: TLS configuration for connecting MirrorMaker to the cluster.
                      properties:
                        trustedCertificates:
                          description: Trusted certificates for TLS connection.
                          items:
                            properties:
                              certificate:
                                description: The name of the file certificate in the Secret.
                                type: string
                              secretName:
                                description: The name of the Secret containing the certificate.
                                type: string
                            required:
                              - certificate
                              - secretName
                            type: object
                          type: array
                      type: object
                  required:
                    - bootstrapServers
                  type: object
                readinessProbe:
                  description: Pod readiness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                      minimum: 1
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                      minimum: 1
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                      minimum: 1
                      type: integer
                  type: object
                replicas:
                  description: The number of pods in the `Deployment`.
                  minimum: 0
                  type: integer
                resources:
                  description: CPU and memory resources to reserve.
                  properties:
                    limits:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    requests:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                template:
                  description: Template to specify how Kafka MirrorMaker resources, `Deployments` and `Pods`, are generated.
                  properties:
                    deployment:
                      description: Template for Kafka MirrorMaker `Deployment`.
                      properties:
                        deploymentStrategy:
                          description: DeploymentStrategy which will be used for this Deployment. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.
                          enum:
                            - RollingUpdate
                            - Recreate
                          type: string
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                    mirrorMakerContainer:
                      description: Template for Kafka MirrorMaker container.
                      properties:
                        env:
                          description: Environment variables which should be applied to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                      type: object
                    pod:
                      description: Template for Kafka MirrorMaker `Pods`.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaceSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        enableServiceLinks:
                          description: Indicates whether information about services should be injected into Pod's environment variables.
                          type: boolean
                        hostAliases:
                          description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                          items:
                            properties:
                              hostnames:
                                items:
                                  type: string
                                type: array
                              ip:
                                type: string
                            type: object
                          type: array
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        priorityClassName:
                          description: The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and common container settings.
                          properties:
                            fsGroup:
                              type: integer
                            fsGroupChangePolicy:
                              type: string
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            seccompProfile:
                              properties:
                                localhostProfile:
                                  type: string
                                type:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                                hostProcess:
                                  type: boolean
                                runAsUserName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tmpDirSizeLimit:
                          description: Defines the total amount (for example `1Gi`) of local storage required for temporary EmptyDir volume (`/tmp`). Default value is `5Mi`.
                          pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                          type: string
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                        topologySpreadConstraints:
                          description: The pod's topology spread constraints.
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              matchLabelKeys:
                                items:
                                  type: string
                                type: array
                              maxSkew:
                                type: integer
                              minDomains:
                                type: integer
                              nodeAffinityPolicy:
                                type: string
                              nodeTaintsPolicy:
                                type: string
                              topologyKey:
                                type: string
                              whenUnsatisfiable:
                                type: string
                            type: object
                          type: array
                      type: object
                    podDisruptionBudget:
                      description: Template for Kafka MirrorMaker `PodDisruptionBudget`.
                      properties:
                        maxUnavailable:
                          description: Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
                          minimum: 0
                          type: integer
                        metadata:
                          description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                    serviceAccount:
                      description: Template for the Kafka MirrorMaker service account.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                  type: object
                tracing:
                  description: The configuration of tracing in Kafka MirrorMaker.
                  properties:
                    type:
                      description: Type of the tracing used. Currently the only supported types are `jaeger` for OpenTracing (Jaeger) tracing and `opentelemetry` for OpenTelemetry tracing. The OpenTracing (Jaeger) tracing is deprecated.
                      enum:
                        - jaeger
                        - opentelemetry
                      type: string
                  required:
                    - type
                  type: object
                version:
                  description: The Kafka MirrorMaker version. Defaults to {DefaultKafkaVersion}. Consult the documentation to understand the process required to upgrade or downgrade the version.
                  type: string
                whitelist:
                  description: List of topics which are included for mirroring. This option allows any regular expression using Java-style regular expressions. Mirroring two topics named A and B is achieved by using the expression `A\|B`. Or, as a special case, you can mirror all topics using the regular expression `*`. You can also specify multiple regular expressions separated by commas.
                  type: string
              required:
                - replicas
                - consumer
                - producer
              type: object
            status:
              description: The status of Kafka MirrorMaker.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                labelSelector:
                  description: Label selector for pods providing this resource.
                  type: string
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                replicas:
                  description: The current number of pods being used to provide this resource.
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.labelSelector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    component: kafkarebalances.kafka.strimzi.io-crd
    strimzi.io/crd-install: "true"
  name: kafkarebalances.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: KafkaRebalance
    listKind: KafkaRebalanceList
    plural: kafkarebalances
    shortNames:
      - kr
    singular: kafkarebalance
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The name of the Kafka cluster this resource rebalances
          jsonPath: .metadata.labels.strimzi\.io/cluster
          name: Cluster
          type: string
        - description: A proposal has been requested from Cruise Control
          jsonPath: .status.conditions[?(@.type=="PendingProposal")].status
          name: PendingProposal
          type: string
        - description: A proposal is ready and waiting for approval
          jsonPath: .status.conditions[?(@.type=="ProposalReady")].status
          name: ProposalReady
          type: string
        - description: Cruise Control is doing the rebalance
          jsonPath: .status.conditions[?(@.type=="Rebalancing")].status
          name: Rebalancing
          type: string
        - description: The rebalance is complete
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - description: There is an error on the custom resource
          jsonPath: .status.conditions[?(@.type=="NotReady")].status
          name: NotReady
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: The specification of the Kafka rebalance.
              properties:
                brokers:
                  description: The list of newly added brokers in case of scaling up or the ones to be removed in case of scaling down to use for rebalancing. This list can be used only with rebalancing mode `add-brokers` and `removed-brokers`. It is ignored with `full` mode.
                  items:
                    type: integer
                  type: array
                concurrentIntraBrokerPartitionMovements:
                  description: The upper bound of ongoing partition replica movements between disks within each broker. Default is 2.
                  minimum: 0
                  type: integer
                concurrentLeaderMovements:
                  description: The upper bound of ongoing partition leadership movements. Default is 1000.
                  minimum: 0
                  type: integer
                concurrentPartitionMovementsPerBroker:
                  description: The upper bound of ongoing partition replica movements going into/out of each broker. Default is 5.
                  minimum: 0
                  type: integer
                excludedTopics:
                  description: A regular expression where any matching topics will be excluded from the calculation of optimization proposals. This expression will be parsed by the java.util.regex.Pattern class; for more information on the supported format consult the documentation for that class.
                  type: string
                goals:
                  description: A list of goals, ordered by decreasing priority, to use for generating and executing the rebalance proposal. The supported goals are available at https://github.com/linkedin/cruise-control#goals. If an empty goals list is provided, the goals declared in the default.goals Cruise Control configuration parameter are used.
                  items:
                    type: string
                  type: array
                mode:
                  description: "Mode to run the rebalancing. The supported modes are `full`, `add-brokers`, `remove-brokers`.\nIf not specified, the `full` mode is used by default. \n\n* `full` mode runs the rebalancing across all the brokers in the cluster.\n* `add-brokers` mode can be used after scaling up the cluster to move some replicas to the newly added brokers.\n* `remove-brokers` mode can be used before scaling down the cluster to move replicas out of the brokers to be removed.\n"
                  enum:
                    - full
                    - add-brokers
                    - remove-brokers
                  type: string
                rebalanceDisk:
                  description: Enables intra-broker disk balancing, which balances disk space utilization between disks on the same broker. Only applies to Kafka deployments that use JBOD storage with multiple disks. When enabled, inter-broker balancing is disabled. Default is false.
                  type: boolean
                replicaMovementStrategies:
                  description: A list of strategy class names used to determine the execution order for the replica movements in the generated optimization proposal. By default BaseReplicaMovementStrategy is used, which will execute the replica movements in the order that they were generated.
                  items:
                    type: string
                  type: array
                replicationThrottle:
                  description: The upper bound, in bytes per second, on the bandwidth used to move replicas. There is no limit by default.
                  minimum: 0
                  type: integer
                skipHardGoalCheck:
                  description: Whether to allow the hard goals specified in the Kafka CR to be skipped in optimization proposal generation. This can be useful when some of those hard goals are preventing a balance solution being found. Default is false.
                  type: boolean
              type: object
            status:
              description: The status of the Kafka rebalance.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                optimizationResult:
                  description: A JSON object describing the optimization result.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                sessionId:
                  description: The session identifier for requests to Cruise Control pertaining to this KafkaRebalance resource. This is used by the Kafka Rebalance operator to track the status of ongoing rebalancing operations.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    component: kafkas.kafka.strimzi.io-crd
    strimzi.io/crd-install: "true"
  name: kafkas.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: Kafka
    listKind: KafkaList
    plural: kafkas
    shortNames:
      - k
    singular: kafka
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The desired number of Kafka replicas in the cluster
          jsonPath: .spec.kafka.replicas
          name: Desired Kafka replicas
          type: integer
        - description: The desired number of ZooKeeper replicas in the cluster
          jsonPath: .spec.zookeeper.replicas
          name: Desired ZK replicas
          type: integer
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - description: Warnings related to the custom resource
          jsonPath: .status.conditions[?(@.type=="Warning")].status
          name: Warnings
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: The specification of the Kafka and ZooKeeper clusters, and Topic Operator.
              properties:
                clientsCa:
                  description: Configuration of the clients certificate authority.
                  properties:
                    certificateExpirationPolicy:
                      description: How should CA certificate expiration be handled when `generateCertificateAuthority=true`. The default is for a new CA certificate to be generated reusing the existing private key.
                      enum:
                        - renew-certificate
                        - replace-key
                      type: string
                    generateCertificateAuthority:
                      description: If true then Certificate Authority certificates will be generated automatically. Otherwise the user will need to provide a Secret with the CA certificate. Default is true.
                      type: boolean
                    generateSecretOwnerReference:
                      description: If `true`, the Cluster and Client CA Secrets are configured with the `ownerReference` set to the `Kafka` resource. If the `Kafka` resource is deleted when `true`, the CA Secrets are also deleted. If `false`, the `ownerReference` is disabled. If the `Kafka` resource is deleted when `false`, the CA Secrets are retained and available for reuse. Default is `true`.
                      type: boolean
                    renewalDays:
                      description: The number of days in the certificate renewal period. This is the number of days before the a certificate expires during which renewal actions may be performed. When `generateCertificateAuthority` is true, this will cause the generation of a new certificate. When `generateCertificateAuthority` is true, this will cause extra logging at WARN level about the pending certificate expiry. Default is 30.
                      minimum: 1
                      type: integer
                    validityDays:
                      description: The number of days generated certificates should be valid for. The default is 365.
                      minimum: 1
                      type: integer
                  type: object
                clusterCa:
                  description: Configuration of the cluster certificate authority.
                  properties:
                    certificateExpirationPolicy:
                      description: How should CA certificate expiration be handled when `generateCertificateAuthority=true`. The default is for a new CA certificate to be generated reusing the existing private key.
                      enum:
                        - renew-certificate
                        - replace-key
                      type: string
                    generateCertificateAuthority:
                      description: If true then Certificate Authority certificates will be generated automatically. Otherwise the user will need to provide a Secret with the CA certificate. Default is true.
                      type: boolean
                    generateSecretOwnerReference:
                      description: If `true`, the Cluster and Client CA Secrets are configured with the `ownerReference` set to the `Kafka` resource. If the `Kafka` resource is deleted when `true`, the CA Secrets are also deleted. If `false`, the `ownerReference` is disabled. If the `Kafka` resource is deleted when `false`, the CA Secrets are retained and available for reuse. Default is `true`.
                      type: boolean
                    renewalDays:
                      description: The number of days in the certificate renewal period. This is the number of days before the a certificate expires during which renewal actions may be performed. When `generateCertificateAuthority` is true, this will cause the generation of a new certificate. When `generateCertificateAuthority` is true, this will cause extra logging at WARN level about the pending certificate expiry. Default is 30.
                      minimum: 1
                      type: integer
                    validityDays:
                      description: The number of days generated certificates should be valid for. The default is 365.
                      minimum: 1
                      type: integer
                  type: object
                cruiseControl:
                  description: Configuration for Cruise Control deployment. Deploys a Cruise Control instance when specified.
                  properties:
                    brokerCapacity:
                      description: The Cruise Control `brokerCapacity` configuration.
                      properties:
                        cpu:
                          description: Broker capacity for CPU resource in cores or millicores. For example, 1, 1.500, 1500m. For more information on valid CPU resource units see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu.
                          pattern: ^[0-9]+([.][0-9]{0,3}|[m]?)$
                          type: string
                        cpuUtilization:
                          description: Broker capacity for CPU resource utilization as a percentage (0 - 100).
                          maximum: 100
                          minimum: 0
                          type: integer
                        disk:
                          description: Broker capacity for disk in bytes. Use a number value with either standard Kubernetes byte units (K, M, G, or T), their bibyte (power of two) equivalents (Ki, Mi, Gi, or Ti), or a byte value with or without E notation. For example, 100000M, 100000Mi, 104857600000, or 1e+11.
                          pattern: ^[0-9]+([.][0-9]*)?([KMGTPE]i?|e[0-9]+)?$
                          type: string
                        inboundNetwork:
                          description: Broker capacity for inbound network throughput in bytes per second. Use an integer value with standard Kubernetes byte units (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per second. For example, 10000KiB/s.
                          pattern: ^[0-9]+([KMG]i?)?B/s$
                          type: string
                        outboundNetwork:
                          description: Broker capacity for outbound network throughput in bytes per second. Use an integer value with standard Kubernetes byte units (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per second. For example, 10000KiB/s.
                          pattern: ^[0-9]+([KMG]i?)?B/s$
                          type: string
                        overrides:
                          description: Overrides for individual brokers. The `overrides` property lets you specify a different capacity configuration for different brokers.
                          items:
                            properties:
                              brokers:
                                description: List of Kafka brokers (broker identifiers).
                                items:
                                  type: integer
                                type: array
                              cpu:
                                description: Broker capacity for CPU resource in cores or millicores. For example, 1, 1.500, 1500m. For more information on valid CPU resource units see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu.
                                pattern: ^[0-9]+([.][0-9]{0,3}|[m]?)$
                                type: string
                              inboundNetwork:
                                description: Broker capacity for inbound network throughput in bytes per second. Use an integer value with standard Kubernetes byte units (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per second. For example, 10000KiB/s.
                                pattern: ^[0-9]+([KMG]i?)?B/s$
                                type: string
                              outboundNetwork:
                                description: Broker capacity for outbound network throughput in bytes per second. Use an integer value with standard Kubernetes byte units (K, M, G) or their bibyte (power of two) equivalents (Ki, Mi, Gi) per second. For example, 10000KiB/s.
                                pattern: ^[0-9]+([KMG]i?)?B/s$
                                type: string
                            required:
                              - brokers
                            type: object
                          type: array
                      type: object
                    config:
                      description: 'The Cruise Control configuration. For a full list of configuration options refer to https://github.com/linkedin/cruise-control/wiki/Configurations. Note that properties with the following prefixes cannot be set: bootstrap.servers, client.id, zookeeper., network., security., failed.brokers.zk.path,webserver.http., webserver.api.urlprefix, webserver.session.path, webserver.accesslog., two.step., request.reason.required,metric.reporter.sampler.bootstrap.servers, capacity.config.file, self.healing., ssl., kafka.broker.failure.detection.enable, topic.config.provider.class (with the exception of: ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols, webserver.http.cors.enabled, webserver.http.cors.origin, webserver.http.cors.exposeheaders, webserver.security.enable, webserver.ssl.enable).'
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    image:
                      description: The docker image for the pods.
                      type: string
                    jvmOptions:
                      description: JVM Options for the Cruise Control container.
                      properties:
                        -XX:
                          description: A map of -XX options to the JVM.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        -Xms:
                          description: -Xms option to to the JVM.
                          pattern: ^[0-9]+[mMgG]?$
                          type: string
                        -Xmx:
                          description: -Xmx option to to the JVM.
                          pattern: ^[0-9]+[mMgG]?$
                          type: string
                        gcLoggingEnabled:
                          description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                          type: boolean
                        javaSystemProperties:
                          description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                          items:
                            properties:
                              name:
                                description: The system property name.
                                type: string
                              value:
                                description: The system property value.
                                type: string
                            type: object
                          type: array
                      type: object
                    livenessProbe:
                      description: Pod liveness checking for the Cruise Control container.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          minimum: 1
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          minimum: 1
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                      type: object
                    logging:
                      description: Logging configuration (Log4j 2) for Cruise Control.
                      properties:
                        loggers:
                          description: A Map from logger name to logger level.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        type:
                          description: Logging type, must be either 'inline' or 'external'.
                          enum:
                            - inline
                            - external
                          type: string
                        valueFrom:
                          description: '`ConfigMap` entry where the logging configuration is stored. '
                          properties:
                            configMapKeyRef:
                              description: Reference to the key in the ConfigMap containing the configuration.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - type
                      type: object
                    metricsConfig:
                      description: Metrics configuration.
                      properties:
                        type:
                          description: Metrics type. Only 'jmxPrometheusExporter' supported currently.
                          enum:
                            - jmxPrometheusExporter
                          type: string
                        valueFrom:
                          description: ConfigMap entry where the Prometheus JMX Exporter configuration is stored. For details of the structure of this configuration, see the {JMXExporter}.
                          properties:
                            configMapKeyRef:
                              description: Reference to the key in the ConfigMap containing the configuration.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - type
                        - valueFrom
                      type: object
                    readinessProbe:
                      description: Pod readiness checking for the Cruise Control container.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          minimum: 1
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          minimum: 1
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                      type: object
                    resources:
                      description: CPU and memory resources to reserve for the Cruise Control container.
                      properties:
                        limits:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        requests:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    template:
                      description: Template to specify how Cruise Control resources, `Deployments` and `Pods`, are generated.
                      properties:
                        apiService:
                          description: Template for Cruise Control API `Service`.
                          properties:
                            ipFamilies:
                              description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting. Available on Kubernetes 1.20 and newer.
                              items:
                                enum:
                                  - IPv4
                                  - IPv6
                                type: string
                              type: array
                            ipFamilyPolicy:
                              description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type. Available on Kubernetes 1.20 and newer.
                              enum:
                                - SingleStack
                                - PreferDualStack
                                - RequireDualStack
                              type: string
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        cruiseControlContainer:
                          description: Template for the Cruise Control container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                          type: object
                        deployment:
                          description: Template for Cruise Control `Deployment`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        pod:
                          description: Template for Cruise Control `Pods`.
                          properties:
                            affinity:
                              description: The pod's affinity rules.
                              properties:
                                nodeAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          preference:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      properties:
                                        nodeSelectorTerms:
                                          items:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                podAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                podAntiAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            enableServiceLinks:
                              description: Indicates whether information about services should be injected into Pod's environment variables.
                              type: boolean
                            hostAliases:
                              description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                              items:
                                properties:
                                  hostnames:
                                    items:
                                      type: string
                                    type: array
                                  ip:
                                    type: string
                                type: object
                              type: array
                            imagePullSecrets:
                              description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                              items:
                                properties:
                                  name:
                                    type: string
                                type: object
                              type: array
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            priorityClassName:
                              description: The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.
                              type: string
                            schedulerName:
                              description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                              type: string
                            securityContext:
                              description: Configures pod-level security attributes and common container settings.
                              properties:
                                fsGroup:
                                  type: integer
                                fsGroupChangePolicy:
                                  type: string
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                supplementalGroups:
                                  items:
                                    type: integer
                                  type: array
                                sysctls:
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            terminationGracePeriodSeconds:
                              description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                              minimum: 0
                              type: integer
                            tmpDirSizeLimit:
                              description: Defines the total amount (for example `1Gi`) of local storage required for temporary EmptyDir volume (`/tmp`). Default value is `5Mi`.
                              pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                              type: string
                            tolerations:
                              description: The pod's tolerations.
                              items:
                                properties:
                                  effect:
                                    type: string
                                  key:
                                    type: string
                                  operator:
                                    type: string
                                  tolerationSeconds:
                                    type: integer
                                  value:
                                    type: string
                                type: object
                              type: array
                            topologySpreadConstraints:
                              description: The pod's topology spread constraints.
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                    type: object
                                  matchLabelKeys:
                                    items:
                                      type: string
                                    type: array
                                  maxSkew:
                                    type: integer
                                  minDomains:
                                    type: integer
                                  nodeAffinityPolicy:
                                    type: string
                                  nodeTaintsPolicy:
                                    type: string
                                  topologyKey:
                                    type: string
                                  whenUnsatisfiable:
                                    type: string
                                type: object
                              type: array
                          type: object
                        podDisruptionBudget:
                          description: Template for Cruise Control `PodDisruptionBudget`.
                          properties:
                            maxUnavailable:
                              description: Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
                              minimum: 0
                              type: integer
                            metadata:
                              description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        serviceAccount:
                          description: Template for the Cruise Control service account.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        tlsSidecarContainer:
                          description: Template for the Cruise Control TLS sidecar container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                          type: object
                      type: object
                    tlsSidecar:
                      description: TLS sidecar configuration.
                      properties:
                        image:
                          description: The docker image for the container.
                          type: string
                        livenessProbe:
                          description: Pod liveness checking.
                          properties:
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              minimum: 1
                              type: integer
                            initialDelaySeconds:
                              description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                              minimum: 0
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                              minimum: 1
                              type: integer
                            timeoutSeconds:
                              description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                          type: object
                        logLevel:
                          description: The log level for the TLS sidecar. Default value is `notice`.
                          enum:
                            - emerg
                            - alert
                            - crit
                            - err
                            - warning
                            - notice
                            - info
                            - debug
                          type: string
                        readinessProbe:
                          description: Pod readiness checking.
                          properties:
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              minimum: 1
                              type: integer
                            initialDelaySeconds:
                              description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                              minimum: 0
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                              minimum: 1
                              type: integer
                            timeoutSeconds:
                              description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                          type: object
                        resources:
                          description: CPU and memory resources to reserve.
                          properties:
                            limits:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            requests:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                  type: object
                entityOperator:
                  description: Configuration of the Entity Operator.
                  properties:
                    template:
                      description: Template for Entity Operator resources. The template allows users to specify how a `Deployment` and `Pod` is generated.
                      properties:
                        deployment:
                          description: Template for Entity Operator `Deployment`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        pod:
                          description: Template for Entity Operator `Pods`.
                          properties:
                            affinity:
                              description: The pod's affinity rules.
                              properties:
                                nodeAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          preference:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      properties:
                                        nodeSelectorTerms:
                                          items:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                podAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                podAntiAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            enableServiceLinks:
                              description: Indicates whether information about services should be injected into Pod's environment variables.
                              type: boolean
                            hostAliases:
                              description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                              items:
                                properties:
                                  hostnames:
                                    items:
                                      type: string
                                    type: array
                                  ip:
                                    type: string
                                type: object
                              type: array
                            imagePullSecrets:
                              description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                              items:
                                properties:
                                  name:
                                    type: string
                                type: object
                              type: array
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            priorityClassName:
                              description: The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.
                              type: string
                            schedulerName:
                              description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                              type: string
                            securityContext:
                              description: Configures pod-level security attributes and common container settings.
                              properties:
                                fsGroup:
                                  type: integer
                                fsGroupChangePolicy:
                                  type: string
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                supplementalGroups:
                                  items:
                                    type: integer
                                  type: array
                                sysctls:
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            terminationGracePeriodSeconds:
                              description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                              minimum: 0
                              type: integer
                            tmpDirSizeLimit:
                              description: Defines the total amount (for example `1Gi`) of local storage required for temporary EmptyDir volume (`/tmp`). Default value is `5Mi`.
                              pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                              type: string
                            tolerations:
                              description: The pod's tolerations.
                              items:
                                properties:
                                  effect:
                                    type: string
                                  key:
                                    type: string
                                  operator:
                                    type: string
                                  tolerationSeconds:
                                    type: integer
                                  value:
                                    type: string
                                type: object
                              type: array
                            topologySpreadConstraints:
                              description: The pod's topology spread constraints.
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                    type: object
                                  matchLabelKeys:
                                    items:
                                      type: string
                                    type: array
                                  maxSkew:
                                    type: integer
                                  minDomains:
                                    type: integer
                                  nodeAffinityPolicy:
                                    type: string
                                  nodeTaintsPolicy:
                                    type: string
                                  topologyKey:
                                    type: string
                                  whenUnsatisfiable:
                                    type: string
                                type: object
                              type: array
                          type: object
                        serviceAccount:
                          description: Template for the Entity Operator service account.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        tlsSidecarContainer:
                          description: Template for the Entity Operator TLS sidecar container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                          type: object
                        topicOperatorContainer:
                          description: Template for the Entity Topic Operator container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                          type: object
                        userOperatorContainer:
                          description: Template for the Entity User Operator container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                          type: object
                      type: object
                    tlsSidecar:
                      description: TLS sidecar configuration.
                      properties:
                        image:
                          description: The docker image for the container.
                          type: string
                        livenessProbe:
                          description: Pod liveness checking.
                          properties:
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              minimum: 1
                              type: integer
                            initialDelaySeconds:
                              description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                              minimum: 0
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                              minimum: 1
                              type: integer
                            timeoutSeconds:
                              description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                          type: object
                        logLevel:
                          description: The log level for the TLS sidecar. Default value is `notice`.
                          enum:
                            - emerg
                            - alert
                            - crit
                            - err
                            - warning
                            - notice
                            - info
                            - debug
                          type: string
                        readinessProbe:
                          description: Pod readiness checking.
                          properties:
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              minimum: 1
                              type: integer
                            initialDelaySeconds:
                              description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                              minimum: 0
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                              minimum: 1
                              type: integer
                            timeoutSeconds:
                              description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                          type: object
                        resources:
                          description: CPU and memory resources to reserve.
                          properties:
                            limits:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            requests:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                    topicOperator:
                      description: Configuration of the Topic Operator.
                      properties:
                        image:
                          description: The image to use for the Topic Operator.
                          type: string
                        jvmOptions:
                          description: JVM Options for pods.
                          properties:
                            -XX:
                              description: A map of -XX options to the JVM.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            -Xms:
                              description: -Xms option to to the JVM.
                              pattern: ^[0-9]+[mMgG]?$
                              type: string
                            -Xmx:
                              description: -Xmx option to to the JVM.
                              pattern: ^[0-9]+[mMgG]?$
                              type: string
                            gcLoggingEnabled:
                              description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                              type: boolean
                            javaSystemProperties:
                              description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                              items:
                                properties:
                                  name:
                                    description: The system property name.
                                    type: string
                                  value:
                                    description: The system property value.
                                    type: string
                                type: object
                              type: array
                          type: object
                        livenessProbe:
                          description: Pod liveness checking.
                          properties:
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              minimum: 1
                              type: integer
                            initialDelaySeconds:
                              description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                              minimum: 0
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                              minimum: 1
                              type: integer
                            timeoutSeconds:
                              description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                          type: object
                        logging:
                          description: Logging configuration.
                          properties:
                            loggers:
                              description: A Map from logger name to logger level.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            type:
                              description: Logging type, must be either 'inline' or 'external'.
                              enum:
                                - inline
                                - external
                              type: string
                            valueFrom:
                              description: '`ConfigMap` entry where the logging configuration is stored. '
                              properties:
                                configMapKeyRef:
                                  description: Reference to the key in the ConfigMap containing the configuration.
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  type: object
                              type: object
                          required:
                            - type
                          type: object
                        readinessProbe:
                          description: Pod readiness checking.
                          properties:
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              minimum: 1
                              type: integer
                            initialDelaySeconds:
                              description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                              minimum: 0
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                              minimum: 1
                              type: integer
                            timeoutSeconds:
                              description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                          type: object
                        reconciliationIntervalSeconds:
                          description: Interval between periodic reconciliations.
                          minimum: 0
                          type: integer
                        resources:
                          description: CPU and memory resources to reserve.
                          properties:
                            limits:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            requests:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        startupProbe:
                          description: Pod startup checking.
                          properties:
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              minimum: 1
                              type: integer
                            initialDelaySeconds:
                              description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                              minimum: 0
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                              minimum: 1
                              type: integer
                            timeoutSeconds:
                              description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                          type: object
                        topicMetadataMaxAttempts:
                          description: The number of attempts at getting topic metadata.
                          minimum: 0
                          type: integer
                        watchedNamespace:
                          description: The namespace the Topic Operator should watch.
                          type: string
                        zookeeperSessionTimeoutSeconds:
                          description: Timeout for the ZooKeeper session.
                          minimum: 0
                          type: integer
                      type: object
                    userOperator:
                      description: Configuration of the User Operator.
                      properties:
                        image:
                          description: The image to use for the User Operator.
                          type: string
                        jvmOptions:
                          description: JVM Options for pods.
                          properties:
                            -XX:
                              description: A map of -XX options to the JVM.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            -Xms:
                              description: -Xms option to to the JVM.
                              pattern: ^[0-9]+[mMgG]?$
                              type: string
                            -Xmx:
                              description: -Xmx option to to the JVM.
                              pattern: ^[0-9]+[mMgG]?$
                              type: string
                            gcLoggingEnabled:
                              description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                              type: boolean
                            javaSystemProperties:
                              description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                              items:
                                properties:
                                  name:
                                    description: The system property name.
                                    type: string
                                  value:
                                    description: The system property value.
                                    type: string
                                type: object
                              type: array
                          type: object
                        livenessProbe:
                          description: Pod liveness checking.
                          properties:
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              minimum: 1
                              type: integer
                            initialDelaySeconds:
                              description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                              minimum: 0
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                              minimum: 1
                              type: integer
                            timeoutSeconds:
                              description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                          type: object
                        logging:
                          description: Logging configuration.
                          properties:
                            loggers:
                              description: A Map from logger name to logger level.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            type:
                              description: Logging type, must be either 'inline' or 'external'.
                              enum:
                                - inline
                                - external
                              type: string
                            valueFrom:
                              description: '`ConfigMap` entry where the logging configuration is stored. '
                              properties:
                                configMapKeyRef:
                                  description: Reference to the key in the ConfigMap containing the configuration.
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  type: object
                              type: object
                          required:
                            - type
                          type: object
                        readinessProbe:
                          description: Pod readiness checking.
                          properties:
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                              minimum: 1
                              type: integer
                            initialDelaySeconds:
                              description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                              minimum: 0
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                              minimum: 1
                              type: integer
                            timeoutSeconds:
                              description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                              minimum: 1
                              type: integer
                          type: object
                        reconciliationIntervalSeconds:
                          description: Interval between periodic reconciliations.
                          minimum: 0
                          type: integer
                        resources:
                          description: CPU and memory resources to reserve.
                          properties:
                            limits:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            requests:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        secretPrefix:
                          description: The prefix that will be added to the KafkaUser name to be used as the Secret name.
                          type: string
                        watchedNamespace:
                          description: The namespace the User Operator should watch.
                          type: string
                        zookeeperSessionTimeoutSeconds:
                          description: Timeout for the ZooKeeper session.
                          minimum: 0
                          type: integer
                      type: object
                  type: object
                jmxTrans:
                  description: Configuration for JmxTrans. When the property is present a JmxTrans deployment is created for gathering JMX metrics from each Kafka broker. For more information see https://github.com/jmxtrans/jmxtrans[JmxTrans GitHub].
                  properties:
                    image:
                      description: The image to use for the JmxTrans.
                      type: string
                    kafkaQueries:
                      description: Queries to send to the Kafka brokers to define what data should be read from each broker. For more information on these properties see, xref:type-JmxTransQueryTemplate-reference[`JmxTransQueryTemplate` schema reference].
                      items:
                        properties:
                          attributes:
                            description: Determine which attributes of the targeted MBean should be included.
                            items:
                              type: string
                            type: array
                          outputs:
                            description: List of the names of output definitions specified in the spec.kafka.jmxTrans.outputDefinitions that have defined where JMX metrics are pushed to, and in which data format.
                            items:
                              type: string
                            type: array
                          targetMBean:
                            description: If using wildcards instead of a specific MBean then the data is gathered from multiple MBeans. Otherwise if specifying an MBean then data is gathered from that specified MBean.
                            type: string
                        required:
                          - targetMBean
                          - attributes
                          - outputs
                        type: object
                      type: array
                    logLevel:
                      description: Sets the logging level of the JmxTrans deployment.For more information see, https://github.com/jmxtrans/jmxtrans-agent/wiki/Troubleshooting[JmxTrans Logging Level].
                      type: string
                    outputDefinitions:
                      description: Defines the output hosts that will be referenced later on. For more information on these properties see, xref:type-JmxTransOutputDefinitionTemplate-reference[`JmxTransOutputDefinitionTemplate` schema reference].
                      items:
                        properties:
                          flushDelayInSeconds:
                            description: How many seconds the JmxTrans waits before pushing a new set of data out.
                            type: integer
                          host:
                            description: The DNS/hostname of the remote host that the data is pushed to.
                            type: string
                          name:
                            description: Template for setting the name of the output definition. This is used to identify where to send the results of queries should be sent.
                            type: string
                          outputType:
                            description: Template for setting the format of the data that will be pushed.For more information see https://github.com/jmxtrans/jmxtrans/wiki/OutputWriters[JmxTrans OutputWriters].
                            type: string
                          port:
                            description: The port of the remote host that the data is pushed to.
                            type: integer
                          typeNames:
                            description: Template for filtering data to be included in response to a wildcard query. For more information see https://github.com/jmxtrans/jmxtrans/wiki/Queries[JmxTrans queries].
                            items:
                              type: string
                            type: array
                        required:
                          - outputType
                          - name
                        type: object
                      type: array
                    resources:
                      description: CPU and memory resources to reserve.
                      properties:
                        limits:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        requests:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    template:
                      description: Template for JmxTrans resources.
                      properties:
                        container:
                          description: Template for JmxTrans container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                          type: object
                        deployment:
                          description: Template for JmxTrans `Deployment`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        pod:
                          description: Template for JmxTrans `Pods`.
                          properties:
                            affinity:
                              description: The pod's affinity rules.
                              properties:
                                nodeAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          preference:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      properties:
                                        nodeSelectorTerms:
                                          items:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                podAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                podAntiAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            enableServiceLinks:
                              description: Indicates whether information about services should be injected into Pod's environment variables.
                              type: boolean
                            hostAliases:
                              description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                              items:
                                properties:
                                  hostnames:
                                    items:
                                      type: string
                                    type: array
                                  ip:
                                    type: string
                                type: object
                              type: array
                            imagePullSecrets:
                              description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                              items:
                                properties:
                                  name:
                                    type: string
                                type: object
                              type: array
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            priorityClassName:
                              description: The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.
                              type: string
                            schedulerName:
                              description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                              type: string
                            securityContext:
                              description: Configures pod-level security attributes and common container settings.
                              properties:
                                fsGroup:
                                  type: integer
                                fsGroupChangePolicy:
                                  type: string
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                supplementalGroups:
                                  items:
                                    type: integer
                                  type: array
                                sysctls:
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            terminationGracePeriodSeconds:
                              description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                              minimum: 0
                              type: integer
                            tmpDirSizeLimit:
                              description: Defines the total amount (for example `1Gi`) of local storage required for temporary EmptyDir volume (`/tmp`). Default value is `5Mi`.
                              pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                              type: string
                            tolerations:
                              description: The pod's tolerations.
                              items:
                                properties:
                                  effect:
                                    type: string
                                  key:
                                    type: string
                                  operator:
                                    type: string
                                  tolerationSeconds:
                                    type: integer
                                  value:
                                    type: string
                                type: object
                              type: array
                            topologySpreadConstraints:
                              description: The pod's topology spread constraints.
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                    type: object
                                  matchLabelKeys:
                                    items:
                                      type: string
                                    type: array
                                  maxSkew:
                                    type: integer
                                  minDomains:
                                    type: integer
                                  nodeAffinityPolicy:
                                    type: string
                                  nodeTaintsPolicy:
                                    type: string
                                  topologyKey:
                                    type: string
                                  whenUnsatisfiable:
                                    type: string
                                type: object
                              type: array
                          type: object
                        serviceAccount:
                          description: Template for the JMX Trans service account.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                      type: object
                  required:
                    - outputDefinitions
                    - kafkaQueries
                  type: object
                kafka:
                  description: Configuration of the Kafka cluster.
                  properties:
                    authorization:
                      description: Authorization configuration for Kafka brokers.
                      properties:
                        allowOnError:
                          description: Defines whether a Kafka client should be allowed or denied by default when the authorizer fails to query the Open Policy Agent, for example, when it is temporarily unavailable). Defaults to `false` - all actions will be denied.
                          type: boolean
                        authorizerClass:
                          description: Authorization implementation class, which must be available in classpath.
                          type: string
                        clientId:
                          description: OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.
                          type: string
                        connectTimeoutSeconds:
                          description: The connect timeout in seconds when connecting to authorization server. If not set, the effective connect timeout is 60 seconds.
                          minimum: 1
                          type: integer
                        delegateToKafkaAcls:
                          description: Whether authorization decision should be delegated to the 'Simple' authorizer if DENIED by Keycloak Authorization Services policies. Default value is `false`.
                          type: boolean
                        disableTlsHostnameVerification:
                          description: Enable or disable TLS hostname verification. Default value is `false`.
                          type: boolean
                        enableMetrics:
                          description: Enable or disable OAuth metrics. Default value is `false`.
                          type: boolean
                        expireAfterMs:
                          description: The expiration of the records kept in the local cache to avoid querying the Open Policy Agent for every request. Defines how often the cached authorization decisions are reloaded from the Open Policy Agent server. In milliseconds. Defaults to `3600000`.
                          type: integer
                        grantsRefreshPeriodSeconds:
                          description: The time between two consecutive grants refresh runs in seconds. The default value is 60.
                          minimum: 0
                          type: integer
                        grantsRefreshPoolSize:
                          description: The number of threads to use to refresh grants for active sessions. The more threads, the more parallelism, so the sooner the job completes. However, using more threads places a heavier load on the authorization server. The default value is 5.
                          minimum: 1
                          type: integer
                        initialCacheCapacity:
                          description: Initial capacity of the local cache used by the authorizer to avoid querying the Open Policy Agent for every request Defaults to `5000`.
                          type: integer
                        maximumCacheSize:
                          description: Maximum capacity of the local cache used by the authorizer to avoid querying the Open Policy Agent for every request. Defaults to `50000`.
                          type: integer
                        readTimeoutSeconds:
                          description: The read timeout in seconds when connecting to authorization server. If not set, the effective read timeout is 60 seconds.
                          minimum: 1
                          type: integer
                        superUsers:
                          description: List of super users, which are user principals with unlimited access rights.
                          items:
                            type: string
                          type: array
                        supportsAdminApi:
                          description: Indicates whether the custom authorizer supports the APIs for managing ACLs using the Kafka Admin API. Defaults to `false`.
                          type: boolean
                        tlsTrustedCertificates:
                          description: Trusted certificates for TLS connection to the OAuth server.
                          items:
                            properties:
                              certificate:
                                description: The name of the file certificate in the Secret.
                                type: string
                              secretName:
                                description: The name of the Secret containing the certificate.
                                type: string
                            required:
                              - certificate
                              - secretName
                            type: object
                          type: array
                        tokenEndpointUri:
                          description: Authorization server token endpoint URI.
                          type: string
                        type:
                          description: Authorization type. Currently, the supported types are `simple`, `keycloak`, `opa` and `custom`. `simple` authorization type uses Kafka's `kafka.security.authorizer.AclAuthorizer` class for authorization. `keycloak` authorization type uses Keycloak Authorization Services for authorization. `opa` authorization type uses Open Policy Agent based authorization.`custom` authorization type uses user-provided implementation for authorization.
                          enum:
                            - simple
                            - opa
                            - keycloak
                            - custom
                          type: string
                        url:
                          description: The URL used to connect to the Open Policy Agent server. The URL has to include the policy which will be queried by the authorizer. This option is required.
                          example: http://opa:8181/v1/data/kafka/authz/allow
                          type: string
                      required:
                        - type
                      type: object
                    brokerRackInitImage:
                      description: The image of the init container used for initializing the `broker.rack`.
                      type: string
                    config:
                      description: 'Kafka broker config properties with the following prefixes cannot be set: listeners, advertised., broker., listener., host.name, port, inter.broker.listener.name, sasl., ssl., security., password., log.dir, zookeeper.connect, zookeeper.set.acl, zookeeper.ssl, zookeeper.clientCnxnSocket, authorizer., super.user, cruise.control.metrics.topic, cruise.control.metrics.reporter.bootstrap.servers,node.id, process.roles, controller. (with the exception of: zookeeper.connection.timeout.ms, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols, sasl.server.max.receive.size,cruise.control.metrics.topic.num.partitions, cruise.control.metrics.topic.replication.factor, cruise.control.metrics.topic.retention.ms,cruise.control.metrics.topic.auto.create.retries, cruise.control.metrics.topic.auto.create.timeout.ms,cruise.control.metrics.topic.min.insync.replicas,controller.quorum.election.backoff.max.ms, controller.quorum.election.timeout.ms, controller.quorum.fetch.timeout.ms).'
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    image:
                      description: The docker image for the pods. The default value depends on the configured `Kafka.spec.kafka.version`.
                      type: string
                    jmxOptions:
                      description: JMX Options for Kafka brokers.
                      properties:
                        authentication:
                          description: Authentication configuration for connecting to the JMX port.
                          properties:
                            type:
                              description: Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.
                              enum:
                                - password
                              type: string
                          required:
                            - type
                          type: object
                      type: object
                    jvmOptions:
                      description: JVM Options for pods.
                      properties:
                        -XX:
                          description: A map of -XX options to the JVM.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        -Xms:
                          description: -Xms option to to the JVM.
                          pattern: ^[0-9]+[mMgG]?$
                          type: string
                        -Xmx:
                          description: -Xmx option to to the JVM.
                          pattern: ^[0-9]+[mMgG]?$
                          type: string
                        gcLoggingEnabled:
                          description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                          type: boolean
                        javaSystemProperties:
                          description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                          items:
                            properties:
                              name:
                                description: The system property name.
                                type: string
                              value:
                                description: The system property value.
                                type: string
                            type: object
                          type: array
                      type: object
                    listeners:
                      description: Configures listeners of Kafka brokers.
                      items:
                        properties:
                          authentication:
                            description: Authentication configuration for this listener.
                            properties:
                              accessTokenIsJwt:
                                description: Configure whether the access token is treated as JWT. This must be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.
                                type: boolean
                              checkAccessTokenType:
                                description: Configure whether the access token type check is performed or not. This should be set to `false` if the authorization server does not include 'typ' claim in JWT token. Defaults to `true`.
                                type: boolean
                              checkAudience:
                                description: Enable or disable audience checking. Audience checks identify the recipients of tokens. If audience checking is enabled, the OAuth Client ID also has to be configured using the `clientId` property. The Kafka broker will reject tokens that do not have its `clientId` in their `aud` (audience) claim.Default value is `false`.
                                type: boolean
                              checkIssuer:
                                description: Enable or disable issuer checking. By default issuer is checked using the value configured by `validIssuerUri`. Default value is `true`.
                                type: boolean
                              clientAudience:
                                description: The audience to use when making requests to the authorization server's token endpoint. Used for inter-broker authentication and for configuring OAuth 2.0 over PLAIN using the `clientId` and `secret` method.
                                type: string
                              clientId:
                                description: OAuth Client ID which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.
                                type: string
                              clientScope:
                                description: The scope to use when making requests to the authorization server's token endpoint. Used for inter-broker authentication and for configuring OAuth 2.0 over PLAIN using the `clientId` and `secret` method.
                                type: string
                              clientSecret:
                                description: Link to Kubernetes Secret containing the OAuth client secret which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.
                                properties:
                                  key:
                                    description: The key under which the secret value is stored in the Kubernetes Secret.
                                    type: string
                                  secretName:
                                    description: The name of the Kubernetes Secret containing the secret value.
                                    type: string
                                required:
                                  - key
                                  - secretName
                                type: object
                              connectTimeoutSeconds:
                                description: The connect timeout in seconds when connecting to authorization server. If not set, the effective connect timeout is 60 seconds.
                                type: integer
                              customClaimCheck:
                                description: JsonPath filter query to be applied to the JWT token or to the response of the introspection endpoint for additional token validation. Not set by default.
                                type: string
                              disableTlsHostnameVerification:
                                description: Enable or disable TLS hostname verification. Default value is `false`.
                                type: boolean
                              enableECDSA:
                                description: Enable or disable ECDSA support by installing BouncyCastle crypto provider. ECDSA support is always enabled. The BouncyCastle libraries are no longer packaged with Strimzi. Value is ignored.
                                type: boolean
                              enableMetrics:
                                description: Enable or disable OAuth metrics. Default value is `false`.
                                type: boolean
                              enableOauthBearer:
                                description: Enable or disable OAuth authentication over SASL_OAUTHBEARER. Default value is `true`.
                                type: boolean
                              enablePlain:
                                description: Enable or disable OAuth authentication over SASL_PLAIN. There is no re-authentication support when this mechanism is used. Default value is `false`.
                                type: boolean
                              failFast:
                                description: Enable or disable termination of Kafka broker processes due to potentially recoverable runtime errors during startup. Default value is `true`.
                                type: boolean
                              fallbackUserNameClaim:
                                description: The fallback username claim to be used for the user id if the claim specified by `userNameClaim` is not present. This is useful when `client_credentials` authentication only results in the client id being provided in another claim. It only takes effect if `userNameClaim` is set.
                                type: string
                              fallbackUserNamePrefix:
                                description: The prefix to use with the value of `fallbackUserNameClaim` to construct the user id. This only takes effect if `fallbackUserNameClaim` is true, and the value is present for the claim. Mapping usernames and client ids into the same user id space is useful in preventing name collisions.
                                type: string
                              groupsClaim:
                                description: JsonPath query used to extract groups for the user during authentication. Extracted groups can be used by a custom authorizer. By default no groups are extracted.
                                type: string
                              groupsClaimDelimiter:
                                description: A delimiter used to parse groups when they are extracted as a single String value rather than a JSON array. Default value is ',' (comma).
                                type: string
                              introspectionEndpointUri:
                                description: URI of the token introspection endpoint which can be used to validate opaque non-JWT tokens.
                                type: string
                              jwksEndpointUri:
                                description: URI of the JWKS certificate endpoint, which can be used for local JWT validation.
                                type: string
                              jwksExpirySeconds:
                                description: Configures how often are the JWKS certificates considered valid. The expiry interval has to be at least 60 seconds longer then the refresh interval specified in `jwksRefreshSeconds`. Defaults to 360 seconds.
                                minimum: 1
                                type: integer
                              jwksIgnoreKeyUse:
                                description: Flag to ignore the 'use' attribute of `key` declarations in a JWKS endpoint response. Default value is `false`.
                                type: boolean
                              jwksMinRefreshPauseSeconds:
                                description: The minimum pause between two consecutive refreshes. When an unknown signing key is encountered the refresh is scheduled immediately, but will always wait for this minimum pause. Defaults to 1 second.
                                minimum: 0
                                type: integer
                              jwksRefreshSeconds:
                                description: Configures how often are the JWKS certificates refreshed. The refresh interval has to be at least 60 seconds shorter then the expiry interval specified in `jwksExpirySeconds`. Defaults to 300 seconds.
                                minimum: 1
                                type: integer
                              listenerConfig:
                                description: Configuration to be used for a specific listener. All values are prefixed with listener.name._<listener_name>_.
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              maxSecondsWithoutReauthentication:
                                description: Maximum number of seconds the authenticated session remains valid without re-authentication. This enables Apache Kafka re-authentication feature, and causes sessions to expire when the access token expires. If the access token expires before max time or if max time is reached, the client has to re-authenticate, otherwise the server will drop the connection. Not set by default - the authenticated session does not expire when the access token expires. This option only applies to SASL_OAUTHBEARER authentication mechanism (when `enableOauthBearer` is `true`).
                                type: integer
                              readTimeoutSeconds:
                                description: The read timeout in seconds when connecting to authorization server. If not set, the effective read timeout is 60 seconds.
                                type: integer
                              sasl:
                                description: Enable or disable SASL on this listener.
                                type: boolean
                              secrets:
                                description: Secrets to be mounted to /opt/kafka/custom-authn-secrets/custom-listener-_<listener_name>-<port>_/_<secret_name>_.
                                items:
                                  properties:
                                    key:
                                      description: The key under which the secret value is stored in the Kubernetes Secret.
                                      type: string
                                    secretName:
                                      description: The name of the Kubernetes Secret containing the secret value.
                                      type: string
                                  required:
                                    - key
                                    - secretName
                                  type: object
                                type: array
                              tlsTrustedCertificates:
                                description: Trusted certificates for TLS connection to the OAuth server.
                                items:
                                  properties:
                                    certificate:
                                      description: The name of the file certificate in the Secret.
                                      type: string
                                    secretName:
                                      description: The name of the Secret containing the certificate.
                                      type: string
                                  required:
                                    - certificate
                                    - secretName
                                  type: object
                                type: array
                              tokenEndpointUri:
                                description: URI of the Token Endpoint to use with SASL_PLAIN mechanism when the client authenticates with `clientId` and a `secret`. If set, the client can authenticate over SASL_PLAIN by either setting `username` to `clientId`, and setting `password` to client `secret`, or by setting `username` to account username, and `password` to access token prefixed with `$accessToken:`. If this option is not set, the `password` is always interpreted as an access token (without a prefix), and `username` as the account username (a so called 'no-client-credentials' mode).
                                type: string
                              type:
                                description: Authentication type. `oauth` type uses SASL OAUTHBEARER Authentication. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `tls` type uses TLS Client Authentication. `tls` type is supported only on TLS listeners.`custom` type allows for any authentication type to be used.
                                enum:
                                  - tls
                                  - scram-sha-512
                                  - oauth
                                  - custom
                                type: string
                              userInfoEndpointUri:
                                description: 'URI of the User Info Endpoint to use as a fallback to obtaining the user id when the Introspection Endpoint does not return information that can be used for the user id. '
                                type: string
                              userNameClaim:
                                description: Name of the claim from the JWT authentication token, Introspection Endpoint response or User Info Endpoint response which will be used to extract the user id. Defaults to `sub`.
                                type: string
                              validIssuerUri:
                                description: URI of the token issuer used for authentication.
                                type: string
                              validTokenType:
                                description: Valid value for the `token_type` attribute returned by the Introspection Endpoint. No default value, and not checked by default.
                                type: string
                            required:
                              - type
                            type: object
                          configuration:
                            description: Additional listener configuration.
                            properties:
                              bootstrap:
                                description: Bootstrap configuration.
                                properties:
                                  alternativeNames:
                                    description: Additional alternative names for the bootstrap service. The alternative names will be added to the list of subject alternative names of the TLS certificates.
                                    items:
                                      type: string
                                    type: array
                                  annotations:
                                    description: Annotations that will be added to the `Ingress`, `Route`, or `Service` resource. You can use this field to configure DNS providers such as External DNS. This field can be used only with `loadbalancer`, `nodeport`, `route`, or `ingress` type listeners.
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  host:
                                    description: The bootstrap host. This field will be used in the Ingress resource or in the Route resource to specify the desired hostname. This field can be used only with `route` (optional) or `ingress` (required) type listeners.
                                    type: string
                                  labels:
                                    description: Labels that will be added to the `Ingress`, `Route`, or `Service` resource. This field can be used only with `loadbalancer`, `nodeport`, `route`, or `ingress` type listeners.
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  loadBalancerIP:
                                    description: The loadbalancer is requested with the IP address specified in this field. This feature depends on whether the underlying cloud provider supports specifying the `loadBalancerIP` when a load balancer is created. This field is ignored if the cloud provider does not support the feature.This field can be used only with `loadbalancer` type listener.
                                    type: string
                                  nodePort:
                                    description: Node port for the bootstrap service. This field can be used only with `nodeport` type listener.
                                    type: integer
                                type: object
                              brokerCertChainAndKey:
                                description: Reference to the `Secret` which holds the certificate and private key pair which will be used for this listener. The certificate can optionally contain the whole chain. This field can be used only with listeners with enabled TLS encryption.
                                properties:
                                  certificate:
                                    description: The name of the file certificate in the Secret.
                                    type: string
                                  key:
                                    description: The name of the private key in the Secret.
                                    type: string
                                  secretName:
                                    description: The name of the Secret containing the certificate.
                                    type: string
                                required:
                                  - certificate
                                  - key
                                  - secretName
                                type: object
                              brokers:
                                description: Per-broker configurations.
                                items:
                                  properties:
                                    advertisedHost:
                                      description: The host name which will be used in the brokers' `advertised.brokers`.
                                      type: string
                                    advertisedPort:
                                      description: The port number which will be used in the brokers' `advertised.brokers`.
                                      type: integer
                                    annotations:
                                      description: Annotations that will be added to the `Ingress` or `Service` resource. You can use this field to configure DNS providers such as External DNS. This field can be used only with `loadbalancer`, `nodeport`, or `ingress` type listeners.
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    broker:
                                      description: ID of the kafka broker (broker identifier). Broker IDs start from 0 and correspond to the number of broker replicas.
                                      type: integer
                                    host:
                                      description: The broker host. This field will be used in the Ingress resource or in the Route resource to specify the desired hostname. This field can be used only with `route` (optional) or `ingress` (required) type listeners.
                                      type: string
                                    labels:
                                      description: Labels that will be added to the `Ingress`, `Route`, or `Service` resource. This field can be used only with `loadbalancer`, `nodeport`, `route`, or `ingress` type listeners.
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    loadBalancerIP:
                                      description: The loadbalancer is requested with the IP address specified in this field. This feature depends on whether the underlying cloud provider supports specifying the `loadBalancerIP` when a load balancer is created. This field is ignored if the cloud provider does not support the feature.This field can be used only with `loadbalancer` type listener.
                                      type: string
                                    nodePort:
                                      description: Node port for the per-broker service. This field can be used only with `nodeport` type listener.
                                      type: integer
                                  required:
                                    - broker
                                  type: object
                                type: array
                              class:
                                description: Configures the `Ingress` class that defines which `Ingress` controller will be used. This field can be used only with `ingress` type listener. If not specified, the default Ingress controller will be used.
                                type: string
                              createBootstrapService:
                                description: Whether to create the bootstrap service or not. The bootstrap service is created by default (if not specified differently). This field can be used with the `loadBalancer` type listener.
                                type: boolean
                              externalTrafficPolicy:
                                description: Specifies whether the service routes external traffic to node-local or cluster-wide endpoints. `Cluster` may cause a second hop to another node and obscures the client source IP. `Local` avoids a second hop for LoadBalancer and Nodeport type services and preserves the client source IP (when supported by the infrastructure). If unspecified, Kubernetes will use `Cluster` as the default.This field can be used only with `loadbalancer` or `nodeport` type listener.
                                enum:
                                  - Local
                                  - Cluster
                                type: string
                              finalizers:
                                description: A list of finalizers which will be configured for the `LoadBalancer` type Services created for this listener. If supported by the platform, the finalizer `service.kubernetes.io/load-balancer-cleanup` to make sure that the external load balancer is deleted together with the service.For more information, see https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#garbage-collecting-load-balancers. This field can be used only with `loadbalancer` type listeners.
                                items:
                                  type: string
                                type: array
                              ipFamilies:
                                description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting. Available on Kubernetes 1.20 and newer.
                                items:
                                  enum:
                                    - IPv4
                                    - IPv6
                                  type: string
                                type: array
                              ipFamilyPolicy:
                                description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type. Available on Kubernetes 1.20 and newer.
                                enum:
                                  - SingleStack
                                  - PreferDualStack
                                  - RequireDualStack
                                type: string
                              loadBalancerSourceRanges:
                                description: A list of CIDR ranges (for example `10.0.0.0/8` or `130.211.204.1/32`) from which clients can connect to load balancer type listeners. If supported by the platform, traffic through the loadbalancer is restricted to the specified CIDR ranges. This field is applicable only for loadbalancer type services and is ignored if the cloud provider does not support the feature. This field can be used only with `loadbalancer` type listener.
                                items:
                                  type: string
                                type: array
                              maxConnectionCreationRate:
                                description: The maximum connection creation rate we allow in this listener at any time. New connections will be throttled if the limit is reached.
                                type: integer
                              maxConnections:
                                description: The maximum number of connections we allow for this listener in the broker at any time. New connections are blocked if the limit is reached.
                                type: integer
                              preferredNodePortAddressType:
                                description: |-
                                  Defines which address type should be used as the node address. Available types are: `ExternalDNS`, `ExternalIP`, `InternalDNS`, `InternalIP` and `Hostname`. By default, the addresses will be used in the following order (the first one found will be used):

                                  * `ExternalDNS`
                                  * `ExternalIP`
                                  * `InternalDNS`
                                  * `InternalIP`
                                  * `Hostname`

                                  This field is used to select the preferred address type, which is checked first. If no address is found for this address type, the other types are checked in the default order. This field can only be used with `nodeport` type listener.
                                enum:
                                  - ExternalIP
                                  - ExternalDNS
                                  - InternalIP
                                  - InternalDNS
                                  - Hostname
                                type: string
                              useServiceDnsDomain:
                                description: Configures whether the Kubernetes service DNS domain should be used or not. If set to `true`, the generated addresses will contain the service DNS domain suffix (by default `.cluster.local`, can be configured using environment variable `KUBERNETES_SERVICE_DNS_DOMAIN`). Defaults to `false`.This field can be used only with `internal` type listener.
                                type: boolean
                            type: object
                          name:
                            description: Name of the listener. The name will be used to identify the listener and the related Kubernetes objects. The name has to be unique within given a Kafka cluster. The name can consist of lowercase characters and numbers and be up to 11 characters long.
                            pattern: ^[a-z0-9]{1,11}$
                            type: string
                          networkPolicyPeers:
                            description: List of peers which should be able to connect to this listener. Peers in this list are combined using a logical OR operation. If this field is empty or missing, all connections will be allowed for this listener. If this field is present and contains at least one item, the listener only allows the traffic which matches at least one item in this list.
                            items:
                              properties:
                                ipBlock:
                                  properties:
                                    cidr:
                                      type: string
                                    except:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                namespaceSelector:
                                  properties:
                                    matchExpressions:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    matchLabels:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                podSelector:
                                  properties:
                                    matchExpressions:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    matchLabels:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                              type: object
                            type: array
                          port:
                            description: Port number used by the listener inside Kafka. The port number has to be unique within a given Kafka cluster. Allowed port numbers are 9092 and higher with the exception of ports 9404 and 9999, which are already used for Prometheus and JMX. Depending on the listener type, the port number might not be the same as the port number that connects Kafka clients.
                            minimum: 9092
                            type: integer
                          tls:
                            description: Enables TLS encryption on the listener. This is a required property.
                            type: boolean
                          type:
                            description: "Type of the listener. Currently the supported types are `internal`, `route`, `loadbalancer`, `nodeport` and `ingress`. \n\n* `internal` type exposes Kafka internally only within the Kubernetes cluster.\n* `route` type uses OpenShift Routes to expose Kafka.\n* `loadbalancer` type uses LoadBalancer type services to expose Kafka.\n* `nodeport` type uses NodePort type services to expose Kafka.\n* `ingress` type uses Kubernetes Nginx Ingress to expose Kafka with TLS passthrought.\n* `cluster-ip` type uses ClusterIP service with per broker port number. Can be exposed over Nginx Ingress Controller with tcp port config.\n"
                            enum:
                              - internal
                              - route
                              - loadbalancer
                              - nodeport
                              - ingress
                              - cluster-ip
                            type: string
                        required:
                          - name
                          - port
                          - type
                          - tls
                        type: object
                      minItems: 1
                      type: array
                    livenessProbe:
                      description: Pod liveness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          minimum: 1
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          minimum: 1
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                      type: object
                    logging:
                      description: Logging configuration for Kafka.
                      properties:
                        loggers:
                          description: A Map from logger name to logger level.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        type:
                          description: Logging type, must be either 'inline' or 'external'.
                          enum:
                            - inline
                            - external
                          type: string
                        valueFrom:
                          description: '`ConfigMap` entry where the logging configuration is stored. '
                          properties:
                            configMapKeyRef:
                              description: Reference to the key in the ConfigMap containing the configuration.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - type
                      type: object
                    metricsConfig:
                      description: Metrics configuration.
                      properties:
                        type:
                          description: Metrics type. Only 'jmxPrometheusExporter' supported currently.
                          enum:
                            - jmxPrometheusExporter
                          type: string
                        valueFrom:
                          description: ConfigMap entry where the Prometheus JMX Exporter configuration is stored. For details of the structure of this configuration, see the {JMXExporter}.
                          properties:
                            configMapKeyRef:
                              description: Reference to the key in the ConfigMap containing the configuration.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - type
                        - valueFrom
                      type: object
                    rack:
                      description: Configuration of the `broker.rack` broker config.
                      properties:
                        topologyKey:
                          description: A key that matches labels assigned to the Kubernetes cluster nodes. The value of the label is used to set a broker's `broker.rack` config, and the `client.rack` config for Kafka Connect or MirrorMaker 2.0.
                          example: topology.kubernetes.io/zone
                          type: string
                      required:
                        - topologyKey
                      type: object
                    readinessProbe:
                      description: Pod readiness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          minimum: 1
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          minimum: 1
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                      type: object
                    replicas:
                      description: The number of pods in the cluster.
                      minimum: 1
                      type: integer
                    resources:
                      description: CPU and memory resources to reserve.
                      properties:
                        limits:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        requests:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    storage:
                      description: Storage configuration (disk). Cannot be updated.
                      properties:
                        class:
                          description: The storage class to use for dynamic volume allocation.
                          type: string
                        deleteClaim:
                          description: Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.
                          type: boolean
                        id:
                          description: Storage identification number. It is mandatory only for storage volumes defined in a storage of type 'jbod'.
                          minimum: 0
                          type: integer
                        overrides:
                          description: Overrides for individual brokers. The `overrides` field allows to specify a different configuration for different brokers.
                          items:
                            properties:
                              broker:
                                description: Id of the kafka broker (broker identifier).
                                type: integer
                              class:
                                description: The storage class to use for dynamic volume allocation for this broker.
                                type: string
                            type: object
                          type: array
                        selector:
                          description: Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        size:
                          description: When type=persistent-claim, defines the size of the persistent volume claim (i.e 1Gi). Mandatory when type=persistent-claim.
                          type: string
                        sizeLimit:
                          description: When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).
                          pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                          type: string
                        type:
                          description: Storage type, must be either 'ephemeral', 'persistent-claim', or 'jbod'.
                          enum:
                            - ephemeral
                            - persistent-claim
                            - jbod
                          type: string
                        volumes:
                          description: List of volumes as Storage objects representing the JBOD disks array.
                          items:
                            properties:
                              class:
                                description: The storage class to use for dynamic volume allocation.
                                type: string
                              deleteClaim:
                                description: Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.
                                type: boolean
                              id:
                                description: Storage identification number. It is mandatory only for storage volumes defined in a storage of type 'jbod'.
                                minimum: 0
                                type: integer
                              overrides:
                                description: Overrides for individual brokers. The `overrides` field allows to specify a different configuration for different brokers.
                                items:
                                  properties:
                                    broker:
                                      description: Id of the kafka broker (broker identifier).
                                      type: integer
                                    class:
                                      description: The storage class to use for dynamic volume allocation for this broker.
                                      type: string
                                  type: object
                                type: array
                              selector:
                                description: Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              size:
                                description: When type=persistent-claim, defines the size of the persistent volume claim (i.e 1Gi). Mandatory when type=persistent-claim.
                                type: string
                              sizeLimit:
                                description: When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).
                                pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                type: string
                              type:
                                description: Storage type, must be either 'ephemeral' or 'persistent-claim'.
                                enum:
                                  - ephemeral
                                  - persistent-claim
                                type: string
                            required:
                              - type
                            type: object
                          type: array
                      required:
                        - type
                      type: object
                    template:
                      description: Template for Kafka cluster resources. The template allows users to specify how the `StatefulSet`, `Pods`, and `Services` are generated.
                      properties:
                        bootstrapService:
                          description: Template for Kafka bootstrap `Service`.
                          properties:
                            ipFamilies:
                              description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting. Available on Kubernetes 1.20 and newer.
                              items:
                                enum:
                                  - IPv4
                                  - IPv6
                                type: string
                              type: array
                            ipFamilyPolicy:
                              description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type. Available on Kubernetes 1.20 and newer.
                              enum:
                                - SingleStack
                                - PreferDualStack
                                - RequireDualStack
                              type: string
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        brokersService:
                          description: Template for Kafka broker `Service`.
                          properties:
                            ipFamilies:
                              description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting. Available on Kubernetes 1.20 and newer.
                              items:
                                enum:
                                  - IPv4
                                  - IPv6
                                type: string
                              type: array
                            ipFamilyPolicy:
                              description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type. Available on Kubernetes 1.20 and newer.
                              enum:
                                - SingleStack
                                - PreferDualStack
                                - RequireDualStack
                              type: string
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        clusterCaCert:
                          description: Template for Secret with Kafka Cluster certificate public key.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        clusterRoleBinding:
                          description: Template for the Kafka ClusterRoleBinding.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        externalBootstrapIngress:
                          description: Template for Kafka external bootstrap `Ingress`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        externalBootstrapRoute:
                          description: Template for Kafka external bootstrap `Route`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        externalBootstrapService:
                          description: Template for Kafka external bootstrap `Service`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        initContainer:
                          description: Template for the Kafka init container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                          type: object
                        jmxSecret:
                          description: Template for Secret of the Kafka Cluster JMX authentication.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        kafkaContainer:
                          description: Template for the Kafka broker container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                          type: object
                        perPodIngress:
                          description: Template for Kafka per-pod `Ingress` used for access from outside of Kubernetes.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        perPodRoute:
                          description: Template for Kafka per-pod `Routes` used for access from outside of OpenShift.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        perPodService:
                          description: Template for Kafka per-pod `Services` used for access from outside of Kubernetes.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        persistentVolumeClaim:
                          description: Template for all Kafka `PersistentVolumeClaims`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        pod:
                          description: Template for Kafka `Pods`.
                          properties:
                            affinity:
                              description: The pod's affinity rules.
                              properties:
                                nodeAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          preference:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      properties:
                                        nodeSelectorTerms:
                                          items:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                podAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                podAntiAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            enableServiceLinks:
                              description: Indicates whether information about services should be injected into Pod's environment variables.
                              type: boolean
                            hostAliases:
                              description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                              items:
                                properties:
                                  hostnames:
                                    items:
                                      type: string
                                    type: array
                                  ip:
                                    type: string
                                type: object
                              type: array
                            imagePullSecrets:
                              description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                              items:
                                properties:
                                  name:
                                    type: string
                                type: object
                              type: array
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            priorityClassName:
                              description: The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.
                              type: string
                            schedulerName:
                              description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                              type: string
                            securityContext:
                              description: Configures pod-level security attributes and common container settings.
                              properties:
                                fsGroup:
                                  type: integer
                                fsGroupChangePolicy:
                                  type: string
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                supplementalGroups:
                                  items:
                                    type: integer
                                  type: array
                                sysctls:
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            terminationGracePeriodSeconds:
                              description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                              minimum: 0
                              type: integer
                            tmpDirSizeLimit:
                              description: Defines the total amount (for example `1Gi`) of local storage required for temporary EmptyDir volume (`/tmp`). Default value is `5Mi`.
                              pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                              type: string
                            tolerations:
                              description: The pod's tolerations.
                              items:
                                properties:
                                  effect:
                                    type: string
                                  key:
                                    type: string
                                  operator:
                                    type: string
                                  tolerationSeconds:
                                    type: integer
                                  value:
                                    type: string
                                type: object
                              type: array
                            topologySpreadConstraints:
                              description: The pod's topology spread constraints.
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                    type: object
                                  matchLabelKeys:
                                    items:
                                      type: string
                                    type: array
                                  maxSkew:
                                    type: integer
                                  minDomains:
                                    type: integer
                                  nodeAffinityPolicy:
                                    type: string
                                  nodeTaintsPolicy:
                                    type: string
                                  topologyKey:
                                    type: string
                                  whenUnsatisfiable:
                                    type: string
                                type: object
                              type: array
                          type: object
                        podDisruptionBudget:
                          description: Template for Kafka `PodDisruptionBudget`.
                          properties:
                            maxUnavailable:
                              description: Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
                              minimum: 0
                              type: integer
                            metadata:
                              description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        podSet:
                          description: Template for Kafka `StrimziPodSet` resource.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        serviceAccount:
                          description: Template for the Kafka service account.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        statefulset:
                          description: Template for Kafka `StatefulSet`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            podManagementPolicy:
                              description: PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
                              enum:
                                - OrderedReady
                                - Parallel
                              type: string
                          type: object
                      type: object
                    version:
                      description: The kafka broker version. Defaults to {DefaultKafkaVersion}. Consult the user documentation to understand the process required to upgrade or downgrade the version.
                      type: string
                  required:
                    - replicas
                    - listeners
                    - storage
                  type: object
                kafkaExporter:
                  description: Configuration of the Kafka Exporter. Kafka Exporter can provide additional metrics, for example lag of consumer group at topic/partition.
                  properties:
                    enableSaramaLogging:
                      description: Enable Sarama logging, a Go client library used by the Kafka Exporter.
                      type: boolean
                    groupRegex:
                      description: Regular expression to specify which consumer groups to collect. Default value is `.*`.
                      type: string
                    image:
                      description: The docker image for the pods.
                      type: string
                    livenessProbe:
                      description: Pod liveness check.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          minimum: 1
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          minimum: 1
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                      type: object
                    logging:
                      description: 'Only log messages with the given severity or above. Valid levels: [`info`, `debug`, `trace`]. Default log level is `info`.'
                      type: string
                    readinessProbe:
                      description: Pod readiness check.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          minimum: 1
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          minimum: 1
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                      type: object
                    resources:
                      description: CPU and memory resources to reserve.
                      properties:
                        limits:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        requests:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    template:
                      description: Customization of deployment templates and pods.
                      properties:
                        container:
                          description: Template for the Kafka Exporter container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                          type: object
                        deployment:
                          description: Template for Kafka Exporter `Deployment`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        pod:
                          description: Template for Kafka Exporter `Pods`.
                          properties:
                            affinity:
                              description: The pod's affinity rules.
                              properties:
                                nodeAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          preference:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      properties:
                                        nodeSelectorTerms:
                                          items:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                podAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                podAntiAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            enableServiceLinks:
                              description: Indicates whether information about services should be injected into Pod's environment variables.
                              type: boolean
                            hostAliases:
                              description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                              items:
                                properties:
                                  hostnames:
                                    items:
                                      type: string
                                    type: array
                                  ip:
                                    type: string
                                type: object
                              type: array
                            imagePullSecrets:
                              description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                              items:
                                properties:
                                  name:
                                    type: string
                                type: object
                              type: array
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            priorityClassName:
                              description: The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.
                              type: string
                            schedulerName:
                              description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                              type: string
                            securityContext:
                              description: Configures pod-level security attributes and common container settings.
                              properties:
                                fsGroup:
                                  type: integer
                                fsGroupChangePolicy:
                                  type: string
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                supplementalGroups:
                                  items:
                                    type: integer
                                  type: array
                                sysctls:
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            terminationGracePeriodSeconds:
                              description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                              minimum: 0
                              type: integer
                            tmpDirSizeLimit:
                              description: Defines the total amount (for example `1Gi`) of local storage required for temporary EmptyDir volume (`/tmp`). Default value is `5Mi`.
                              pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                              type: string
                            tolerations:
                              description: The pod's tolerations.
                              items:
                                properties:
                                  effect:
                                    type: string
                                  key:
                                    type: string
                                  operator:
                                    type: string
                                  tolerationSeconds:
                                    type: integer
                                  value:
                                    type: string
                                type: object
                              type: array
                            topologySpreadConstraints:
                              description: The pod's topology spread constraints.
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                    type: object
                                  matchLabelKeys:
                                    items:
                                      type: string
                                    type: array
                                  maxSkew:
                                    type: integer
                                  minDomains:
                                    type: integer
                                  nodeAffinityPolicy:
                                    type: string
                                  nodeTaintsPolicy:
                                    type: string
                                  topologyKey:
                                    type: string
                                  whenUnsatisfiable:
                                    type: string
                                type: object
                              type: array
                          type: object
                        service:
                          description: Template for Kafka Exporter `Service`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        serviceAccount:
                          description: Template for the Kafka Exporter service account.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                      type: object
                    topicRegex:
                      description: Regular expression to specify which topics to collect. Default value is `.*`.
                      type: string
                  type: object
                maintenanceTimeWindows:
                  description: A list of time windows for maintenance tasks (that is, certificates renewal). Each time window is defined by a cron expression.
                  items:
                    type: string
                  type: array
                zookeeper:
                  description: Configuration of the ZooKeeper cluster.
                  properties:
                    config:
                      description: 'The ZooKeeper broker config. Properties with the following prefixes cannot be set: server., dataDir, dataLogDir, clientPort, authProvider, quorum.auth, requireClientAuthScheme, snapshot.trust.empty, standaloneEnabled, reconfigEnabled, 4lw.commands.whitelist, secureClientPort, ssl., serverCnxnFactory, sslQuorum (with the exception of: ssl.protocol, ssl.quorum.protocol, ssl.enabledProtocols, ssl.quorum.enabledProtocols, ssl.ciphersuites, ssl.quorum.ciphersuites, ssl.hostnameVerification, ssl.quorum.hostnameVerification).'
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    image:
                      description: The docker image for the pods.
                      type: string
                    jmxOptions:
                      description: JMX Options for Zookeeper nodes.
                      properties:
                        authentication:
                          description: Authentication configuration for connecting to the JMX port.
                          properties:
                            type:
                              description: Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.
                              enum:
                                - password
                              type: string
                          required:
                            - type
                          type: object
                      type: object
                    jvmOptions:
                      description: JVM Options for pods.
                      properties:
                        -XX:
                          description: A map of -XX options to the JVM.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        -Xms:
                          description: -Xms option to to the JVM.
                          pattern: ^[0-9]+[mMgG]?$
                          type: string
                        -Xmx:
                          description: -Xmx option to to the JVM.
                          pattern: ^[0-9]+[mMgG]?$
                          type: string
                        gcLoggingEnabled:
                          description: Specifies whether the Garbage Collection logging is enabled. The default is false.
                          type: boolean
                        javaSystemProperties:
                          description: A map of additional system properties which will be passed using the `-D` option to the JVM.
                          items:
                            properties:
                              name:
                                description: The system property name.
                                type: string
                              value:
                                description: The system property value.
                                type: string
                            type: object
                          type: array
                      type: object
                    livenessProbe:
                      description: Pod liveness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          minimum: 1
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          minimum: 1
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                      type: object
                    logging:
                      description: Logging configuration for ZooKeeper.
                      properties:
                        loggers:
                          description: A Map from logger name to logger level.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        type:
                          description: Logging type, must be either 'inline' or 'external'.
                          enum:
                            - inline
                            - external
                          type: string
                        valueFrom:
                          description: '`ConfigMap` entry where the logging configuration is stored. '
                          properties:
                            configMapKeyRef:
                              description: Reference to the key in the ConfigMap containing the configuration.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - type
                      type: object
                    metricsConfig:
                      description: Metrics configuration.
                      properties:
                        type:
                          description: Metrics type. Only 'jmxPrometheusExporter' supported currently.
                          enum:
                            - jmxPrometheusExporter
                          type: string
                        valueFrom:
                          description: ConfigMap entry where the Prometheus JMX Exporter configuration is stored. For details of the structure of this configuration, see the {JMXExporter}.
                          properties:
                            configMapKeyRef:
                              description: Reference to the key in the ConfigMap containing the configuration.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - type
                        - valueFrom
                      type: object
                    readinessProbe:
                      description: Pod readiness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          minimum: 1
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                          minimum: 1
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
                          minimum: 1
                          type: integer
                      type: object
                    replicas:
                      description: The number of pods in the cluster.
                      minimum: 1
                      type: integer
                    resources:
                      description: CPU and memory resources to reserve.
                      properties:
                        limits:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        requests:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    storage:
                      description: Storage configuration (disk). Cannot be updated.
                      properties:
                        class:
                          description: The storage class to use for dynamic volume allocation.
                          type: string
                        deleteClaim:
                          description: Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.
                          type: boolean
                        id:
                          description: Storage identification number. It is mandatory only for storage volumes defined in a storage of type 'jbod'.
                          minimum: 0
                          type: integer
                        overrides:
                          description: Overrides for individual brokers. The `overrides` field allows to specify a different configuration for different brokers.
                          items:
                            properties:
                              broker:
                                description: Id of the kafka broker (broker identifier).
                                type: integer
                              class:
                                description: The storage class to use for dynamic volume allocation for this broker.
                                type: string
                            type: object
                          type: array
                        selector:
                          description: Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        size:
                          description: When type=persistent-claim, defines the size of the persistent volume claim (i.e 1Gi). Mandatory when type=persistent-claim.
                          type: string
                        sizeLimit:
                          description: When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).
                          pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                          type: string
                        type:
                          description: Storage type, must be either 'ephemeral' or 'persistent-claim'.
                          enum:
                            - ephemeral
                            - persistent-claim
                          type: string
                      required:
                        - type
                      type: object
                    template:
                      description: Template for ZooKeeper cluster resources. The template allows users to specify how the `StatefulSet`, `Pods`, and `Services` are generated.
                      properties:
                        clientService:
                          description: Template for ZooKeeper client `Service`.
                          properties:
                            ipFamilies:
                              description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting. Available on Kubernetes 1.20 and newer.
                              items:
                                enum:
                                  - IPv4
                                  - IPv6
                                type: string
                              type: array
                            ipFamilyPolicy:
                              description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type. Available on Kubernetes 1.20 and newer.
                              enum:
                                - SingleStack
                                - PreferDualStack
                                - RequireDualStack
                              type: string
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        jmxSecret:
                          description: Template for Secret of the Zookeeper Cluster JMX authentication.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        nodesService:
                          description: Template for ZooKeeper nodes `Service`.
                          properties:
                            ipFamilies:
                              description: Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting. Available on Kubernetes 1.20 and newer.
                              items:
                                enum:
                                  - IPv4
                                  - IPv6
                                type: string
                              type: array
                            ipFamilyPolicy:
                              description: Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type. Available on Kubernetes 1.20 and newer.
                              enum:
                                - SingleStack
                                - PreferDualStack
                                - RequireDualStack
                              type: string
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        persistentVolumeClaim:
                          description: Template for all ZooKeeper `PersistentVolumeClaims`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        pod:
                          description: Template for ZooKeeper `Pods`.
                          properties:
                            affinity:
                              description: The pod's affinity rules.
                              properties:
                                nodeAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          preference:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      properties:
                                        nodeSelectorTerms:
                                          items:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchFields:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                podAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                podAntiAffinity:
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          podAffinityTerm:
                                            properties:
                                              labelSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaceSelector:
                                                properties:
                                                  matchExpressions:
                                                    items:
                                                      properties:
                                                        key:
                                                          type: string
                                                        operator:
                                                          type: string
                                                        values:
                                                          items:
                                                            type: string
                                                          type: array
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    type: object
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              namespaces:
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                type: string
                                            type: object
                                          weight:
                                            type: integer
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      items:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaceSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            enableServiceLinks:
                              description: Indicates whether information about services should be injected into Pod's environment variables.
                              type: boolean
                            hostAliases:
                              description: The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
                              items:
                                properties:
                                  hostnames:
                                    items:
                                      type: string
                                    type: array
                                  ip:
                                    type: string
                                type: object
                              type: array
                            imagePullSecrets:
                              description: List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
                              items:
                                properties:
                                  name:
                                    type: string
                                type: object
                              type: array
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            priorityClassName:
                              description: The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.
                              type: string
                            schedulerName:
                              description: The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
                              type: string
                            securityContext:
                              description: Configures pod-level security attributes and common container settings.
                              properties:
                                fsGroup:
                                  type: integer
                                fsGroupChangePolicy:
                                  type: string
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                supplementalGroups:
                                  items:
                                    type: integer
                                  type: array
                                sysctls:
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                            terminationGracePeriodSeconds:
                              description: The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
                              minimum: 0
                              type: integer
                            tmpDirSizeLimit:
                              description: Defines the total amount (for example `1Gi`) of local storage required for temporary EmptyDir volume (`/tmp`). Default value is `5Mi`.
                              pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                              type: string
                            tolerations:
                              description: The pod's tolerations.
                              items:
                                properties:
                                  effect:
                                    type: string
                                  key:
                                    type: string
                                  operator:
                                    type: string
                                  tolerationSeconds:
                                    type: integer
                                  value:
                                    type: string
                                type: object
                              type: array
                            topologySpreadConstraints:
                              description: The pod's topology spread constraints.
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                    type: object
                                  matchLabelKeys:
                                    items:
                                      type: string
                                    type: array
                                  maxSkew:
                                    type: integer
                                  minDomains:
                                    type: integer
                                  nodeAffinityPolicy:
                                    type: string
                                  nodeTaintsPolicy:
                                    type: string
                                  topologyKey:
                                    type: string
                                  whenUnsatisfiable:
                                    type: string
                                type: object
                              type: array
                          type: object
                        podDisruptionBudget:
                          description: Template for ZooKeeper `PodDisruptionBudget`.
                          properties:
                            maxUnavailable:
                              description: Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
                              minimum: 0
                              type: integer
                            metadata:
                              description: Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        podSet:
                          description: Template for ZooKeeper `StrimziPodSet` resource.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        serviceAccount:
                          description: Template for the ZooKeeper service account.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        statefulset:
                          description: Template for ZooKeeper `StatefulSet`.
                          properties:
                            metadata:
                              description: Metadata applied to the resource.
                              properties:
                                annotations:
                                  description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                labels:
                                  description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            podManagementPolicy:
                              description: PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
                              enum:
                                - OrderedReady
                                - Parallel
                              type: string
                          type: object
                        zookeeperContainer:
                          description: Template for the ZooKeeper container.
                          properties:
                            env:
                              description: Environment variables which should be applied to the container.
                              items:
                                properties:
                                  name:
                                    description: The environment variable key.
                                    type: string
                                  value:
                                    description: The environment variable value.
                                    type: string
                                type: object
                              type: array
                            securityContext:
                              description: Security context for the container.
                              properties:
                                allowPrivilegeEscalation:
                                  type: boolean
                                capabilities:
                                  properties:
                                    add:
                                      items:
                                        type: string
                                      type: array
                                    drop:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  type: boolean
                                procMount:
                                  type: string
                                readOnlyRootFilesystem:
                                  type: boolean
                                runAsGroup:
                                  type: integer
                                runAsNonRoot:
                                  type: boolean
                                runAsUser:
                                  type: integer
                                seLinuxOptions:
                                  properties:
                                    level:
                                      type: string
                                    role:
                                      type: string
                                    type:
                                      type: string
                                    user:
                                      type: string
                                  type: object
                                seccompProfile:
                                  properties:
                                    localhostProfile:
                                      type: string
                                    type:
                                      type: string
                                  type: object
                                windowsOptions:
                                  properties:
                                    gmsaCredentialSpec:
                                      type: string
                                    gmsaCredentialSpecName:
                                      type: string
                                    hostProcess:
                                      type: boolean
                                    runAsUserName:
                                      type: string
                                  type: object
                              type: object
                          type: object
                      type: object
                  required:
                    - replicas
                    - storage
                  type: object
              required:
                - kafka
                - zookeeper
              type: object
            status:
              description: The status of the Kafka and ZooKeeper clusters, and Topic Operator.
              properties:
                clusterId:
                  description: Kafka cluster Id.
                  type: string
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                listeners:
                  description: Addresses of the internal and external listeners.
                  items:
                    properties:
                      addresses:
                        description: A list of the addresses for this listener.
                        items:
                          properties:
                            host:
                              description: The DNS name or IP address of the Kafka bootstrap service.
                              type: string
                            port:
                              description: The port of the Kafka bootstrap service.
                              type: integer
                          type: object
                        type: array
                      bootstrapServers:
                        description: A comma-separated list of `host:port` pairs for connecting to the Kafka cluster using this listener.
                        type: string
                      certificates:
                        description: A list of TLS certificates which can be used to verify the identity of the server when connecting to the given listener. Set only for `tls` and `external` listeners.
                        items:
                          type: string
                        type: array
                      name:
                        description: The name of the listener.
                        type: string
                      type:
                        description: '*The `type` property has been deprecated, and should now be configured using `name`.* The name of the listener.'
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    component: kafkatopics.kafka.strimzi.io-crd
    strimzi.io/crd-install: "true"
  name: kafkatopics.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: KafkaTopic
    listKind: KafkaTopicList
    plural: kafkatopics
    shortNames:
      - kt
    singular: kafkatopic
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The name of the Kafka cluster this topic belongs to
          jsonPath: .metadata.labels.strimzi\.io/cluster
          name: Cluster
          type: string
        - description: The desired number of partitions in the topic
          jsonPath: .spec.partitions
          name: Partitions
          type: integer
        - description: The desired number of replicas of each partition
          jsonPath: .spec.replicas
          name: Replication factor
          type: integer
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: The specification of the topic.
              properties:
                config:
                  description: The topic configuration.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                partitions:
                  description: The number of partitions the topic should have. This cannot be decreased after topic creation. It can be increased after topic creation, but it is important to understand the consequences that has, especially for topics with semantic partitioning. When absent this will default to the broker configuration for `num.partitions`.
                  minimum: 1
                  type: integer
                replicas:
                  description: The number of replicas the topic should have. When absent this will default to the broker configuration for `default.replication.factor`.
                  maximum: 32767
                  minimum: 1
                  type: integer
                topicName:
                  description: The name of the topic. When absent this will default to the metadata.name of the topic. It is recommended to not set this unless the topic name is not a valid Kubernetes resource name.
                  type: string
              type: object
            status:
              description: The status of the topic.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                topicName:
                  description: Topic name.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: The name of the Kafka cluster this topic belongs to
          jsonPath: .metadata.labels.strimzi\.io/cluster
          name: Cluster
          type: string
        - description: The desired number of partitions in the topic
          jsonPath: .spec.partitions
          name: Partitions
          type: integer
        - description: The desired number of replicas of each partition
          jsonPath: .spec.replicas
          name: Replication factor
          type: integer
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: The specification of the topic.
              properties:
                config:
                  description: The topic configuration.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                partitions:
                  description: The number of partitions the topic should have. This cannot be decreased after topic creation. It can be increased after topic creation, but it is important to understand the consequences that has, especially for topics with semantic partitioning. When absent this will default to the broker configuration for `num.partitions`.
                  minimum: 1
                  type: integer
                replicas:
                  description: The number of replicas the topic should have. When absent this will default to the broker configuration for `default.replication.factor`.
                  maximum: 32767
                  minimum: 1
                  type: integer
                topicName:
                  description: The name of the topic. When absent this will default to the metadata.name of the topic. It is recommended to not set this unless the topic name is not a valid Kubernetes resource name.
                  type: string
              type: object
            status:
              description: The status of the topic.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                topicName:
                  description: Topic name.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: The name of the Kafka cluster this topic belongs to
          jsonPath: .metadata.labels.strimzi\.io/cluster
          name: Cluster
          type: string
        - description: The desired number of partitions in the topic
          jsonPath: .spec.partitions
          name: Partitions
          type: integer
        - description: The desired number of replicas of each partition
          jsonPath: .spec.replicas
          name: Replication factor
          type: integer
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: The specification of the topic.
              properties:
                config:
                  description: The topic configuration.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                partitions:
                  description: The number of partitions the topic should have. This cannot be decreased after topic creation. It can be increased after topic creation, but it is important to understand the consequences that has, especially for topics with semantic partitioning. When absent this will default to the broker configuration for `num.partitions`.
                  minimum: 1
                  type: integer
                replicas:
                  description: The number of replicas the topic should have. When absent this will default to the broker configuration for `default.replication.factor`.
                  maximum: 32767
                  minimum: 1
                  type: integer
                topicName:
                  description: The name of the topic. When absent this will default to the metadata.name of the topic. It is recommended to not set this unless the topic name is not a valid Kubernetes resource name.
                  type: string
              type: object
            status:
              description: The status of the topic.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                topicName:
                  description: Topic name.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    component: kafkausers.kafka.strimzi.io-crd
    strimzi.io/crd-install: "true"
  name: kafkausers.kafka.strimzi.io
spec:
  conversion:
    strategy: None
  group: kafka.strimzi.io
  names:
    categories:
      - strimzi
    kind: KafkaUser
    listKind: KafkaUserList
    plural: kafkausers
    shortNames:
      - ku
    singular: kafkauser
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The name of the Kafka cluster this user belongs to
          jsonPath: .metadata.labels.strimzi\.io/cluster
          name: Cluster
          type: string
        - description: How the user is authenticated
          jsonPath: .spec.authentication.type
          name: Authentication
          type: string
        - description: How the user is authorised
          jsonPath: .spec.authorization.type
          name: Authorization
          type: string
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: The specification of the user.
              properties:
                authentication:
                  description: "Authentication mechanism enabled for this Kafka user. The supported authentication mechanisms are `scram-sha-512`, `tls`, and `tls-external`. \n\n* `scram-sha-512` generates a secret with SASL SCRAM-SHA-512 credentials.\n* `tls` generates a secret with user certificate for mutual TLS authentication.\n* `tls-external` does not generate a user certificate.   But prepares the user for using mutual TLS authentication using a user certificate generated outside the User Operator.\n  ACLs and quotas set for this user are configured in the `CN=<username>` format.\n\nAuthentication is optional. If authentication is not configured, no credentials are generated. ACLs and quotas set for the user are configured in the `<username>` format suitable for SASL authentication."
                  properties:
                    password:
                      description: Specify the password for the user. If not set, a new password is generated by the User Operator.
                      properties:
                        valueFrom:
                          description: Secret from which the password should be read.
                          properties:
                            secretKeyRef:
                              description: Selects a key of a Secret in the resource's namespace.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - valueFrom
                      type: object
                    type:
                      description: Authentication type.
                      enum:
                        - tls
                        - tls-external
                        - scram-sha-512
                      type: string
                  required:
                    - type
                  type: object
                authorization:
                  description: Authorization rules for this Kafka user.
                  properties:
                    acls:
                      description: List of ACL rules which should be applied to this user.
                      items:
                        properties:
                          host:
                            description: The host from which the action described in the ACL rule is allowed or denied.
                            type: string
                          operation:
                            description: 'Operation which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.'
                            enum:
                              - Read
                              - Write
                              - Create
                              - Delete
                              - Alter
                              - Describe
                              - ClusterAction
                              - AlterConfigs
                              - DescribeConfigs
                              - IdempotentWrite
                              - All
                            type: string
                          operations:
                            description: 'List of operations which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.'
                            items:
                              enum:
                                - Read
                                - Write
                                - Create
                                - Delete
                                - Alter
                                - Describe
                                - ClusterAction
                                - AlterConfigs
                                - DescribeConfigs
                                - IdempotentWrite
                                - All
                              type: string
                            type: array
                          resource:
                            description: Indicates the resource for which given ACL rule applies.
                            properties:
                              name:
                                description: Name of resource for which given ACL rule applies. Can be combined with `patternType` field to use prefix pattern.
                                type: string
                              patternType:
                                description: Describes the pattern used in the resource field. The supported types are `literal` and `prefix`. With `literal` pattern type, the resource field will be used as a definition of a full name. With `prefix` pattern type, the resource name will be used only as a prefix. Default value is `literal`.
                                enum:
                                  - literal
                                  - prefix
                                type: string
                              type:
                                description: Resource type. The available resource types are `topic`, `group`, `cluster`, and `transactionalId`.
                                enum:
                                  - topic
                                  - group
                                  - cluster
                                  - transactionalId
                                type: string
                            required:
                              - type
                            type: object
                          type:
                            description: The type of the rule. Currently the only supported type is `allow`. ACL rules with type `allow` are used to allow user to execute the specified operations. Default value is `allow`.
                            enum:
                              - allow
                              - deny
                            type: string
                        required:
                          - resource
                        type: object
                      type: array
                    type:
                      description: Authorization type. Currently the only supported type is `simple`. `simple` authorization type uses Kafka's `kafka.security.authorizer.AclAuthorizer` class for authorization.
                      enum:
                        - simple
                      type: string
                  required:
                    - acls
                    - type
                  type: object
                quotas:
                  description: Quotas on requests to control the broker resources used by clients. Network bandwidth and request rate quotas can be enforced.Kafka documentation for Kafka User quotas can be found at http://kafka.apache.org/documentation/#design_quotas.
                  properties:
                    consumerByteRate:
                      description: A quota on the maximum bytes per-second that each client group can fetch from a broker before the clients in the group are throttled. Defined on a per-broker basis.
                      minimum: 0
                      type: integer
                    controllerMutationRate:
                      description: A quota on the rate at which mutations are accepted for the create topics request, the create partitions request and the delete topics request. The rate is accumulated by the number of partitions created or deleted.
                      minimum: 0
                      type: number
                    producerByteRate:
                      description: A quota on the maximum bytes per-second that each client group can publish to a broker before the clients in the group are throttled. Defined on a per-broker basis.
                      minimum: 0
                      type: integer
                    requestPercentage:
                      description: A quota on the maximum CPU utilization of each client group as a percentage of network and I/O threads.
                      minimum: 0
                      type: integer
                  type: object
                template:
                  description: Template to specify how Kafka User `Secrets` are generated.
                  properties:
                    secret:
                      description: Template for KafkaUser resources. The template allows users to specify how the `Secret` with password or TLS certificates is generated.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                  type: object
              type: object
            status:
              description: The status of the Kafka User.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                secret:
                  description: The name of `Secret` where the credentials are stored.
                  type: string
                username:
                  description: Username.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: The name of the Kafka cluster this user belongs to
          jsonPath: .metadata.labels.strimzi\.io/cluster
          name: Cluster
          type: string
        - description: How the user is authenticated
          jsonPath: .spec.authentication.type
          name: Authentication
          type: string
        - description: How the user is authorised
          jsonPath: .spec.authorization.type
          name: Authorization
          type: string
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: The specification of the user.
              properties:
                authentication:
                  description: "Authentication mechanism enabled for this Kafka user. The supported authentication mechanisms are `scram-sha-512`, `tls`, and `tls-external`. \n\n* `scram-sha-512` generates a secret with SASL SCRAM-SHA-512 credentials.\n* `tls` generates a secret with user certificate for mutual TLS authentication.\n* `tls-external` does not generate a user certificate.   But prepares the user for using mutual TLS authentication using a user certificate generated outside the User Operator.\n  ACLs and quotas set for this user are configured in the `CN=<username>` format.\n\nAuthentication is optional. If authentication is not configured, no credentials are generated. ACLs and quotas set for the user are configured in the `<username>` format suitable for SASL authentication."
                  properties:
                    password:
                      description: Specify the password for the user. If not set, a new password is generated by the User Operator.
                      properties:
                        valueFrom:
                          description: Secret from which the password should be read.
                          properties:
                            secretKeyRef:
                              description: Selects a key of a Secret in the resource's namespace.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - valueFrom
                      type: object
                    type:
                      description: Authentication type.
                      enum:
                        - tls
                        - tls-external
                        - scram-sha-512
                      type: string
                  required:
                    - type
                  type: object
                authorization:
                  description: Authorization rules for this Kafka user.
                  properties:
                    acls:
                      description: List of ACL rules which should be applied to this user.
                      items:
                        properties:
                          host:
                            description: The host from which the action described in the ACL rule is allowed or denied.
                            type: string
                          operation:
                            description: 'Operation which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.'
                            enum:
                              - Read
                              - Write
                              - Create
                              - Delete
                              - Alter
                              - Describe
                              - ClusterAction
                              - AlterConfigs
                              - DescribeConfigs
                              - IdempotentWrite
                              - All
                            type: string
                          operations:
                            description: 'List of operations which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.'
                            items:
                              enum:
                                - Read
                                - Write
                                - Create
                                - Delete
                                - Alter
                                - Describe
                                - ClusterAction
                                - AlterConfigs
                                - DescribeConfigs
                                - IdempotentWrite
                                - All
                              type: string
                            type: array
                          resource:
                            description: Indicates the resource for which given ACL rule applies.
                            properties:
                              name:
                                description: Name of resource for which given ACL rule applies. Can be combined with `patternType` field to use prefix pattern.
                                type: string
                              patternType:
                                description: Describes the pattern used in the resource field. The supported types are `literal` and `prefix`. With `literal` pattern type, the resource field will be used as a definition of a full name. With `prefix` pattern type, the resource name will be used only as a prefix. Default value is `literal`.
                                enum:
                                  - literal
                                  - prefix
                                type: string
                              type:
                                description: Resource type. The available resource types are `topic`, `group`, `cluster`, and `transactionalId`.
                                enum:
                                  - topic
                                  - group
                                  - cluster
                                  - transactionalId
                                type: string
                            required:
                              - type
                            type: object
                          type:
                            description: The type of the rule. Currently the only supported type is `allow`. ACL rules with type `allow` are used to allow user to execute the specified operations. Default value is `allow`.
                            enum:
                              - allow
                              - deny
                            type: string
                        required:
                          - resource
                        type: object
                      type: array
                    type:
                      description: Authorization type. Currently the only supported type is `simple`. `simple` authorization type uses Kafka's `kafka.security.authorizer.AclAuthorizer` class for authorization.
                      enum:
                        - simple
                      type: string
                  required:
                    - acls
                    - type
                  type: object
                quotas:
                  description: Quotas on requests to control the broker resources used by clients. Network bandwidth and request rate quotas can be enforced.Kafka documentation for Kafka User quotas can be found at http://kafka.apache.org/documentation/#design_quotas.
                  properties:
                    consumerByteRate:
                      description: A quota on the maximum bytes per-second that each client group can fetch from a broker before the clients in the group are throttled. Defined on a per-broker basis.
                      minimum: 0
                      type: integer
                    controllerMutationRate:
                      description: A quota on the rate at which mutations are accepted for the create topics request, the create partitions request and the delete topics request. The rate is accumulated by the number of partitions created or deleted.
                      minimum: 0
                      type: number
                    producerByteRate:
                      description: A quota on the maximum bytes per-second that each client group can publish to a broker before the clients in the group are throttled. Defined on a per-broker basis.
                      minimum: 0
                      type: integer
                    requestPercentage:
                      description: A quota on the maximum CPU utilization of each client group as a percentage of network and I/O threads.
                      minimum: 0
                      type: integer
                  type: object
                template:
                  description: Template to specify how Kafka User `Secrets` are generated.
                  properties:
                    secret:
                      description: Template for KafkaUser resources. The template allows users to specify how the `Secret` with password or TLS certificates is generated.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                  type: object
              type: object
            status:
              description: The status of the Kafka User.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                secret:
                  description: The name of `Secret` where the credentials are stored.
                  type: string
                username:
                  description: Username.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: The name of the Kafka cluster this user belongs to
          jsonPath: .metadata.labels.strimzi\.io/cluster
          name: Cluster
          type: string
        - description: How the user is authenticated
          jsonPath: .spec.authentication.type
          name: Authentication
          type: string
        - description: How the user is authorised
          jsonPath: .spec.authorization.type
          name: Authorization
          type: string
        - description: The state of the custom resource
          jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: The specification of the user.
              properties:
                authentication:
                  description: "Authentication mechanism enabled for this Kafka user. The supported authentication mechanisms are `scram-sha-512`, `tls`, and `tls-external`. \n\n* `scram-sha-512` generates a secret with SASL SCRAM-SHA-512 credentials.\n* `tls` generates a secret with user certificate for mutual TLS authentication.\n* `tls-external` does not generate a user certificate.   But prepares the user for using mutual TLS authentication using a user certificate generated outside the User Operator.\n  ACLs and quotas set for this user are configured in the `CN=<username>` format.\n\nAuthentication is optional. If authentication is not configured, no credentials are generated. ACLs and quotas set for the user are configured in the `<username>` format suitable for SASL authentication."
                  properties:
                    password:
                      description: Specify the password for the user. If not set, a new password is generated by the User Operator.
                      properties:
                        valueFrom:
                          description: Secret from which the password should be read.
                          properties:
                            secretKeyRef:
                              description: Selects a key of a Secret in the resource's namespace.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              type: object
                          type: object
                      required:
                        - valueFrom
                      type: object
                    type:
                      description: Authentication type.
                      enum:
                        - tls
                        - tls-external
                        - scram-sha-512
                      type: string
                  required:
                    - type
                  type: object
                authorization:
                  description: Authorization rules for this Kafka user.
                  properties:
                    acls:
                      description: List of ACL rules which should be applied to this user.
                      items:
                        properties:
                          host:
                            description: The host from which the action described in the ACL rule is allowed or denied.
                            type: string
                          operation:
                            description: 'Operation which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.'
                            enum:
                              - Read
                              - Write
                              - Create
                              - Delete
                              - Alter
                              - Describe
                              - ClusterAction
                              - AlterConfigs
                              - DescribeConfigs
                              - IdempotentWrite
                              - All
                            type: string
                          operations:
                            description: 'List of operations which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.'
                            items:
                              enum:
                                - Read
                                - Write
                                - Create
                                - Delete
                                - Alter
                                - Describe
                                - ClusterAction
                                - AlterConfigs
                                - DescribeConfigs
                                - IdempotentWrite
                                - All
                              type: string
                            type: array
                          resource:
                            description: Indicates the resource for which given ACL rule applies.
                            properties:
                              name:
                                description: Name of resource for which given ACL rule applies. Can be combined with `patternType` field to use prefix pattern.
                                type: string
                              patternType:
                                description: Describes the pattern used in the resource field. The supported types are `literal` and `prefix`. With `literal` pattern type, the resource field will be used as a definition of a full name. With `prefix` pattern type, the resource name will be used only as a prefix. Default value is `literal`.
                                enum:
                                  - literal
                                  - prefix
                                type: string
                              type:
                                description: Resource type. The available resource types are `topic`, `group`, `cluster`, and `transactionalId`.
                                enum:
                                  - topic
                                  - group
                                  - cluster
                                  - transactionalId
                                type: string
                            required:
                              - type
                            type: object
                          type:
                            description: The type of the rule. Currently the only supported type is `allow`. ACL rules with type `allow` are used to allow user to execute the specified operations. Default value is `allow`.
                            enum:
                              - allow
                              - deny
                            type: string
                        required:
                          - resource
                        type: object
                      type: array
                    type:
                      description: Authorization type. Currently the only supported type is `simple`. `simple` authorization type uses Kafka's `kafka.security.authorizer.AclAuthorizer` class for authorization.
                      enum:
                        - simple
                      type: string
                  required:
                    - acls
                    - type
                  type: object
                quotas:
                  description: Quotas on requests to control the broker resources used by clients. Network bandwidth and request rate quotas can be enforced.Kafka documentation for Kafka User quotas can be found at http://kafka.apache.org/documentation/#design_quotas.
                  properties:
                    consumerByteRate:
                      description: A quota on the maximum bytes per-second that each client group can fetch from a broker before the clients in the group are throttled. Defined on a per-broker basis.
                      minimum: 0
                      type: integer
                    controllerMutationRate:
                      description: A quota on the rate at which mutations are accepted for the create topics request, the create partitions request and the delete topics request. The rate is accumulated by the number of partitions created or deleted.
                      minimum: 0
                      type: number
                    producerByteRate:
                      description: A quota on the maximum bytes per-second that each client group can publish to a broker before the clients in the group are throttled. Defined on a per-broker basis.
                      minimum: 0
                      type: integer
                    requestPercentage:
                      description: A quota on the maximum CPU utilization of each client group as a percentage of network and I/O threads.
                      minimum: 0
                      type: integer
                  type: object
                template:
                  description: Template to specify how Kafka User `Secrets` are generated.
                  properties:
                    secret:
                      description: Template for KafkaUser resources. The template allows users to specify how the `Secret` with password or TLS certificates is generated.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              description: Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                  type: object
              type: object
            status:
              description: The status of the Kafka User.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                secret:
                  description: The name of `Secret` where the credentials are stored.
                  type: string
                username:
                  description: Username.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  labels:
    app.kubernetes.io/component: kustomize-controller
    app.kubernetes.io/instance: fluxcd
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: v0.37.0
  name: kustomizations.kustomize.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: kustomize.toolkit.fluxcd.io
  names:
    kind: Kustomization
    listKind: KustomizationList
    plural: kustomizations
    shortNames:
      - ks
    singular: kustomization
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Kustomization is the Schema for the kustomizations API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KustomizationSpec defines the desired state of a kustomization.
              properties:
                decryption:
                  description: Decrypt Kubernetes secrets before applying them on the cluster.
                  properties:
                    provider:
                      description: Provider is the name of the decryption engine.
                      enum:
                        - sops
                      type: string
                    secretRef:
                      description: The secret name containing the private OpenPGP keys used for decryption.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - provider
                  type: object
                dependsOn:
                  description: DependsOn may contain a meta.NamespacedObjectReference slice with references to Kustomization resources that must be ready before this Kustomization can be reconciled.
                  items:
                    description: NamespacedObjectReference contains enough information to locate the referenced Kubernetes resource object in any namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                force:
                  default: false
                  description: Force instructs the controller to recreate resources when patching fails due to an immutable field change.
                  type: boolean
                healthChecks:
                  description: A list of resources to be included in the health assessment.
                  items:
                    description: NamespacedObjectKindReference contains enough information to locate the typed referenced Kubernetes resource object in any namespace.
                    properties:
                      apiVersion:
                        description: API version of the referent, if not specified the Kubernetes preferred version will be used.
                        type: string
                      kind:
                        description: Kind of the referent.
                        type: string
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                images:
                  description: Images is a list of (image name, new name, new tag or digest) for changing image names, tags or digests. This can also be achieved with a patch, but this operator is simpler to specify.
                  items:
                    description: Image contains an image name, a new name, a new tag or digest, which will replace the original name and tag.
                    properties:
                      digest:
                        description: Digest is the value used to replace the original image tag. If digest is present NewTag value is ignored.
                        type: string
                      name:
                        description: Name is a tag-less image name.
                        type: string
                      newName:
                        description: NewName is the value used to replace the original name.
                        type: string
                      newTag:
                        description: NewTag is the value used to replace the original tag.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                interval:
                  description: The interval at which to reconcile the Kustomization.
                  type: string
                kubeConfig:
                  description: The KubeConfig for reconciling the Kustomization on a remote cluster. When specified, KubeConfig takes precedence over ServiceAccountName.
                  properties:
                    secretRef:
                      description: SecretRef holds the name to a secret that contains a 'value' key with the kubeconfig file as the value. It must be in the same namespace as the Kustomization. It is recommended that the kubeconfig is self-contained, and the secret is regularly updated if credentials such as a cloud-access-token expire. Cloud specific `cmd-path` auth helpers will not function without adding binaries and credentials to the Pod that is responsible for reconciling the Kustomization.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  type: object
                patches:
                  description: Strategic merge and JSON patches, defined as inline YAML objects, capable of targeting objects based on kind, label and annotation selectors.
                  items:
                    description: Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should be applied to.
                    properties:
                      patch:
                        description: Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with an array of operation objects.
                        type: string
                      target:
                        description: Target points to the resources that the patch document should be applied to.
                        properties:
                          annotationSelector:
                            description: AnnotationSelector is a string that follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api It matches with the resource annotations.
                            type: string
                          group:
                            description: Group is the API group to select resources from. Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: Kind of the API Group to select resources from. Together with Group and Version it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: LabelSelector is a string that follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: Version of the API Group to select resources from. Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    type: object
                  type: array
                patchesJson6902:
                  description: JSON 6902 patches, defined as inline YAML objects.
                  items:
                    description: JSON6902Patch contains a JSON6902 patch and the target the patch should be applied to.
                    properties:
                      patch:
                        description: Patch contains the JSON6902 patch document with an array of operation objects.
                        items:
                          description: JSON6902 is a JSON6902 operation object. https://datatracker.ietf.org/doc/html/rfc6902#section-4
                          properties:
                            from:
                              description: From contains a JSON-pointer value that references a location within the target document where the operation is performed. The meaning of the value depends on the value of Op, and is NOT taken into account by all operations.
                              type: string
                            op:
                              description: Op indicates the operation to perform. Its value MUST be one of "add", "remove", "replace", "move", "copy", or "test". https://datatracker.ietf.org/doc/html/rfc6902#section-4
                              enum:
                                - test
                                - remove
                                - add
                                - replace
                                - move
                                - copy
                              type: string
                            path:
                              description: Path contains the JSON-pointer value that references a location within the target document where the operation is performed. The meaning of the value depends on the value of Op.
                              type: string
                            value:
                              description: Value contains a valid JSON structure. The meaning of the value depends on the value of Op, and is NOT taken into account by all operations.
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                            - op
                            - path
                          type: object
                        type: array
                      target:
                        description: Target points to the resources that the patch document should be applied to.
                        properties:
                          annotationSelector:
                            description: AnnotationSelector is a string that follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api It matches with the resource annotations.
                            type: string
                          group:
                            description: Group is the API group to select resources from. Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: Kind of the API Group to select resources from. Together with Group and Version it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: LabelSelector is a string that follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: Version of the API Group to select resources from. Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    required:
                      - patch
                      - target
                    type: object
                  type: array
                patchesStrategicMerge:
                  description: Strategic merge patches, defined as inline YAML objects.
                  items:
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                path:
                  description: Path to the directory containing the kustomization.yaml file, or the set of plain YAMLs a kustomization.yaml should be generated for. Defaults to 'None', which translates to the root path of the SourceRef.
                  type: string
                postBuild:
                  description: PostBuild describes which actions to perform on the YAML manifest generated by building the kustomize overlay.
                  properties:
                    substitute:
                      additionalProperties:
                        type: string
                      description: Substitute holds a map of key/value pairs. The variables defined in your YAML manifests that match any of the keys defined in the map will be substituted with the set value. Includes support for bash string replacement functions e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.
                      type: object
                    substituteFrom:
                      description: SubstituteFrom holds references to ConfigMaps and Secrets containing the variables and their values to be substituted in the YAML manifests. The ConfigMap and the Secret data keys represent the var names and they must match the vars declared in the manifests for the substitution to happen.
                      items:
                        description: SubstituteReference contains a reference to a resource containing the variables name and value.
                        properties:
                          kind:
                            description: Kind of the values referent, valid values are ('Secret', 'ConfigMap').
                            enum:
                              - Secret
                              - ConfigMap
                            type: string
                          name:
                            description: Name of the values referent. Should reside in the same namespace as the referring resource.
                            maxLength: 253
                            minLength: 1
                            type: string
                        required:
                          - kind
                          - name
                        type: object
                      type: array
                  type: object
                prune:
                  description: Prune enables garbage collection.
                  type: boolean
                retryInterval:
                  description: The interval at which to retry a previously failed reconciliation. When not specified, the controller uses the KustomizationSpec.Interval value to retry failures.
                  type: string
                serviceAccountName:
                  description: The name of the Kubernetes service account to impersonate when reconciling this Kustomization.
                  type: string
                sourceRef:
                  description: Reference of the source where the kustomization file is.
                  properties:
                    apiVersion:
                      description: API version of the referent
                      type: string
                    kind:
                      description: Kind of the referent
                      enum:
                        - GitRepository
                        - Bucket
                      type: string
                    name:
                      description: Name of the referent
                      type: string
                    namespace:
                      description: Namespace of the referent, defaults to the Kustomization namespace
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend subsequent kustomize executions, it does not apply to already started executions. Defaults to false.
                  type: boolean
                targetNamespace:
                  description: TargetNamespace sets or overrides the namespace in the kustomization.yaml file.
                  maxLength: 63
                  minLength: 1
                  type: string
                timeout:
                  description: Timeout for validation, apply and health checking operations. Defaults to 'Interval' duration.
                  type: string
                validation:
                  description: Validate the Kubernetes objects before applying them on the cluster. The validation strategy can be 'client' (local dry-run), 'server' (APIServer dry-run) or 'none'. When 'Force' is 'true', validation will fallback to 'client' if set to 'server' because server-side validation is not supported in this scenario.
                  enum:
                    - none
                    - client
                    - server
                  type: string
              required:
                - interval
                - prune
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: KustomizationStatus defines the observed state of a kustomization.
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastAppliedRevision:
                  description: The last successfully applied revision. The revision format for Git sources is <branch|tag>/<commit-sha>.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation attempt.
                  type: string
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most recent reconcile request value, so a change of the annotation value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
                snapshot:
                  description: The last successfully applied revision metadata.
                  properties:
                    checksum:
                      description: The manifests sha1 checksum.
                      type: string
                    entries:
                      description: A list of Kubernetes kinds grouped by namespace.
                      items:
                        description: Snapshot holds the metadata of namespaced Kubernetes objects
                        properties:
                          kinds:
                            additionalProperties:
                              type: string
                            description: The list of Kubernetes kinds.
                            type: object
                          namespace:
                            description: The namespace of this entry.
                            type: string
                        required:
                          - kinds
                        type: object
                      type: array
                  required:
                    - checksum
                    - entries
                  type: object
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: Kustomization is the Schema for the kustomizations API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KustomizationSpec defines the configuration to calculate the desired state from a Source using Kustomize.
              properties:
                decryption:
                  description: Decrypt Kubernetes secrets before applying them on the cluster.
                  properties:
                    provider:
                      description: Provider is the name of the decryption engine.
                      enum:
                        - sops
                      type: string
                    secretRef:
                      description: The secret name containing the private OpenPGP keys used for decryption.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - provider
                  type: object
                dependsOn:
                  description: DependsOn may contain a meta.NamespacedObjectReference slice with references to Kustomization resources that must be ready before this Kustomization can be reconciled.
                  items:
                    description: NamespacedObjectReference contains enough information to locate the referenced Kubernetes resource object in any namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                force:
                  default: false
                  description: Force instructs the controller to recreate resources when patching fails due to an immutable field change.
                  type: boolean
                healthChecks:
                  description: A list of resources to be included in the health assessment.
                  items:
                    description: NamespacedObjectKindReference contains enough information to locate the typed referenced Kubernetes resource object in any namespace.
                    properties:
                      apiVersion:
                        description: API version of the referent, if not specified the Kubernetes preferred version will be used.
                        type: string
                      kind:
                        description: Kind of the referent.
                        type: string
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                images:
                  description: Images is a list of (image name, new name, new tag or digest) for changing image names, tags or digests. This can also be achieved with a patch, but this operator is simpler to specify.
                  items:
                    description: Image contains an image name, a new name, a new tag or digest, which will replace the original name and tag.
                    properties:
                      digest:
                        description: Digest is the value used to replace the original image tag. If digest is present NewTag value is ignored.
                        type: string
                      name:
                        description: Name is a tag-less image name.
                        type: string
                      newName:
                        description: NewName is the value used to replace the original name.
                        type: string
                      newTag:
                        description: NewTag is the value used to replace the original tag.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                interval:
                  description: The interval at which to reconcile the Kustomization.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                kubeConfig:
                  description: The KubeConfig for reconciling the Kustomization on a remote cluster. When used in combination with KustomizationSpec.ServiceAccountName, forces the controller to act on behalf of that Service Account at the target cluster. If the --default-service-account flag is set, its value will be used as a controller level fallback for when KustomizationSpec.ServiceAccountName is empty.
                  properties:
                    secretRef:
                      description: SecretRef holds the name of a secret that contains a key with the kubeconfig file as the value. If no key is set, the key will default to 'value'. It is recommended that the kubeconfig is self-contained, and the secret is regularly updated if credentials such as a cloud-access-token expire. Cloud specific `cmd-path` auth helpers will not function without adding binaries and credentials to the Pod that is responsible for reconciling Kubernetes resources.
                      properties:
                        key:
                          description: Key in the Secret, when not specified an implementation-specific default key is used.
                          type: string
                        name:
                          description: Name of the Secret.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - secretRef
                  type: object
                patches:
                  description: Strategic merge and JSON patches, defined as inline YAML objects, capable of targeting objects based on kind, label and annotation selectors.
                  items:
                    description: Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should be applied to.
                    properties:
                      patch:
                        description: Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with an array of operation objects.
                        type: string
                      target:
                        description: Target points to the resources that the patch document should be applied to.
                        properties:
                          annotationSelector:
                            description: AnnotationSelector is a string that follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api It matches with the resource annotations.
                            type: string
                          group:
                            description: Group is the API group to select resources from. Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: Kind of the API Group to select resources from. Together with Group and Version it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: LabelSelector is a string that follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: Version of the API Group to select resources from. Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    type: object
                  type: array
                patchesJson6902:
                  description: 'JSON 6902 patches, defined as inline YAML objects. Deprecated: Use Patches instead.'
                  items:
                    description: JSON6902Patch contains a JSON6902 patch and the target the patch should be applied to.
                    properties:
                      patch:
                        description: Patch contains the JSON6902 patch document with an array of operation objects.
                        items:
                          description: JSON6902 is a JSON6902 operation object. https://datatracker.ietf.org/doc/html/rfc6902#section-4
                          properties:
                            from:
                              description: From contains a JSON-pointer value that references a location within the target document where the operation is performed. The meaning of the value depends on the value of Op, and is NOT taken into account by all operations.
                              type: string
                            op:
                              description: Op indicates the operation to perform. Its value MUST be one of "add", "remove", "replace", "move", "copy", or "test". https://datatracker.ietf.org/doc/html/rfc6902#section-4
                              enum:
                                - test
                                - remove
                                - add
                                - replace
                                - move
                                - copy
                              type: string
                            path:
                              description: Path contains the JSON-pointer value that references a location within the target document where the operation is performed. The meaning of the value depends on the value of Op.
                              type: string
                            value:
                              description: Value contains a valid JSON structure. The meaning of the value depends on the value of Op, and is NOT taken into account by all operations.
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                            - op
                            - path
                          type: object
                        type: array
                      target:
                        description: Target points to the resources that the patch document should be applied to.
                        properties:
                          annotationSelector:
                            description: AnnotationSelector is a string that follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api It matches with the resource annotations.
                            type: string
                          group:
                            description: Group is the API group to select resources from. Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: Kind of the API Group to select resources from. Together with Group and Version it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: LabelSelector is a string that follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: Version of the API Group to select resources from. Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    required:
                      - patch
                      - target
                    type: object
                  type: array
                patchesStrategicMerge:
                  description: 'Strategic merge patches, defined as inline YAML objects. Deprecated: Use Patches instead.'
                  items:
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                path:
                  description: Path to the directory containing the kustomization.yaml file, or the set of plain YAMLs a kustomization.yaml should be generated for. Defaults to 'None', which translates to the root path of the SourceRef.
                  type: string
                postBuild:
                  description: PostBuild describes which actions to perform on the YAML manifest generated by building the kustomize overlay.
                  properties:
                    substitute:
                      additionalProperties:
                        type: string
                      description: Substitute holds a map of key/value pairs. The variables defined in your YAML manifests that match any of the keys defined in the map will be substituted with the set value. Includes support for bash string replacement functions e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.
                      type: object
                    substituteFrom:
                      description: SubstituteFrom holds references to ConfigMaps and Secrets containing the variables and their values to be substituted in the YAML manifests. The ConfigMap and the Secret data keys represent the var names and they must match the vars declared in the manifests for the substitution to happen.
                      items:
                        description: SubstituteReference contains a reference to a resource containing the variables name and value.
                        properties:
                          kind:
                            description: Kind of the values referent, valid values are ('Secret', 'ConfigMap').
                            enum:
                              - Secret
                              - ConfigMap
                            type: string
                          name:
                            description: Name of the values referent. Should reside in the same namespace as the referring resource.
                            maxLength: 253
                            minLength: 1
                            type: string
                          optional:
                            default: false
                            description: Optional indicates whether the referenced resource must exist, or whether to tolerate its absence. If true and the referenced resource is absent, proceed as if the resource was present but empty, without any variables defined.
                            type: boolean
                        required:
                          - kind
                          - name
                        type: object
                      type: array
                  type: object
                prune:
                  description: Prune enables garbage collection.
                  type: boolean
                retryInterval:
                  description: The interval at which to retry a previously failed reconciliation. When not specified, the controller uses the KustomizationSpec.Interval value to retry failures.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                serviceAccountName:
                  description: The name of the Kubernetes service account to impersonate when reconciling this Kustomization.
                  type: string
                sourceRef:
                  description: Reference of the source where the kustomization file is.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: Kind of the referent.
                      enum:
                        - OCIRepository
                        - GitRepository
                        - Bucket
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                    namespace:
                      description: Namespace of the referent, defaults to the namespace of the Kubernetes resource object that contains the reference.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend subsequent kustomize executions, it does not apply to already started executions. Defaults to false.
                  type: boolean
                targetNamespace:
                  description: TargetNamespace sets or overrides the namespace in the kustomization.yaml file.
                  maxLength: 63
                  minLength: 1
                  type: string
                timeout:
                  description: Timeout for validation, apply and health checking operations. Defaults to 'Interval' duration.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                validation:
                  description: 'Deprecated: Not used in v1beta2.'
                  enum:
                    - none
                    - client
                    - server
                  type: string
                wait:
                  description: Wait instructs the controller to check the health of all the reconciled resources. When enabled, the HealthChecks are ignored. Defaults to false.
                  type: boolean
              required:
                - interval
                - prune
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: KustomizationStatus defines the observed state of a kustomization.
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                inventory:
                  description: Inventory contains the list of Kubernetes resource object references that have been successfully applied.
                  properties:
                    entries:
                      description: Entries of Kubernetes resource object references.
                      items:
                        description: ResourceRef contains the information necessary to locate a resource within a cluster.
                        properties:
                          id:
                            description: ID is the string representation of the Kubernetes resource object's metadata, in the format '<namespace>_<name>_<group>_<kind>'.
                            type: string
                          v:
                            description: Version is the API version of the Kubernetes resource object's kind.
                            type: string
                        required:
                          - id
                          - v
                        type: object
                      type: array
                  required:
                    - entries
                  type: object
                lastAppliedRevision:
                  description: The last successfully applied revision. The revision format for Git sources is <branch|tag>/<commit-sha>.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation attempt.
                  type: string
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most recent reconcile request value, so a change of the annotation value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  labels:
    app.kubernetes.io/component: source-controller
    app.kubernetes.io/instance: fluxcd
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: v0.37.0
  name: ocirepositories.source.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: source.toolkit.fluxcd.io
  names:
    kind: OCIRepository
    listKind: OCIRepositoryList
    plural: ocirepositories
    shortNames:
      - ocirepo
    singular: ocirepository
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: OCIRepository is the Schema for the ocirepositories API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: OCIRepositorySpec defines the desired state of OCIRepository
              properties:
                certSecretRef:
                  description: "CertSecretRef can be given the name of a secret containing either or both of \n - a PEM-encoded client certificate (`certFile`) and private key (`keyFile`); - a PEM-encoded CA certificate (`caFile`) \n and whichever are supplied, will be used for connecting to the registry. The client cert and key are useful if you are authenticating with a certificate; the CA cert is useful if you are using a self-signed server certificate."
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                ignore:
                  description: Ignore overrides the set of excluded patterns in the .sourceignore format (which is the same as .gitignore). If not provided, a default will be used, consult the documentation for your version to find out what those are.
                  type: string
                insecure:
                  description: Insecure allows connecting to a non-TLS HTTP container registry.
                  type: boolean
                interval:
                  description: The interval at which to check for image updates.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                layerSelector:
                  description: LayerSelector specifies which layer should be extracted from the OCI artifact. When not specified, the first layer found in the artifact is selected.
                  properties:
                    mediaType:
                      description: MediaType specifies the OCI media type of the layer which should be extracted from the OCI Artifact. The first layer matching this type is selected.
                      type: string
                    operation:
                      description: Operation specifies how the selected layer should be processed. By default, the layer compressed content is extracted to storage. When the operation is set to 'copy', the layer compressed content is persisted to storage as it is.
                      enum:
                        - extract
                        - copy
                      type: string
                  type: object
                provider:
                  default: generic
                  description: The provider used for authentication, can be 'aws', 'azure', 'gcp' or 'generic'. When not specified, defaults to 'generic'.
                  enum:
                    - generic
                    - aws
                    - azure
                    - gcp
                  type: string
                ref:
                  description: The OCI reference to pull and monitor for changes, defaults to the latest tag.
                  properties:
                    digest:
                      description: Digest is the image digest to pull, takes precedence over SemVer. The value should be in the format 'sha256:<HASH>'.
                      type: string
                    semver:
                      description: SemVer is the range of tags to pull selecting the latest within the range, takes precedence over Tag.
                      type: string
                    tag:
                      description: Tag is the image tag to pull, defaults to latest.
                      type: string
                  type: object
                secretRef:
                  description: SecretRef contains the secret name containing the registry login credentials to resolve image metadata. The secret must be of type kubernetes.io/dockerconfigjson.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                serviceAccountName:
                  description: 'ServiceAccountName is the name of the Kubernetes ServiceAccount used to authenticate the image pull if the service account has attached pull secrets. For more information: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account'
                  type: string
                suspend:
                  description: This flag tells the controller to suspend the reconciliation of this source.
                  type: boolean
                timeout:
                  default: 60s
                  description: The timeout for remote OCI Repository operations like pulling, defaults to 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                url:
                  description: URL is a reference to an OCI artifact repository hosted on a remote container registry.
                  pattern: ^oci://.*$
                  type: string
                verify:
                  description: Verify contains the secret name containing the trusted public keys used to verify the signature and specifies which provider to use to check whether OCI image is authentic.
                  properties:
                    provider:
                      default: cosign
                      description: Provider specifies the technology used to sign the OCI Artifact.
                      enum:
                        - cosign
                      type: string
                    secretRef:
                      description: SecretRef specifies the Kubernetes Secret containing the trusted public keys.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - provider
                  type: object
              required:
                - interval
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: OCIRepositoryStatus defines the observed state of OCIRepository
              properties:
                artifact:
                  description: Artifact represents the output of the last successful OCI Repository sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the Artifact file.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to the last update of the Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: Path is the relative file path of the Artifact. It can be used to locate the file in the root of the Artifact storage on the local file system of the controller managing the Source.
                      type: string
                    revision:
                      description: Revision is a human-readable identifier traceable in the origin source system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: URL is the HTTP address of the Artifact as exposed by the controller managing the Source. It can be used to retrieve the Artifact for consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - path
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the OCIRepository.
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                contentConfigChecksum:
                  description: "ContentConfigChecksum is a checksum of all the configurations related to the content of the source artifact: - .spec.ignore - .spec.layerSelector observed in .status.observedGeneration version of the object. This can be used to determine if the content configuration has changed and the artifact needs to be rebuilt. It has the format of `<algo>:<checksum>`, for example: `sha256:<checksum>`. \n Deprecated: Replaced with explicit fields for observed artifact content config in the status."
                  type: string
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most recent reconcile request value, so a change of the annotation value can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                observedIgnore:
                  description: ObservedIgnore is the observed exclusion patterns used for constructing the source artifact.
                  type: string
                observedLayerSelector:
                  description: ObservedLayerSelector is the observed layer selector used for constructing the source artifact.
                  properties:
                    mediaType:
                      description: MediaType specifies the OCI media type of the layer which should be extracted from the OCI Artifact. The first layer matching this type is selected.
                      type: string
                    operation:
                      description: Operation specifies how the selected layer should be processed. By default, the layer compressed content is extracted to storage. When the operation is set to 'copy', the layer compressed content is persisted to storage as it is.
                      enum:
                        - extract
                        - copy
                      type: string
                  type: object
                url:
                  description: URL is the download link for the artifact output of the last OCI Repository sync.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    component: stirmzipodsets.core.strimzi.io-crd
    strimzi.io/crd-install: "true"
  name: strimzipodsets.core.strimzi.io
spec:
  conversion:
    strategy: None
  group: core.strimzi.io
  names:
    categories:
      - strimzi
    kind: StrimziPodSet
    listKind: StrimziPodSetList
    plural: strimzipodsets
    shortNames:
      - sps
    singular: strimzipodset
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Number of pods managed by the StrimziPodSet
          jsonPath: .status.pods
          name: Pods
          type: integer
        - description: Number of ready pods managed by the StrimziPodSet
          jsonPath: .status.readyPods
          name: Ready Pods
          type: integer
        - description: Number of up-to-date pods managed by the StrimziPodSet
          jsonPath: .status.currentPods
          name: Current Pods
          type: integer
        - description: Age of the StrimziPodSet
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: The specification of the StrimziPodSet.
              properties:
                pods:
                  description: The Pods managed by this StrimziPodSet.
                  items:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                selector:
                  description: Selector is a label query which matches all the pods managed by this `StrimziPodSet`. Only `matchLabels` is supported. If `matchExpressions` is set, it will be ignored.
                  properties:
                    matchExpressions:
                      items:
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                          values:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    matchLabels:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
              required:
                - selector
                - pods
              type: object
            status:
              description: The status of the StrimziPodSet.
              properties:
                conditions:
                  description: List of status conditions.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
                        type: string
                      message:
                        description: Human-readable message indicating details about the condition's last transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition (a single word in CamelCase).
                        type: string
                      status:
                        description: The status of the condition, either True, False or Unknown.
                        type: string
                      type:
                        description: The unique identifier of a condition, used to distinguish between other conditions in the resource.
                        type: string
                    type: object
                  type: array
                currentPods:
                  description: Number of pods managed by the StrimziPodSet controller that have the current revision.
                  type: integer
                observedGeneration:
                  description: The generation of the CRD that was last reconciled by the operator.
                  type: integer
                pods:
                  description: Number of pods managed by the StrimziPodSet controller.
                  type: integer
                readyPods:
                  description: Number of pods managed by the StrimziPodSet controller that are ready.
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

